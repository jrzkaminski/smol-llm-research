[
    {
        "name": "file_character_count",
        "description": "Count the number of characters in a file and return",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path for which to count the number of characters"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "character_count": {
                    "type": "integer",
                    "description": "The number of characters in the file content"
                }
            }
        }
    },
    {
        "name": "file_rename",
        "description": "Used to change the name of a file.",
        "arguments": {
            "type": "object",
            "properties": {
                "original_file_path": {
                    "description": "Original file path",
                    "type": "string"
                },
                "new_file_path": {
                    "description": "New file path",
                    "type": "string"
                },
                "new_name": {
                    "type": "string",
                    "description": "New file name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the rename operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "file_write",
        "description": "Used to write content to a specified file. If the file does not exist, a new file will be created.",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "description": "The file path where the content will be written",
                    "type": "string"
                },
                "content": {
                    "description": "The content to be written",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the write operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "update_hyperlinks_text",
        "description": "Update all hyperlinks in the document that reference the specified text, updating their text to new text",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                },
                "old_text": {
                    "type": "string",
                    "description": "Original hyperlink text"
                },
                "new_text": {
                    "type": "string",
                    "description": "New hyperlink text"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the hyperlink text update operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "file_copy",
        "description": "Used for copying files to a specified path.",
        "arguments": {
            "type": "object",
            "properties": {
                "source_file_path": {
                    "type": "string",
                    "description": "Source file path"
                },
                "destination_file_path": {
                    "type": "string",
                    "description": "Destination file path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the copy operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "set_file_readonly",
        "description": "Set file permission to read-only",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                },
                "readonly": {
                    "type": "boolean",
                    "description": "Whether to set to read-only"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the operation was successful"
                }
            }
        }
    },
    {
        "name": "set_file_encoding",
        "description": "Set the encoding format of a specified file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The full path of the file"
                },
                "encoding": {
                    "type": "string",
                    "description": "The file encoding format to set"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the encoding setting operation was successful"
                }
            }
        }
    },
    {
        "name": "file_contains",
        "description": "Check if the file contains the specified text content",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path to check"
                },
                "content": {
                    "type": "string",
                    "description": "The content to verify"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contains": {
                    "type": "boolean",
                    "description": "Whether the file contains the specified content"
                }
            }
        }
    },
    {
        "name": "file_delete",
        "description": "Used to delete a file at a specified path. After performing file_write or file_modify operations, if the related file is no longer needed, this API can be executed to delete it.",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "description": "The file path to be deleted",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the delete operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "check_file_content",
        "description": "Verify if the content of the specified file is consistent with the expectation",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path of the content to be verified"
                },
                "expected_content": {
                    "type": "string",
                    "description": "The expected file content"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "check_status": {
                    "type": "boolean",
                    "description": "Whether the content is consistent with the expectation"
                }
            }
        }
    },
    {
        "name": "rename_file",
        "description": "Rename the file",
        "arguments": {
            "type": "object",
            "properties": {
                "original_file_path": {
                    "description": "Original file path",
                    "type": "string"
                },
                "new_file_name": {
                    "description": "New file name",
                    "type": "string"
                },
                "new_file_path": {
                    "description": "New file path",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the rename operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "confirm_email_sent",
        "description": "Confirm whether a confirmation email has been sent to the specified email address",
        "arguments": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string",
                    "description": "The email address to confirm for email sending"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "email_sent_status": {
                    "type": "string",
                    "description": "Email sending status"
                }
            }
        }
    },
    {
        "name": "file_prepend",
        "description": "Add content at the beginning of the file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                },
                "content": {
                    "type": "string",
                    "description": "Text to insert"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the operation was successful"
                }
            }
        }
    },
    {
        "name": "check_included_services",
        "description": "Check if specific services are included in the booking order.",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                },
                "service": {
                    "type": "string",
                    "description": "The service to be confirmed"
                },
                "order_details": {
                    "type": "object",
                    "description": "Order details"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "included": {
                    "type": "boolean",
                    "description": "Whether the service is included in the booking"
                },
                "included_services": {
                    "type": "array",
                    "description": "List of services included in the order"
                }
            }
        }
    },
    {
        "name": "text_replace",
        "description": "Find and replace specified text in a file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The full path of the file"
                },
                "find": {
                    "type": "string",
                    "description": "The text to find"
                },
                "replace": {
                    "type": "string",
                    "description": "The new text to replace with"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the replace operation was successful"
                }
            }
        }
    },
    {
        "name": "system_file_upload",
        "description": "Used for logging into the system and uploading files, if the file at the target path already exists, then replace its content",
        "arguments": {
            "type": "object",
            "properties": {
                "system_url": {
                    "type": "string",
                    "description": "The URL address of the system"
                },
                "username": {
                    "type": "string",
                    "description": "Login username"
                },
                "password": {
                    "type": "string",
                    "description": "Login password"
                },
                "file_path": {
                    "type": "string",
                    "description": "The path of the file in the system"
                },
                "content": {
                    "type": "string",
                    "description": "The content of the file to be uploaded"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the upload operation was successful"
                }
            }
        }
    },
    {
        "name": "file_read",
        "description": "Used to read the content of a specified file.",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "description": "The file path of the content to be read",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the read operation was successful",
                    "type": "boolean"
                },
                "content": {
                    "description": "The content of the file",
                    "type": "string"
                },
                "encoding": {
                    "description": "The encoding format of the file",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "verify_file_content",
        "description": "Verify if the content of the specified file matches the expectation",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The path of the file"
                },
                "expected_content": {
                    "type": "string",
                    "description": "The expected content of the file"
                },
                "required_contents": {
                    "type": "array",
                    "description": "List of contents that must be included in the file",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "match": {
                    "type": "boolean",
                    "description": "Whether the file content matches the expectation"
                },
                "verification_status": {
                    "type": "string",
                    "description": "The verification status of the file content"
                }
            }
        }
    },
    {
        "name": "file_modify",
        "description": "Used to modify the content of an existing file.",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "description": "The file path of the content to be modified",
                    "type": "string"
                },
                "new_file_path": {
                    "description": "The new file path",
                    "type": "string"
                },
                "content": {
                    "description": "The new content to be modified to",
                    "type": "string"
                },
                "append_content": {
                    "description": "The new content to be appended",
                    "type": "string"
                },
                "original_content": {
                    "description": "The original text to be modified",
                    "type": "string"
                },
                "section": {
                    "description": "The section position to be modified",
                    "type": "string"
                },
                "new_title": {
                    "description": "The new title after modification",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the modification operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "insert_info_to_document",
        "description": "Insert information into a specified document",
        "arguments": {
            "type": "object",
            "properties": {
                "document_id": {
                    "type": "string",
                    "description": "Document ID"
                },
                "info": {
                    "type": "string",
                    "description": "Information to be inserted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the information was successfully inserted",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "change_file_permission",
        "description": "Change the permission settings of a specified file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                },
                "permission": {
                    "type": "string",
                    "description": "Permission code to set"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_status": {
                    "type": "string",
                    "description": "File permission change status"
                }
            }
        }
    },
    {
        "name": "correct_errors",
        "description": "Correct errors in the document",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path of the document"
                },
                "errors": {
                    "type": "array",
                    "description": "List of errors to be corrected"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "correction_status": {
                    "type": "boolean",
                    "description": "Whether all errors have been corrected"
                }
            }
        }
    },
    {
        "name": "check_file_modification_time",
        "description": "Check the last modification time of the file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path to check"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "modification_time": {
                    "description": "The last modification time of the file",
                    "type": "string"
                },
                "status": {
                    "description": "Whether the operation to get the modification time was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "create_folder",
        "description": "Create a new folder at the specified path",
        "arguments": {
            "type": "object",
            "properties": {
                "folder_path": {
                    "type": "string",
                    "description": "The path of the new folder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the folder was created successfully"
                }
            }
        }
    },
    {
        "name": "file_copy_rename",
        "description": "Used for copying and renaming files",
        "arguments": {
            "type": "object",
            "properties": {
                "original_file_path": {
                    "type": "string",
                    "description": "Original file path"
                },
                "new_file_path": {
                    "type": "string",
                    "description": "New file path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the copy and rename operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "add_sheet_with_columns",
        "description": "Add a new worksheet to a spreadsheet file and set a specified number of columns",
        "arguments": {
            "type": "object",
            "properties": {
                "spreadsheet_path": {
                    "type": "string",
                    "description": "The path of the spreadsheet file"
                },
                "sheet_name": {
                    "type": "string",
                    "description": "The name of the new worksheet"
                },
                "columns_count": {
                    "type": "integer",
                    "description": "The number of columns to add"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the worksheet addition operation was successful"
                }
            }
        }
    },
    {
        "name": "check_file_deleted",
        "description": "Used to check if the file has been successfully deleted.",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The path of the file"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "deletion_status": {
                    "type": "string",
                    "description": "The deletion status of the file"
                }
            }
        }
    },
    {
        "name": "delete_files_except",
        "description": "Delete all files with the specified name, except for files in a specific path",
        "arguments": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "description": "The name of the file to delete"
                },
                "except_path": {
                    "type": "string",
                    "description": "The path where files will not be deleted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the delete operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "modify_transaction",
        "description": "Modify the content of a transaction, based on the transaction ID",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "description": "The transaction ID to modify",
                    "type": "string"
                },
                "amount": {
                    "description": "The new transaction amount, in RMB",
                    "type": "integer"
                },
                "description": {
                    "description": "The new transaction description",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "The status of the modification",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "delete_text",
        "description": "Delete specified text from a file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path of the text to be deleted"
                },
                "text_positions": {
                    "type": "array",
                    "description": "List of text positions to be deleted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the delete operation was successful"
                }
            }
        }
    },
    {
        "name": "check_file_existence",
        "description": "Check if the file at the specified path exists",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path to check"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "existence": {
                    "type": "boolean",
                    "description": "Whether the file exists"
                }
            }
        }
    },
    {
        "name": "ssh_connect",
        "description": "Connect to a server using SSH protocol",
        "arguments": {
            "type": "object",
            "properties": {
                "server_address": {
                    "type": "string",
                    "description": "The IP address or domain name of the server"
                },
                "username": {
                    "type": "string",
                    "description": "The username to log in to the server"
                },
                "password": {
                    "type": "string",
                    "description": "The password to log in to the server"
                },
                "key": {
                    "type": "string",
                    "description": "The key"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "connection_status": {
                    "type": "string",
                    "description": "Whether the connection to the server was successful"
                },
                "status": {
                    "type": "boolean",
                    "description": "Whether the connection operation was successful"
                }
            }
        }
    },
    {
        "name": "locate_and_delete_section",
        "description": "Locate a specific section in a file and delete it",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                },
                "section": {
                    "type": "string",
                    "description": "Identifier of the file section to be deleted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the delete operation was successful"
                }
            }
        }
    },
    {
        "name": "check_order_status",
        "description": "Check the latest status of the order",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                },
                "order_id": {
                    "description": "Order ID",
                    "type": "integer"
                },
                "account_id": {
                    "type": "string",
                    "description": "User Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "The latest status of the order",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "save_document",
        "description": "Save changes to the document",
        "arguments": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "object",
                    "description": "The document object to be saved"
                },
                "location": {
                    "type": "string",
                    "description": "The location to save the document"
                },
                "document_id": {
                    "type": "string",
                    "description": "The document id to be saved"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "save_status": {
                    "description": "Whether the document was saved successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "delete_schedule",
        "description": "Delete the specified schedule event",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "The ID of the schedule"
                },
                "confirm_deletion": {
                    "type": "boolean",
                    "description": "Confirm the deletion of this schedule"
                },
                "user_id": {
                    "type": "string",
                    "description": "User ID"
                },
                "start_date": {
                    "type": "string",
                    "description": "Start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the schedule was successfully deleted",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_schedule_deleted",
        "description": "Check if a specific related schedule has been deleted",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "The id of the schedule to be checked"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "deleted": {
                    "description": "Whether the related schedule has been deleted",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "remove_specific_text",
        "description": "Remove specified text content from a document",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The path of the document"
                },
                "text": {
                    "type": "string",
                    "description": "The text content to be removed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the delete operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "delete_specific_content",
        "description": "Delete specific content in a file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path containing the content to be deleted"
                },
                "content_to_delete": {
                    "type": "string",
                    "description": "The content to be deleted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the operation to delete specific content was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "delete_transaction_by_amount",
        "description": "Delete transaction records by transaction amount",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                },
                "amount": {
                    "type": "integer",
                    "description": "Transaction amount to delete"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the deletion"
                }
            }
        }
    },
    {
        "name": "modify_section_title",
        "description": "Locate the specified title in the document and modify it to a new title",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                },
                "old_title": {
                    "type": "string",
                    "description": "Original title"
                },
                "new_title": {
                    "type": "string",
                    "description": "New title"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the title modification operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "delete_files_with_extension",
        "description": "Delete all files with a specific extension in the specified directory",
        "arguments": {
            "type": "object",
            "properties": {
                "directory": {
                    "description": "The path of the directory to search",
                    "type": "string"
                },
                "extension": {
                    "description": "The extension of the files to be deleted",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the delete operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "reset_password",
        "description": "Account Password Reset Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                },
                "verification_code": {
                    "type": "string",
                    "description": "Verification Code"
                },
                "new_password": {
                    "type": "string",
                    "description": "Newly Set Password"
                },
                "verification_method": {
                    "type": "string",
                    "description": "Verification Method, such as email or mobile phone"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reset_status": {
                    "type": "string",
                    "description": "Password Reset Status"
                }
            }
        }
    },
    {
        "name": "upload_document_to_server",
        "description": "Upload the specified document to the backup folder on the server",
        "arguments": {
            "type": "object",
            "properties": {
                "document_id": {
                    "type": "string",
                    "description": "The ID of the document to be uploaded"
                },
                "backup_id": {
                    "type": "string",
                    "description": "The unique identifier for the backup"
                },
                "server_location": {
                    "type": "string",
                    "description": "The geographical location of the server"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the upload was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "save_data_to_file",
        "description": "Save specified type of data to a file",
        "arguments": {
            "type": "object",
            "properties": {
                "data_type": {
                    "description": "Data type",
                    "type": "string"
                },
                "data": {
                    "description": "Data to be saved",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "save_status": {
                    "description": "Data save status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "file_backup",
        "description": "Used for backing up specified files.",
        "arguments": {
            "type": "object",
            "properties": {
                "source_file_path": {
                    "type": "string",
                    "description": "Source file path"
                },
                "backup_file_path": {
                    "type": "string",
                    "description": "Backup file path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the backup operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "query_weather",
        "description": "Query the weather forecast for a specified location",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location to query the weather for"
                },
                "date": {
                    "type": "string",
                    "description": "The date to query the weather for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "weather_info": {
                    "type": "string",
                    "description": "Weather condition information"
                }
            }
        }
    },
    {
        "name": "weather_query",
        "description": "Get the weather forecast for a specified location and date",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date for which to obtain the weather forecast"
                },
                "location": {
                    "type": "string",
                    "description": "The location for which to query the weather"
                },
                "forecast_hours": {
                    "type": "integer",
                    "description": "Forecast time (hours)",
                    "minimum": 1,
                    "maximum": 24
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "weather_info": {
                    "type": "string",
                    "description": "Weather forecast information"
                },
                "weather_data": {
                    "type": "object",
                    "description": "The obtained weather data, including temperature, probability of precipitation, wind speed, etc."
                },
                "status": {
                    "type": "boolean",
                    "description": "Whether the retrieval operation was successful"
                },
                "temperature": {
                    "type": "string",
                    "description": "Temperature information"
                },
                "humidity": {
                    "type": "string",
                    "description": "Humidity information"
                },
                "weather_status": {
                    "type": "string",
                    "description": "Current weather condition description"
                }
            }
        }
    },
    {
        "name": "present_weather_report",
        "description": "Present the weather report in a way preferred by the user",
        "arguments": {
            "type": "object",
            "properties": {
                "preferred_method": {
                    "type": "string",
                    "description": "The preferred method of report presentation by the user"
                },
                "all_day_weather": {
                    "type": "string",
                    "description": "Overview of the all-day weather conditions"
                },
                "specific_time_weather": {
                    "type": "string",
                    "description": "Weather forecast for a specific time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "presentation_status": {
                    "type": "string",
                    "description": "Status of whether the report presentation was successful"
                }
            }
        }
    },
    {
        "name": "set_weather_change_alert",
        "description": "Set weather condition change alert tool",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "departureCity": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrivalCity": {
                    "type": "string",
                    "description": "Arrival city"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "alert_status": {
                    "type": "string",
                    "description": "Alert setting status"
                }
            }
        }
    },
    {
        "name": "verify_transaction_record",
        "description": "Verify whether the transaction at a specific time and amount has been officially recorded",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_time": {
                    "type": "string",
                    "description": "The time when the transaction occurred"
                },
                "amount": {
                    "type": "integer",
                    "description": "The amount of the transaction"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "The status of whether the transaction exists",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "server_login",
        "description": "Used for server login",
        "arguments": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "Server login credentials"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "type": "string",
                    "description": "Whether the login operation was successful"
                }
            }
        }
    },
    {
        "name": "account_login",
        "description": "Account Login Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID",
                    "type": "integer"
                },
                "verification_code": {
                    "description": "Verification Code",
                    "type": "string"
                },
                "username": {
                    "description": "Username",
                    "type": "string"
                },
                "password": {
                    "description": "User Password",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "description": "Login Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_last_login_info",
        "description": "Get the account's last login time and location record",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "last_login_time": {
                    "type": "string",
                    "description": "Time of the last login"
                },
                "last_login_ip": {
                    "type": "string",
                    "description": "IP address of the last login"
                }
            }
        }
    },
    {
        "name": "check_file_removal",
        "description": "Verify if the file at the specified path has been securely removed",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path to verify removal"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "removal": {
                    "type": "boolean",
                    "description": "Whether the file has been securely removed"
                }
            }
        }
    },
    {
        "name": "provider_platform_login_or_register",
        "description": "Register or log in to the online meeting room service provider's platform",
        "arguments": {
            "type": "object",
            "properties": {
                "service_provider": {
                    "type": "string",
                    "description": "Service Provider"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "type": "string",
                    "description": "Login or registration status"
                }
            }
        }
    },
    {
        "name": "contact_IT_for_network_stability",
        "description": "Contact IT department to confirm the network connectivity stability of a designated meeting room at a specific time",
        "arguments": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "type": "string",
                    "description": "Contact information of the IT department"
                },
                "roomID": {
                    "type": "string",
                    "description": "Meeting room ID"
                },
                "city": {
                    "type": "string",
                    "description": "City where the meeting room is located"
                },
                "date": {
                    "type": "string",
                    "description": "Meeting date"
                },
                "startTime": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "endTime": {
                    "type": "string",
                    "description": "Meeting end time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "network_stability_status": {
                    "type": "string",
                    "description": "Status of the network connectivity stability"
                }
            }
        }
    },
    {
        "name": "check_network_security",
        "description": "Check if the current network environment is secure",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "security_status": {
                    "description": "Network security status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "cloud_service_login",
        "description": "Used for logging into cloud service accounts",
        "arguments": {
            "type": "object",
            "properties": {
                "service_url": {
                    "type": "string",
                    "description": "URL of the cloud service website/application"
                },
                "account_name": {
                    "type": "string",
                    "description": "User account name"
                },
                "password": {
                    "type": "string",
                    "description": "User password"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "type": "string",
                    "description": "Status of whether the login operation was successful"
                }
            }
        }
    },
    {
        "name": "set_photo_reminder_and_storage",
        "description": "Remind users to take photos and create cloud albums for photo storage",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Set the start date for the reminder"
                },
                "reminder": {
                    "type": "string",
                    "description": "Reminder content"
                },
                "storage": {
                    "type": "string",
                    "description": "Photo storage location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "storage_status": {
                    "type": "string",
                    "description": "Status of whether the storage creation was successful"
                }
            }
        }
    },
    {
        "name": "copy_and_rename_file",
        "description": "Copy and rename file",
        "arguments": {
            "type": "object",
            "properties": {
                "original_file_path": {
                    "type": "string",
                    "description": "The full path of the original file"
                },
                "backup_file_path": {
                    "type": "string",
                    "description": "The full path of the backup file"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the copy and rename operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "move_file",
        "description": "Move the file from the source path to the target path.",
        "arguments": {
            "type": "object",
            "properties": {
                "source_file_path": {
                    "type": "string",
                    "description": "Source file path"
                },
                "target_directory": {
                    "type": "string",
                    "description": "Target directory path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the file move operation was successful"
                }
            }
        }
    },
    {
        "name": "notify_user_by_phone",
        "description": "Notify user information by phone",
        "arguments": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string",
                    "description": "User's contact phone number"
                },
                "message": {
                    "type": "string",
                    "description": "The information to notify the user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "send_transaction_notification",
        "description": "Send transaction notification to the user's email",
        "arguments": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The user's email address"
                },
                "transaction_details": {
                    "type": "string",
                    "description": "The detailed information of the transaction"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of the email sent"
                }
            }
        }
    },
    {
        "name": "check_notifications",
        "description": "Check and record any abnormal notifications",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Check status",
                    "type": "string"
                },
                "notifications": {
                    "description": "Content of abnormal notifications",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_notifications",
        "description": "Send notifications to users",
        "arguments": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Notification content"
                },
                "event": {
                    "type": "string",
                    "description": "Event name"
                },
                "time": {
                    "type": "string",
                    "description": "Time"
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number"
                },
                "participants": {
                    "type": "array",
                    "description": "List of participant emails",
                    "items": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "notification_type": {
                    "type": "string",
                    "description": "Type of notification"
                },
                "meeting_id": {
                    "type": "string",
                    "description": "Meeting ID to notify"
                },
                "schedule_id": {
                    "type": "string",
                    "description": "Schedule ID of the meeting"
                },
                "agenda_id": {
                    "type": "string",
                    "description": "Agenda ID of the meeting"
                },
                "start_time": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Meeting end time"
                },
                "gate_info": {
                    "type": "string",
                    "description": "Boarding gate information"
                },
                "seatNumber": {
                    "type": "string",
                    "description": "Seat number"
                },
                "location": {
                    "type": "string",
                    "description": "Location"
                },
                "meeting_topic": {
                    "type": "string",
                    "description": "Meeting topic"
                },
                "contact": {
                    "type": "string",
                    "description": "Contact information"
                },
                "transactionID": {
                    "type": "string",
                    "description": "Transaction ID"
                },
                "activities": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Activity name"
                            },
                            "date": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Activity date and time"
                            }
                        }
                    },
                    "description": "List of activities"
                },
                "student_count": {
                    "type": "integer",
                    "description": "Number of students to notify",
                    "minimum": 1
                },
                "notification_method": {
                    "type": "string",
                    "description": "Method of sending notifications"
                },
                "recipients": {
                    "type": "array",
                    "description": "List of notification recipients",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "bank_login",
        "description": "Tool for logging into bank accounts",
        "arguments": {
            "type": "object",
            "properties": {
                "transfer_card_number": {
                    "description": "Transfer card number",
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "description": "Username of the bank account"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the bank account"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "description": "Login status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "account_statement_query",
        "description": "Query and obtain account statement",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "start_date": {
                    "type": "string",
                    "description": "Query start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "Query end date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "statement_id": {
                    "description": "Account statement ID",
                    "type": "string"
                },
                "statement_status": {
                    "description": "Statement query status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "account_product_selection",
        "description": "Account Product Selection Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "productType": {
                    "description": "Product Category",
                    "type": "string",
                    "enum": [
                        "Account Energy",
                        "Account Agricultural Products",
                        "Account Base Metals"
                    ]
                },
                "subVariety": {
                    "description": "Sub Variety",
                    "type": "string",
                    "enum": [
                        "All Varieties",
                        "Focused Varieties"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_product": {
                    "description": "Selected Product",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "navigate_to_balance_page",
        "description": "Navigate to the account balance inquiry page",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "navigation_status": {
                    "description": "Navigation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_login_details",
        "description": "Send the user's login details through the specified communication method",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "The user's unique identification code"
                },
                "login_details": {
                    "type": "string",
                    "description": "The user's login details"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "The status of the information sent"
                }
            }
        }
    },
    {
        "name": "account_details",
        "description": "Get detailed account information",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "details_status": {
                    "type": "string",
                    "description": "Status of obtaining details"
                },
                "account_details": {
                    "type": "object",
                    "description": "Detailed account information"
                }
            }
        }
    },
    {
        "name": "account_balance_query",
        "description": "Account Balance Retrieval Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "date": {
                    "type": "string",
                    "description": "Date for querying balance"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance_info": {
                    "description": "Account Balance Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "submit_sell_order",
        "description": "Submit stock sell order",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "type": "string",
                    "description": "Stock code"
                },
                "sell_quantity": {
                    "type": "integer",
                    "description": "Sell quantity"
                },
                "sell_price": {
                    "type": "number",
                    "description": "Sell price"
                },
                "deadline": {
                    "type": "string",
                    "description": "Trade deadline"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sell_order_status": {
                    "type": "string",
                    "description": "Sell order submission status"
                }
            }
        }
    },
    {
        "name": "stock_buy",
        "description": "Submit a stock purchase order on the trading platform",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "type": "string",
                    "description": "Stock code"
                },
                "quantity": {
                    "type": "integer",
                    "description": "Purchase quantity"
                },
                "purchase_price": {
                    "type": "number",
                    "description": "Purchase price"
                },
                "deadline": {
                    "type": "string",
                    "description": "Transaction deadline"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "order_status": {
                    "type": "string",
                    "description": "Order setup status"
                },
                "transaction_status": {
                    "type": "string",
                    "description": "Transaction completion status"
                }
            }
        }
    },
    {
        "name": "stock_price_query",
        "description": "Query the current price of a specified stock",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "type": "string",
                    "description": "Stock code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Current stock price"
                }
            }
        }
    },
    {
        "name": "log_login_details",
        "description": "Record the login time and IP address",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Login time"
                },
                "ip_address": {
                    "type": "string",
                    "description": "Login IP address"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "log_status": {
                    "description": "Whether the record was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_account_existence",
        "description": "Check the existence of the account ID",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "existence": {
                    "type": "boolean",
                    "description": "Whether the account exists"
                }
            }
        }
    },
    {
        "name": "login_session_creator",
        "description": "Login session creation tool",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "description": "Username",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "loginTime": {
                    "description": "Login Time",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sessionID": {
                    "description": "Session ID",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "navigate_to_account_info",
        "description": "Tool for navigating to the account information page",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "navigation_status": {
                    "description": "Whether the navigation was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_login_reminder",
        "description": "Set login reminder tool",
        "arguments": {
            "type": "object",
            "properties": {
                "reminder_time": {
                    "description": "Reminder time",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "description": "Reminder setup status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "login_system",
        "description": "User login verification tool",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "description": "The user's login name or email address",
                    "type": "string"
                },
                "password": {
                    "description": "The user's password, no less than 8 characters and no more than 18 characters",
                    "type": "string"
                },
                "login_time": {
                    "description": "The user's login time",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "description": "User login status",
                    "type": "boolean"
                },
                "session_id": {
                    "description": "User session ID",
                    "type": "string"
                },
                "login_message": {
                    "description": "Description of the login result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "zoom_login",
        "description": "Tool for logging into Zoom account",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "description": "Login status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "balance_query",
        "description": "Query and return account balance information",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "threshold_amount": {
                    "type": "number",
                    "description": "Balance threshold"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance_info": {
                    "description": "Account balance information",
                    "type": "string"
                },
                "balance": {
                    "type": "integer",
                    "description": "Current account balance"
                }
            }
        }
    },
    {
        "name": "display_account_balance",
        "description": "Display account balance information",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance_info": {
                    "description": "Account balance information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "account_logout",
        "description": "Account Logout Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "logout_status": {
                    "description": "Logout Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "record_account_balance",
        "description": "A tool for obtaining and recording account balance",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "balance_info": {
                    "description": "Account balance information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "update_account_info",
        "description": "Account Information Update Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "description": "Information Update Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "browse_account_details",
        "description": "Browse and obtain detailed information of online banking accounts",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "details_status": {
                    "description": "Whether the account details were successfully obtained",
                    "type": "string"
                },
                "account_details": {
                    "description": "Detailed information of the account",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "historical_balance_query",
        "description": "Query historical account balance",
        "arguments": {
            "type": "object",
            "properties": {
                "query_time_range": {
                    "description": "Query time range",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "historical_balance": {
                    "description": "Historical account balance",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "send_balance_info",
        "description": "Send account balance information",
        "arguments": {
            "type": "object",
            "properties": {
                "contact_method": {
                    "type": "string",
                    "description": "User's contact method"
                },
                "balance_info": {
                    "type": "string",
                    "description": "Account balance information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Information send status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "exchange_rate_query",
        "description": "Query the latest exchange rate for a specific currency",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "type": "string",
                    "description": "The type of currency for which the exchange rate is being queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "exchange_rate": {
                    "type": "number",
                    "description": "The exchange rate of the current currency"
                }
            }
        }
    },
    {
        "name": "view_recent_bill",
        "description": "View recent bill information",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "bill_info": {
                    "type": "string",
                    "description": "Bill details"
                }
            }
        }
    },
    {
        "name": "bind_coupon_to_account",
        "description": "Bind coupon to user account",
        "arguments": {
            "type": "object",
            "properties": {
                "coupon_code": {
                    "type": "string",
                    "description": "Coupon code"
                },
                "user_id": {
                    "type": "string",
                    "description": "User ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "bind_status": {
                    "type": "string",
                    "description": "Binding status"
                }
            }
        }
    },
    {
        "name": "query_package_deals",
        "description": "Query hotel package deals information",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "package_deals": {
                    "type": "array",
                    "description": "Package deals details"
                }
            }
        }
    },
    {
        "name": "query_bill_details",
        "description": "Query and obtain bill details",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "time_range": {
                    "type": "string",
                    "description": "Time range for the query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "bill_details": {
                    "type": "string",
                    "description": "Bill details information"
                }
            }
        }
    },
    {
        "name": "location_coordinate_query",
        "description": "Geographic Coordinate Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "cityName": {
                    "description": "Name of the city",
                    "type": "string"
                },
                "countryName": {
                    "description": "Name of the country",
                    "type": "string"
                },
                "address": {
                    "description": "Detailed address",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "latitude": {
                    "description": "Latitude",
                    "type": "number"
                },
                "longitude": {
                    "description": "Longitude",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "transaction_confirmation_query",
        "description": "Query and obtain confirmation information for a specified transaction",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "description": "Transaction ID",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "description": "Transaction confirmation status",
                    "type": "string"
                },
                "confirmation_details": {
                    "description": "Transaction confirmation details",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "query_transaction",
        "description": "Query transaction records",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                },
                "transaction_time": {
                    "type": "string",
                    "description": "Transaction time"
                },
                "amount": {
                    "type": "integer",
                    "description": "Transaction amount"
                },
                "date": {
                    "description": "Date for querying transaction records",
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the query"
                },
                "transaction_details": {
                    "type": "string",
                    "description": "Details of the transaction"
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Acquired transaction ID"
                }
            }
        }
    },
    {
        "name": "check_account_functionality",
        "description": "Verify the functionality of the account to confirm login status",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "functionality_status": {
                    "type": "string",
                    "description": "Account functionality status"
                }
            }
        }
    },
    {
        "name": "recent_transaction_query",
        "description": "Query the most recent transaction record of a specified account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_info": {
                    "description": "Information of the most recent transaction record",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_account_activity_overview",
        "description": "Get an overview of recent account activity",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "activity_overview": {
                    "description": "An overview of the account's recent activities",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_asset_overview",
        "description": "Get account asset overview",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "asset_total": {
                    "type": "number",
                    "description": "Total assets"
                },
                "asset_distribution": {
                    "type": "object",
                    "description": "Asset distribution"
                }
            }
        }
    },
    {
        "name": "appliance_repair_progress_check",
        "description": "Check the latest progress status of the TV repair service, and verify the contact phone number and the appointment time and location confirmed by the service provider",
        "arguments": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Service address"
                },
                "time": {
                    "type": "string",
                    "description": "Appointment time for the service"
                },
                "contactPhone": {
                    "type": "string",
                    "description": "Contact phone number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "progress_status": {
                    "description": "Repair progress status",
                    "type": "string"
                },
                "phone_check": {
                    "description": "Contact phone verification result",
                    "type": "boolean"
                },
                "confirmation_check": {
                    "description": "Service provider confirmation status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "desensitize_balance_info",
        "description": "Desensitize account balance information",
        "arguments": {
            "type": "object",
            "properties": {
                "balance_info": {
                    "description": "Account balance information that needs to be desensitized",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "desensitized_balance": {
                    "description": "Desensitized account balance information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "compare_balance_with_expense",
        "description": "Compare account balance with estimated expenses",
        "arguments": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Account balance",
                    "type": "number"
                },
                "expected_expense": {
                    "description": "Estimated expenses",
                    "type": "number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "comparison_result": {
                    "description": "Whether the balance is sufficient to cover expenses",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "foreign_currency_purchase",
        "description": "Foreign Exchange Purchase Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "description": "Currency Type",
                    "type": "string"
                },
                "buy_price": {
                    "description": "Purchase Price, if not provided then the current latest price",
                    "type": "number"
                },
                "exchange_rate": {
                    "description": "Exchange Rate at the time of purchase",
                    "type": "number"
                },
                "buy_amount": {
                    "description": "Amount of Money to Purchase",
                    "type": "integer"
                },
                "account_balance": {
                    "description": "Account Balance",
                    "type": "number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchased_info": {
                    "description": "Information on whether the purchase was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_balance",
        "description": "Account Balance Check Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID",
                    "type": "string"
                },
                "card_number": {
                    "type": "string",
                    "description": "Bank Card Number"
                },
                "required_amount": {
                    "type": "number",
                    "description": "Required Amount of Money"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Account Balance",
                    "type": "number"
                },
                "balance_status": {
                    "description": "Whether the Balance Meets the Conditions",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "stock_query",
        "description": "Query the trading information of a specified stock",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "type": "string",
                    "description": "The stock code to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "query_status": {
                    "type": "string",
                    "description": "The status of whether the query was successful"
                },
                "stock_info": {
                    "type": "string",
                    "description": "The trading information of the stock"
                }
            }
        }
    },
    {
        "name": "fixed_deposit_details",
        "description": "Query the detailed information of a specified fixed deposit product",
        "arguments": {
            "type": "object",
            "properties": {
                "product_name": {
                    "description": "Product Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "details_status": {
                    "description": "Query Status",
                    "type": "string"
                },
                "deposit_details": {
                    "description": "Deposit Details",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "transaction_record_query",
        "description": "Query detailed transaction records for a specified bank card number",
        "arguments": {
            "type": "object",
            "properties": {
                "bank_card_number": {
                    "description": "Bank card number",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_records": {
                    "description": "Details of transaction records",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "credit_card_info_retrieval",
        "description": "Used to retrieve detailed information of credit card accounts",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "description": "Account Balance"
                },
                "recent_transactions": {
                    "type": "array",
                    "description": "Recent Transaction Records"
                },
                "bill_date": {
                    "type": "string",
                    "description": "Billing Date"
                },
                "payment_due_date": {
                    "type": "string",
                    "description": "Payment Due Date"
                }
            }
        }
    },
    {
        "name": "application_progress_query",
        "description": "Query the progress status of the most recent credit card application",
        "arguments": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name"
                },
                "id_number": {
                    "type": "string",
                    "description": "ID Number"
                },
                "verification_code": {
                    "type": "string",
                    "description": "Verification Code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "progress_status": {
                    "type": "string",
                    "description": "Application Progress Status"
                }
            }
        }
    },
    {
        "name": "query_cancellation_policy",
        "description": "Query the cancellation policy for a specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "The flight number for which to query the cancellation policy"
                },
                "departure_date": {
                    "type": "string",
                    "description": "The departure date of the flight"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cancellation_policy": {
                    "type": "string",
                    "description": "Details of the flight's cancellation policy"
                }
            }
        }
    },
    {
        "name": "query_balance",
        "description": "Query the account balance for a specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "The date for which to query the balance",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance_info": {
                    "description": "The balance information retrieved",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "market_exchange_rate_query",
        "description": "Market Exchange Rate Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_pair": {
                    "type": "string",
                    "description": "Currency pair to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "exchange_rate": {
                    "type": "number",
                    "description": "Current market exchange rate"
                }
            }
        }
    },
    {
        "name": "train_schedule_query",
        "description": "Query the timetable of a specified train",
        "arguments": {
            "type": "object",
            "properties": {
                "trainID": {
                    "type": "string",
                    "description": "Train number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_status": {
                    "type": "string",
                    "description": "Train schedule query status"
                },
                "departure_time": {
                    "type": "string",
                    "description": "Estimated departure time"
                },
                "arrival_time": {
                    "type": "string",
                    "description": "Estimated arrival time"
                }
            }
        }
    },
    {
        "name": "create_stock_trend_chart",
        "description": "Create stock trend chart",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "type": "string",
                    "description": "Stock code"
                },
                "start_date": {
                    "type": "string",
                    "description": "Start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "chart": {
                    "description": "Generated stock trend chart",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "query_currency_price",
        "description": "Query the current market price of a specified currency",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "type": "string",
                    "description": "The type of currency for which the price is being queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "description": "The current market price of the currency",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "set_stock_trade_instruction",
        "description": "Set stock trade instruction",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "type": "string",
                    "description": "Stock code"
                },
                "sell_price": {
                    "type": "string",
                    "description": "Sell price"
                },
                "quantity": {
                    "type": "string",
                    "description": "Quantity to sell"
                },
                "execution_time": {
                    "type": "string",
                    "description": "Execution time of the trade"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "trade_instruction_info": {
                    "description": "Result of setting trade instruction",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "stock_market_trend",
        "description": "Stock Market Trend Analysis Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "description": "Stock Code",
                    "type": "string"
                },
                "start_date": {
                    "description": "Start Date",
                    "type": "string",
                    "format": "date-time"
                },
                "end_date": {
                    "description": "End Date",
                    "type": "string",
                    "format": "date-time"
                },
                "historical_data": {
                    "type": "string",
                    "description": "Stock Historical Data"
                },
                "external_information": {
                    "type": "string",
                    "description": "External Information That May Affect the Stock Market"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "trend": {
                    "description": "Stock Market Trend",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "stock_trade_query",
        "description": "Query the trading situation of a specified stock code on the given day",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "type": "string",
                    "description": "Stock code"
                },
                "date": {
                    "type": "string",
                    "description": "Query date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "buy_trades": {
                    "type": "array",
                    "description": "List of buy trades for the day"
                },
                "sell_trades": {
                    "type": "array",
                    "description": "List of sell trades for the day"
                }
            }
        }
    },
    {
        "name": "bank_balance_query",
        "description": "Query the balance information for a specified bank card number",
        "arguments": {
            "type": "object",
            "properties": {
                "bank_card_number": {
                    "description": "Bank card number",
                    "type": "string",
                    "default": ""
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Bank card balance",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "calculate_population_difference",
        "description": "Calculate the population difference between two years",
        "arguments": {
            "type": "object",
            "properties": {
                "population_2023": {
                    "type": "integer",
                    "description": "Population in the year 2023"
                },
                "population_2022": {
                    "type": "integer",
                    "description": "Population in the year 2022"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "population_difference": {
                    "type": "integer",
                    "description": "Population difference"
                }
            }
        }
    },
    {
        "name": "get_location_coordinates",
        "description": "Query the latitude and longitude coordinates of a specified address",
        "arguments": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The detailed address for which to query the coordinates"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "coordinates": {
                    "type": "string",
                    "description": "The latitude and longitude coordinates of the address"
                }
            }
        }
    },
    {
        "name": "payment_options_query",
        "description": "Query tool for payment options",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_methods": {
                    "description": "List of available payment methods",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "industry_experience_lookup",
        "description": "Query the average years of experience for a specific occupation in the industry",
        "arguments": {
            "type": "object",
            "properties": {
                "occupation": {
                    "type": "string",
                    "description": "Occupation name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "average_experience": {
                    "type": "integer",
                    "description": "Average years of experience in the industry"
                }
            }
        }
    },
    {
        "name": "unemployment_rate_query",
        "description": "Query the unemployment rate data for a specified country and year",
        "arguments": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string",
                    "description": "Country name"
                },
                "year": {
                    "type": "string",
                    "description": "Year"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "unemployment_rate": {
                    "type": "string",
                    "description": "Unemployment rate data"
                }
            }
        }
    },
    {
        "name": "foreign_exchange_rate_search",
        "description": "Foreign Exchange Rate Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Query Date",
                    "type": "string"
                },
                "currencyName": {
                    "description": "Currency Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "buying_rate": {
                    "description": "Buying Rate",
                    "type": "number"
                },
                "selling_rate": {
                    "description": "Selling Rate",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "exchange_rate_converter",
        "description": "Currency Exchange Rate Conversion Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "currency1": {
                    "description": "The original currency to be converted",
                    "type": "string"
                },
                "currency2": {
                    "description": "The target currency to convert to",
                    "type": "string"
                },
                "amount": {
                    "description": "The amount of money to convert",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "converted_amount": {
                    "description": "The converted amount of money",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "unemployment_rate_compare",
        "description": "Compare unemployment rate data between two years",
        "arguments": {
            "type": "object",
            "properties": {
                "rate_previous_year": {
                    "type": "string",
                    "description": "Unemployment rate data for the previous year"
                },
                "rate_current_year": {
                    "type": "string",
                    "description": "Unemployment rate data for the current year"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "comparison_result": {
                    "type": "string",
                    "description": "Comparison result of unemployment rates"
                }
            }
        }
    },
    {
        "name": "get_account_statement",
        "description": "Get the account statement details for a specified account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "time_range": {
                    "type": "string",
                    "description": "Time range for the query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "statement": {
                    "description": "Statement details",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_transaction_records",
        "description": "Retrieve all transaction records of a specified account within a specific time range",
        "arguments": {
            "type": "object",
            "properties": {
                "time_range": {
                    "description": "The time range for the query",
                    "type": "string"
                },
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "records": {
                    "description": "List of transaction records",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "display_bill_details",
        "description": "Display the bill details for a specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date of the bill to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "display_status": {
                    "description": "The display status of the bill details",
                    "type": "string"
                },
                "bill_details": {
                    "description": "The content of the bill details",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "savings_account_balance_query",
        "description": "Query the latest balance of the savings account",
        "arguments": {
            "type": "object",
            "properties": {
                "card_ending": {
                    "type": "string",
                    "description": "Last digits of the savings account card number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance_amount": {
                    "description": "Balance of the savings account",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "current_balance_query",
        "description": "Query current account balance",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "current_balance": {
                    "description": "Current account balance",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "foreign_currency_query",
        "description": "Query the amount of specific foreign currency held in the account",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "description": "Currency type",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "foreign_currency_info": {
                    "description": "Current foreign currency holding information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "purchase_deposit_product",
        "description": "Purchase the specified deposit product",
        "arguments": {
            "type": "object",
            "properties": {
                "product_name": {
                    "type": "string",
                    "description": "Name of the deposit product to purchase"
                },
                "purchase_amount": {
                    "type": "number",
                    "description": "Amount of purchase"
                },
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchase_status": {
                    "type": "string",
                    "description": "Whether the purchase operation was successful"
                }
            }
        }
    },
    {
        "name": "submit_refund_request",
        "description": "Submit refund request",
        "arguments": {
            "type": "object",
            "properties": {
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Flight departure time"
                },
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                },
                "refund_amount": {
                    "type": "integer",
                    "description": "Requested refund amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "refund_status": {
                    "type": "string",
                    "description": "Refund application submission status"
                }
            }
        }
    },
    {
        "name": "submit_remittance",
        "description": "Submit domestic remittance request",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Remitter's account ID"
                },
                "recipient_name": {
                    "type": "string",
                    "description": "Recipient's name"
                },
                "recipient_account": {
                    "type": "string",
                    "description": "Recipient's account number"
                },
                "recipient_bank": {
                    "type": "string",
                    "description": "Recipient's bank name"
                },
                "amount": {
                    "type": "integer",
                    "description": "Remittance amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "remittance_status": {
                    "type": "string",
                    "description": "Remittance request submission status"
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                }
            }
        }
    },
    {
        "name": "credit_card_points_query",
        "description": "Credit Card Points Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "points_info": {
                    "description": "Credit Card Points Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_exchange_rate",
        "description": "Get the latest exchange rate for the specified currency pair",
        "arguments": {
            "type": "object",
            "properties": {
                "from_currency": {
                    "type": "string",
                    "description": "Source currency type"
                },
                "to_currency": {
                    "type": "string",
                    "description": "Target currency type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "exchange_rate": {
                    "type": "number",
                    "description": "Current exchange rate"
                }
            }
        }
    },
    {
        "name": "calculate_local_currency_amount",
        "description": "Calculate the required local currency amount based on the exchange rate",
        "arguments": {
            "type": "object",
            "properties": {
                "foreign_amount": {
                    "type": "integer",
                    "description": "The amount of foreign currency to purchase"
                },
                "exchange_rate": {
                    "type": "number",
                    "description": "The current exchange rate"
                },
                "currency_type": {
                    "type": "string",
                    "description": "Currency type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "local_currency_amount": {
                    "type": "number",
                    "description": "The required local currency amount"
                }
            }
        }
    },
    {
        "name": "calculate_exchange_amount",
        "description": "Calculate the currency exchange amount based on the exchange rate",
        "arguments": {
            "type": "object",
            "properties": {
                "target_amount": {
                    "type": "integer",
                    "description": "The amount of the target currency"
                },
                "exchange_rate": {
                    "type": "number",
                    "description": "The exchange rate between currencies"
                },
                "currency_from": {
                    "type": "string",
                    "description": "Source currency type"
                },
                "currency_to": {
                    "type": "string",
                    "description": "Target currency type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "conversion_amount": {
                    "type": "number",
                    "description": "The amount of currency after conversion"
                }
            }
        }
    },
    {
        "name": "get_latest_price",
        "description": "Get the latest market price of a specified product",
        "arguments": {
            "type": "object",
            "properties": {
                "product_name": {
                    "type": "string",
                    "description": "Product name"
                },
                "exchange": {
                    "type": "string",
                    "description": "Exchange name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "string",
                    "description": "The latest market price of the product"
                }
            }
        }
    },
    {
        "name": "credit_card_debt",
        "description": "Query credit card debt amount",
        "arguments": {
            "type": "object",
            "properties": {
                "credit_card_number": {
                    "description": "Credit card number",
                    "type": "string"
                },
                "currency": {
                    "description": "Currency",
                    "type": "string",
                    "default": "CNY"
                },
                "account_id": {
                    "type": "integer",
                    "description": "Credit card account ID"
                },
                "card_last_digits": {
                    "type": "string",
                    "description": "Last digits of credit card"
                },
                "date_range": {
                    "type": "string",
                    "description": "Date range for the query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "debt": {
                    "description": "Current credit card debt amount",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "foreign_currency_exchange",
        "description": "Foreign Currency Exchange Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Amount to be exchanged",
                    "type": "integer"
                },
                "sourceCurrency": {
                    "description": "Source currency type",
                    "type": "string"
                },
                "targetCurrency": {
                    "description": "Target currency type",
                    "type": "string"
                },
                "rate": {
                    "description": "Exchange rate",
                    "type": "number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "exchangedAmount": {
                    "description": "Amount after exchange",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "display_recent_transactions",
        "description": "Display recent transaction details",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "transactions_info": {
                    "description": "Recent transaction details",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_recent_transaction",
        "description": "Get the account's recent transaction records",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "transaction_count": {
                    "description": "The number of transaction records to retrieve",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_info": {
                    "description": "Information of the most recent transaction",
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "description": "List of transaction records"
                }
            }
        }
    },
    {
        "name": "set_alarm_tone",
        "description": "Set a specific ringtone for a designated alarm",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Alarm time"
                },
                "frequency": {
                    "type": "string",
                    "description": "Alarm frequency, such as daily, weekly, etc."
                },
                "ringtone": {
                    "type": "string",
                    "description": "Name of the ringtone to set"
                },
                "date": {
                    "type": "string",
                    "description": "Date for alarm setting"
                },
                "sound_type": {
                    "type": "string",
                    "description": "Ringtone type, non-default"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ringtone_set_info": {
                    "description": "Ringtone setting result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "complete_transfer",
        "description": "Complete the transfer operation to the designated deposit account",
        "arguments": {
            "type": "object",
            "properties": {
                "transfer_card_number": {
                    "type": "string",
                    "description": "Transfer card number"
                },
                "amount": {
                    "type": "number",
                    "description": "Transfer amount"
                },
                "account_password": {
                    "type": "string",
                    "description": "Account password"
                },
                "verification_code": {
                    "type": "string",
                    "description": "Verification code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transfer_status": {
                    "type": "string",
                    "description": "Whether the transfer operation was successful"
                }
            }
        }
    },
    {
        "name": "get_transaction_history",
        "description": "Retrieve account transaction history",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "time_range": {
                    "type": "string",
                    "description": "Time range for the query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "array",
                    "description": "Details of transaction records"
                }
            }
        }
    },
    {
        "name": "special_foreign_currency_purchase",
        "description": "A tool for purchasing foreign currency at the current exchange rate, limited to US dollars, Euros, and Australian dollars",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "description": "Currency type",
                    "type": "string",
                    "enum": [
                        "US dollar",
                        "Euro",
                        "Australian dollar"
                    ]
                },
                "purchased_amount": {
                    "description": "Amount purchased",
                    "type": "number"
                },
                "account_balance": {
                    "description": "Account balance",
                    "type": "number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchased_status": {
                    "description": "Purchase information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "foreign_currency_sell",
        "description": "Foreign Exchange Selling Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "type": "string",
                    "description": "Currency Type"
                },
                "sell_amount": {
                    "type": "string",
                    "description": "Amount to sell, 'All' indicates selling all of the held currency"
                },
                "sell_price": {
                    "type": "number",
                    "description": "Selling price, if not provided, the current latest price will be used"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sell_status": {
                    "type": "string",
                    "description": "Information on whether the sale was successful"
                }
            }
        }
    },
    {
        "name": "foreign_currency_sale",
        "description": "Foreign Exchange Selling Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "description": "Currency Type",
                    "type": "string"
                },
                "sell_price": {
                    "description": "Selling Price, if not provided, the latest price will be used",
                    "type": "number"
                },
                "sell_amount": {
                    "description": "Amount of Money to Sell",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sale_info": {
                    "description": "Information on whether the sale was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_and_record_balance",
        "description": "Check and record the current account balance information",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "balance_info": {
                    "description": "Current account balance information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "secure_logout",
        "description": "Perform secure logout operation for account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "logout_status": {
                    "type": "string",
                    "description": "Logout status"
                }
            }
        }
    },
    {
        "name": "deposit_money",
        "description": "Perform deposit operations in user's account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "deposit_product": {
                    "type": "string",
                    "description": "Selected deposit product"
                },
                "deposit_amount": {
                    "type": "number",
                    "description": "Deposit amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "deposit_status": {
                    "type": "string",
                    "description": "Deposit operation status"
                }
            }
        }
    },
    {
        "name": "view_agenda",
        "description": "View schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "ID of the agenda"
                },
                "user_id": {
                    "type": "string",
                    "description": "ID of the user"
                },
                "date": {
                    "type": "string",
                    "description": "The date to view the agenda"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "agenda_title": {
                    "type": "string",
                    "description": "Agenda title"
                },
                "agenda_time": {
                    "type": "string",
                    "description": "Agenda time"
                },
                "agenda_location": {
                    "type": "string",
                    "description": "Agenda location"
                },
                "agenda_duration": {
                    "type": "integer",
                    "description": "Agenda duration (minutes)"
                },
                "view_status": {
                    "type": "string",
                    "description": "Agenda view status"
                }
            }
        }
    },
    {
        "name": "purchase_product",
        "description": "Purchase specific product",
        "arguments": {
            "type": "object",
            "properties": {
                "product_name": {
                    "type": "string",
                    "description": "Name of the product to purchase"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchase_status": {
                    "description": "Whether the purchase operation was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "notify_user_balance",
        "description": "Notify the user of their bank card balance information",
        "arguments": {
            "type": "object",
            "properties": {
                "balance_info": {
                    "type": "string",
                    "description": "The balance information of the user's bank card"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "The status of whether the notification was successful"
                }
            }
        }
    },
    {
        "name": "credit_card_repayment",
        "description": "Credit Card Repayment",
        "arguments": {
            "type": "object",
            "properties": {
                "overdraft_card_number": {
                    "description": "Overdraft Card Number",
                    "type": "string"
                },
                "repayment_amount": {
                    "description": "Repayment Amount",
                    "type": "number"
                },
                "payment_card_number": {
                    "description": "Payment Card Number",
                    "type": "string"
                },
                "currency": {
                    "description": "Currency",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation": {
                    "description": "Repayment Confirmation Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "corporate_credit_information",
        "description": "Corporate Credit Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "companyName": {
                    "description": "Name of the company",
                    "type": "string"
                },
                "businessLicense": {
                    "description": "Business license number of the company",
                    "type": "string"
                },
                "queryDate": {
                    "description": "Query date",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "creditRating": {
                    "description": "Credit rating of the company",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "credit_card_payment_history",
        "description": "Query the credit card repayment records within a specified time period",
        "arguments": {
            "type": "object",
            "properties": {
                "credit_card_number": {
                    "type": "string",
                    "description": "Credit card account number"
                },
                "time_period": {
                    "type": "string",
                    "description": "The time period for the query, for example 'last week'"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_status": {
                    "type": "string",
                    "description": "Repayment status, for example 'Paid off' or 'Unpaid'"
                }
            }
        }
    },
    {
        "name": "check_current_balance",
        "description": "Check the current balance of a specified account",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "type": "string",
                    "description": "Currency type"
                },
                "required_amount": {
                    "type": "integer",
                    "description": "Minimum required amount"
                },
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance_status": {
                    "type": "string",
                    "description": "Status of whether the balance is sufficient"
                },
                "current_balance": {
                    "description": "Current balance",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "get_transaction_details",
        "description": "Get the transaction details for the specified transaction ID",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "description": "Transaction ID",
                    "type": "string"
                },
                "account_id": {
                    "description": "Account ID",
                    "type": "string"
                },
                "merchant_id": {
                    "description": "Merchant ID",
                    "type": "string"
                },
                "amount": {
                    "description": "Transaction amount",
                    "type": "integer"
                },
                "transaction_time": {
                    "description": "Transaction time",
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    },
    {
        "name": "check_points",
        "description": "Query user's points balance and redemption policy",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "points_balance": {
                    "type": "integer",
                    "description": "User's points balance"
                },
                "points_policy": {
                    "type": "string",
                    "description": "Points redemption policy"
                }
            }
        }
    },
    {
        "name": "validate_credit_card_format",
        "description": "Verify the correctness of the credit card number format",
        "arguments": {
            "type": "object",
            "properties": {
                "card_number": {
                    "type": "string",
                    "description": "The credit card number to be verified"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "validation_status": {
                    "type": "string",
                    "description": "Whether the credit card number format is correct"
                }
            }
        }
    },
    {
        "name": "balance_change_analysis",
        "description": "Analyze whether the balance change conforms to the regular income and expenditure pattern",
        "arguments": {
            "type": "object",
            "properties": {
                "current_balance": {
                    "description": "Current account balance",
                    "type": "number"
                },
                "historical_balance": {
                    "description": "Account balance from the previous month",
                    "type": "number"
                },
                "regular_pattern": {
                    "description": "User's regular income and expenditure pattern data",
                    "type": "object"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "analysis_result": {
                    "description": "Whether the analysis result is normal",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "report_net_profit",
        "description": "Report the net profit situation to users",
        "arguments": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string",
                    "description": "The method of reporting, such as email or written report"
                },
                "net_profit_data": {
                    "type": "number",
                    "description": "The data of net profit"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report_status": {
                    "type": "string",
                    "description": "The status of whether the report was successful"
                }
            }
        }
    },
    {
        "name": "fetch_net_profit",
        "description": "Retrieve net profit data for a specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date for which to query the net profit"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "net_profit": {
                    "type": "number",
                    "description": "The net profit data for the day"
                }
            }
        }
    },
    {
        "name": "regulation_compliance_check",
        "description": "Regulation Compliance Check Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "company_name": {
                    "description": "Company Name",
                    "type": "string"
                },
                "industry_type": {
                    "description": "Industry Type",
                    "type": "string"
                },
                "inspection_date": {
                    "description": "Inspection Date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "compliance_status": {
                    "description": "Compliance Status",
                    "type": "boolean"
                },
                "violations": {
                    "description": "Violations",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "compile_report",
        "description": "Compile file summaries and detailed content clauses into a report",
        "arguments": {
            "type": "object",
            "properties": {
                "summary": {
                    "type": "string",
                    "description": "File summary"
                },
                "protocol_details": {
                    "type": "string",
                    "description": "Detailed content clauses"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report": {
                    "type": "string",
                    "description": "Organized report"
                }
            }
        }
    },
    {
        "name": "analyze_and_summarize_sales_data",
        "description": "Analyze sales data and generate a summary of sales data",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path containing sales data"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "summary_content": {
                    "type": "string",
                    "description": "The generated summary content of sales data"
                },
                "status": {
                    "type": "boolean",
                    "description": "Whether the operation was successful"
                }
            }
        }
    },
    {
        "name": "fetch_deposit_rates",
        "description": "Retrieve interest rate information for different deposit terms",
        "arguments": {
            "type": "object",
            "properties": {
                "website": {
                    "type": "string",
                    "description": "Official bank website address"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "rates": {
                    "type": "object",
                    "description": "Interest rate information for different deposit terms"
                }
            }
        }
    },
    {
        "name": "currency_purchase_calculation",
        "description": "Calculate the amount of local currency required to purchase a specified amount of foreign currency",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "type": "string",
                    "description": "Currency type"
                },
                "buy_amount": {
                    "type": "integer",
                    "description": "Amount of currency to purchase"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "required_amount": {
                    "type": "number",
                    "description": "Required amount of local currency"
                }
            }
        }
    },
    {
        "name": "change_password",
        "description": "Tool for changing account password",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "old_password": {
                    "type": "string",
                    "description": "Current password"
                },
                "new_password": {
                    "type": "string",
                    "description": "New password"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_status": {
                    "type": "string",
                    "description": "Password change status"
                }
            }
        }
    },
    {
        "name": "submit_password_change",
        "description": "Submit password change request",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID",
                    "type": "integer"
                },
                "old_password": {
                    "description": "Old password",
                    "type": "string"
                },
                "new_password": {
                    "description": "New password",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_status": {
                    "description": "Whether the password change was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "purchase_fixed_deposit",
        "description": "Purchase fixed deposit product tool",
        "arguments": {
            "type": "object",
            "properties": {
                "product_amount": {
                    "type": "integer",
                    "description": "The amount of money to purchase the fixed deposit"
                },
                "interest_rate": {
                    "type": "number",
                    "description": "Annual interest rate"
                },
                "duration_years": {
                    "type": "integer",
                    "description": "The duration of the deposit in years"
                },
                "card_ending": {
                    "type": "string",
                    "description": "The last few digits of the payment bank card"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchase_status": {
                    "type": "string",
                    "description": "The status of whether the fixed deposit was purchased successfully"
                }
            }
        }
    },
    {
        "name": "search_deposit_products",
        "description": "Search and filter fixed deposit products that meet the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "bank_name": {
                    "type": "string",
                    "description": "Bank name"
                },
                "product_type": {
                    "type": "string",
                    "description": "Product type"
                },
                "min_annual_rate": {
                    "type": "number",
                    "description": "Minimum annual interest rate"
                },
                "max_initial_amount": {
                    "type": "number",
                    "description": "Maximum initial deposit amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_status": {
                    "type": "string",
                    "description": "Search status"
                },
                "products": {
                    "type": "array",
                    "description": "List of products that meet the criteria"
                }
            }
        }
    },
    {
        "name": "transfer_money",
        "description": "Perform transfer operation",
        "arguments": {
            "type": "object",
            "properties": {
                "account_name": {
                    "type": "string",
                    "description": "Name of the bank receiving the remittance"
                },
                "account_number": {
                    "type": "string",
                    "description": "Account number of the remittance recipient"
                },
                "swift_code": {
                    "type": "string",
                    "description": "SWIFT code or other international remittance required information"
                },
                "amount": {
                    "type": "number",
                    "description": "Remittance amount"
                },
                "recipient_info": {
                    "type": "string",
                    "description": "Recipient's account information"
                },
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "recipient_name": {
                    "type": "string",
                    "description": "Recipient's name"
                },
                "transfer_mode": {
                    "type": "string",
                    "description": "Transfer method"
                },
                "security_code": {
                    "description": "Security verification code",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transfer_status": {
                    "type": "string",
                    "description": "Status of the transfer operation"
                },
                "transfer_receipt": {
                    "type": "string",
                    "description": "Remittance receipt information"
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction number"
                },
                "completion_time": {
                    "type": "string",
                    "description": "Completion time"
                }
            }
        }
    },
    {
        "name": "transfer_all_to_main_account",
        "description": "Transfer the entire balance from the specified account to the main account",
        "arguments": {
            "type": "object",
            "properties": {
                "source_account_id": {
                    "type": "string",
                    "description": "Source account ID"
                },
                "target_account_id": {
                    "type": "string",
                    "description": "Target account ID"
                },
                "amount": {
                    "type": "string",
                    "description": "Transfer amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transfer_status": {
                    "type": "string",
                    "description": "Status of whether the transfer was successful"
                }
            }
        }
    },
    {
        "name": "confirm_transfer",
        "description": "Confirm whether the transfer operation is successful",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Source account ID"
                },
                "recipient_account": {
                    "type": "string",
                    "description": "Recipient account"
                },
                "transfer_amount": {
                    "type": "number",
                    "description": "Transfer amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "description": "Transfer confirmation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_transaction_amount",
        "description": "Verify if the transaction amount on a specific date for a specified account is abnormal",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User Account ID"
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                },
                "date": {
                    "type": "string",
                    "description": "Transaction Date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Verification Status"
                },
                "is_amount_unusual": {
                    "type": "boolean",
                    "description": "Whether the Amount is Unusual"
                }
            }
        }
    },
    {
        "name": "check_transaction_status",
        "description": "Check transaction status",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                },
                "transaction_type": {
                    "type": "string",
                    "description": "Transaction type"
                },
                "currency_type": {
                    "type": "string",
                    "description": "Currency type"
                },
                "amount": {
                    "type": "integer",
                    "description": "Transaction amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Transaction status"
                }
            }
        }
    },
    {
        "name": "find_purchase_link",
        "description": "Search for a purchase link based on the book title",
        "arguments": {
            "type": "object",
            "properties": {
                "book_title": {
                    "type": "string",
                    "description": "The book title for which to search the purchase link"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "link": {
                    "description": "The purchase link found",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_and_calculate_purchase",
        "description": "Check the current market price and calculate the purchase amount not exceeding that price",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "description": "Currency type",
                    "type": "string"
                },
                "buy_amount": {
                    "description": "Planned purchase amount",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "can_purchase": {
                    "description": "Whether it is possible to purchase according to the planned amount",
                    "type": "boolean"
                },
                "suggested_buy_price": {
                    "description": "Suggested purchase price",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "get_current_exchange_rate",
        "description": "Get the current exchange rate of the currency",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "type": "string",
                    "description": "Currency type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "exchange_rate": {
                    "type": "number",
                    "description": "Current currency exchange rate"
                }
            }
        }
    },
    {
        "name": "get_loan_interest_rate",
        "description": "Retrieve loan interest rate information for a specified bank",
        "arguments": {
            "type": "object",
            "properties": {
                "bank_name": {
                    "type": "string",
                    "description": "Bank name"
                },
                "loan_amount": {
                    "type": "string",
                    "description": "Loan amount"
                },
                "loan_period": {
                    "type": "string",
                    "description": "Loan period"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "interest_rate": {
                    "type": "string",
                    "description": "Retrieved loan interest rate"
                }
            }
        }
    },
    {
        "name": "calculate_percentage",
        "description": "Calculate proportion",
        "arguments": {
            "type": "object",
            "properties": {
                "part": {
                    "type": "integer",
                    "description": "Part value"
                },
                "whole": {
                    "type": "integer",
                    "description": "Whole value"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "percentage": {
                    "type": "string",
                    "description": "Calculated percentage"
                }
            }
        }
    },
    {
        "name": "calculate_total_interest",
        "description": "Calculate the total interest of a loan",
        "arguments": {
            "type": "object",
            "properties": {
                "loan_amount": {
                    "type": "string",
                    "description": "Loan amount"
                },
                "loan_period": {
                    "type": "string",
                    "description": "Loan period"
                },
                "interest_rate": {
                    "type": "string",
                    "description": "Loan interest rate"
                },
                "calculation_method": {
                    "type": "string",
                    "description": "Interest calculation method"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "total_interest": {
                    "type": "string",
                    "description": "Calculated total interest amount"
                }
            }
        }
    },
    {
        "name": "calculate_total_calories",
        "description": "Calculate the total caloric intake of various foods",
        "arguments": {
            "type": "object",
            "properties": {
                "foods": {
                    "description": "Array of food calorie information",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "foodName": {
                                "type": "string",
                                "description": "Food name"
                            },
                            "calories": {
                                "type": "number",
                                "description": "Food calories"
                            }
                        },
                        "required": [
                            "foodName",
                            "calories"
                        ]
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "total_calories": {
                    "type": "number",
                    "description": "Total caloric intake"
                }
            }
        }
    },
    {
        "name": "check_transaction_cancellable",
        "description": "Check if the transaction with the specified transaction ID can be cancelled",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "The transaction ID to check"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cancellable": {
                    "type": "boolean",
                    "description": "Whether the transaction can be cancelled"
                }
            }
        }
    },
    {
        "name": "generate_transaction_report",
        "description": "Generate a detailed transaction report based on transaction ID",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "The transaction ID for which the report is to be generated"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report_status": {
                    "type": "string",
                    "description": "The status of the report generation"
                },
                "report_path": {
                    "type": "string",
                    "description": "The file path of the generated report"
                }
            }
        }
    },
    {
        "name": "check_transaction_modifiable",
        "description": "Check if the transaction with the specified transaction ID is modifiable",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "The transaction ID to check"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "modifiable": {
                    "type": "boolean",
                    "description": "Whether the transaction is modifiable"
                }
            }
        }
    },
    {
        "name": "find_transaction",
        "description": "Find transaction records based on account ID and transaction information",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_time": {
                    "type": "string",
                    "description": "Transaction time"
                },
                "amount": {
                    "type": "integer",
                    "description": "Transaction amount"
                },
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "merchant_name": {
                    "type": "string",
                    "description": "Merchant name"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "description": "Found transaction ID",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "change_account_password",
        "description": "Change Account Password",
        "arguments": {
            "type": "object",
            "properties": {
                "current_password": {
                    "type": "string",
                    "description": "Current Password"
                },
                "new_password": {
                    "type": "string",
                    "description": "Newly Set Password"
                },
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_status": {
                    "description": "Password Change Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_transaction",
        "description": "Create a new transaction for submitting merchant and customer transaction information to the platform",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "User account ID",
                    "type": "string"
                },
                "merchant_id": {
                    "description": "Merchant ID",
                    "type": "string"
                },
                "amount": {
                    "description": "Transaction amount in RMB",
                    "type": "integer"
                },
                "transaction_time": {
                    "description": "Transaction time",
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "description": "Transaction description",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "description": "Generated transaction ID",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "credit_card_progress",
        "description": "Query the progress of credit card application/handling",
        "arguments": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "id_type": {
                    "description": "Type of Identification",
                    "type": "string"
                },
                "id_number": {
                    "description": "Identification Number",
                    "type": "string"
                },
                "verification_code": {
                    "description": "Verification Code",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Application Status",
                    "type": "string"
                },
                "progress_details": {
                    "description": "Progress Details",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "detailed_inquiry",
        "description": "Business Inquiry - Detailed Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "identity": {
                    "description": "Card (Account) Number/Phone Number/Username",
                    "type": "string"
                },
                "password": {
                    "description": "Account Password",
                    "type": "string"
                },
                "verification_code": {
                    "description": "Verification Code",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "detailed_info": {
                    "description": "Business Detailed Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "deposit_product_selection",
        "description": "Deposit Product Selection Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "product_name": {
                    "description": "Name of the deposit product",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "product_details": {
                    "description": "Detailed information of the deposit product",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "loan_application",
        "description": "Online Banking Loan Application Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "account": {
                    "description": "Card (Account) Number/Mobile Number/Username",
                    "type": "string"
                },
                "password": {
                    "description": "Account Password",
                    "type": "string"
                },
                "captcha": {
                    "description": "Verification Code",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "application_status": {
                    "description": "Loan Application Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "loan_application_time",
        "description": "Retrieve the audit time of loan application",
        "arguments": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string",
                    "description": "Card (account) number/mobile number/username"
                },
                "password": {
                    "type": "string",
                    "description": "Account password"
                },
                "captcha": {
                    "type": "string",
                    "description": "Verification code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "application_time": {
                    "type": "string",
                    "description": "Audit time of the loan application"
                }
            }
        }
    },
    {
        "name": "retrieve_transaction_details",
        "description": "Retrieve the transaction details for a specified account ID on a specific date with a specific merchant",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "transaction_date": {
                    "type": "string",
                    "description": "Transaction date",
                    "format": "date"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Retrieval status"
                },
                "transaction_details": {
                    "type": "string",
                    "description": "Details of the transaction"
                }
            }
        }
    },
    {
        "name": "deposit_product_search",
        "description": "Deposit Product Inquiry",
        "arguments": {
            "type": "object",
            "properties": {
                "product_type": {
                    "description": "Product Type (Demand Deposit/Time Deposit/Large Certificate of Deposit/)",
                    "type": "string"
                },
                "product_rate": {
                    "description": "Product Interest Rate (%)",
                    "type": "number"
                },
                "minimum_deposit": {
                    "description": "Minimum Deposit Amount (CNY)",
                    "type": "number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "product_name": {
                    "type": "string",
                    "description": "Product Name"
                },
                "product_type": {
                    "type": "string",
                    "description": "Product Type"
                },
                "product_rate": {
                    "type": "number",
                    "description": "Product Interest Rate (%)"
                },
                "minimum_deposit": {
                    "type": "number",
                    "description": "Minimum Deposit Amount (CNY)"
                },
                "currency": {
                    "type": "string",
                    "description": "Currency"
                },
                "term": {
                    "type": "string",
                    "description": "Deposit Term"
                }
            }
        }
    },
    {
        "name": "product_catalog_search",
        "description": "Product Catalog Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "product_type": {
                    "description": "Product Type",
                    "type": "string"
                },
                "product_name": {
                    "description": "Product Name",
                    "type": "string"
                },
                "start_time": {
                    "description": "Query Start Time",
                    "type": "string"
                },
                "productID": {
                    "description": "Product ID",
                    "type": "integer"
                },
                "releaseDate": {
                    "description": "Product Release Date",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                },
                "category": {
                    "description": "Product Category",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "product_catalog": {
                    "description": "Product Catalog List",
                    "type": "array"
                },
                "product_status": {
                    "description": "Product Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_fixed_deposit",
        "description": "Create Fixed Deposit",
        "arguments": {
            "type": "object",
            "properties": {
                "account_number": {
                    "description": "Bank Account Number",
                    "type": "string"
                },
                "deposit_amount": {
                    "description": "Deposit Amount",
                    "type": "number"
                },
                "currency": {
                    "description": "Currency",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "deposit_status": {
                    "description": "Fixed Deposit Setup Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "fixed_deposit_transaction",
        "description": "Handling fixed deposit transactions",
        "arguments": {
            "type": "object",
            "properties": {
                "product_name": {
                    "description": "Product Name",
                    "type": "string"
                },
                "transfer_card_number": {
                    "description": "Transfer Card Number",
                    "type": "string"
                },
                "amount": {
                    "description": "Amount",
                    "type": "number"
                },
                "account": {
                    "description": "Card (Account) Number/Mobile Number/Username",
                    "type": "string"
                },
                "password": {
                    "description": "Account Password",
                    "type": "string"
                },
                "deposit_term": {
                    "description": "Deposit Term",
                    "type": "string"
                },
                "verification_code": {
                    "description": "Verification Code",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_status": {
                    "description": "Transaction Handling Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "compare_customer_reviews",
        "description": "Compare customer reviews of different companies",
        "arguments": {
            "type": "object",
            "properties": {
                "review_data": {
                    "type": "array",
                    "description": "Customer review data to be compared"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "review_comparison": {
                    "type": "array",
                    "description": "Results of customer review comparison"
                }
            }
        }
    },
    {
        "name": "del_transaction",
        "description": "Delete a transaction by transaction ID",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "description": "Transaction ID",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Deletion status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "display_order_details",
        "description": "Retrieve and display the user's order details",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "order_details": {
                    "description": "Order details information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "customer_service",
        "description": "Users contact customer service through the platform to submit questions and requests",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "User account ID",
                    "type": "string"
                },
                "content": {
                    "description": "The content of the user's questions and requests",
                    "type": "string"
                },
                "merchant_id": {
                    "description": "Merchant ID",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status of the submission",
                    "type": "string"
                },
                "response": {
                    "description": "Customer service's reply",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "customer_review_analysis",
        "description": "Analysis tool for customer reviews",
        "arguments": {
            "type": "object",
            "properties": {
                "reviewText": {
                    "description": "The text content of the customer review",
                    "type": "string"
                },
                "userName": {
                    "description": "The name of the user who submitted the review",
                    "type": "string"
                },
                "reviewDate": {
                    "description": "The date and time of the review",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sentiment": {
                    "description": "The sentiment direction of the review",
                    "type": "string"
                },
                "keyPoints": {
                    "description": "Key information in the review",
                    "type": "string"
                },
                "reviewImportance": {
                    "description": "The importance rating of the review",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "get_transaction_description",
        "description": "Get the detailed transaction description for a specific transaction ID",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Detailed description of the transaction",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "product_inventory_search",
        "description": "Product Inventory Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "productID": {
                    "description": "Product ID",
                    "type": "string"
                },
                "warehouseID": {
                    "description": "Warehouse ID",
                    "type": "string"
                },
                "checkDate": {
                    "description": "Check Date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "inventory_status": {
                    "description": "Inventory Status",
                    "type": "string"
                },
                "product_inventory": {
                    "description": "Product Inventory Quantity",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "traffic_card",
        "description": "Traffic Card Balance Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "cardNumber": {
                    "description": "Traffic Card Number",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Current Balance of the Traffic Card",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "analyze_market_trend",
        "description": "Analyze market trends based on trading volume and price data",
        "arguments": {
            "type": "object",
            "properties": {
                "trade_volume": {
                    "type": "array",
                    "description": "Trading volume data"
                },
                "price_data": {
                    "type": "array",
                    "description": "Price data"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "market_trend": {
                    "type": "string",
                    "description": "Market trend analysis results"
                }
            }
        }
    },
    {
        "name": "predict_price_change",
        "description": "Predict future price change trends based on historical price data and market events",
        "arguments": {
            "type": "object",
            "properties": {
                "historical_data": {
                    "type": "string",
                    "description": "Historical price data"
                },
                "market_events": {
                    "type": "string",
                    "description": "List of market events"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "prediction": {
                    "type": "string",
                    "description": "Prediction of price change trend"
                }
            }
        }
    },
    {
        "name": "write_market_overview",
        "description": "Write a market overview report containing price, trading volume, and market trends",
        "arguments": {
            "type": "object",
            "properties": {
                "trade_volume": {
                    "type": "array",
                    "description": "Trading volume data"
                },
                "price_trend": {
                    "type": "string",
                    "description": "Price trend analysis results"
                },
                "market_trend": {
                    "type": "string",
                    "description": "Market trend analysis results"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "market_overview": {
                    "type": "string",
                    "description": "Market overview report"
                }
            }
        }
    },
    {
        "name": "stock_trend_predictor",
        "description": "Stock Market Trend Prediction Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "description": "Stock Code",
                    "type": "string"
                },
                "start_time": {
                    "description": "Start Time",
                    "type": "string"
                },
                "end_time": {
                    "description": "End Time",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "trend": {
                    "type": "string",
                    "description": "Stock Market Trend",
                    "enum": [
                        "Rising",
                        "Falling",
                        "Stable"
                    ]
                }
            }
        }
    },
    {
        "name": "loan_progress_check",
        "description": "Check the latest progress of loan application",
        "arguments": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "type": "string",
                    "description": "User's phone number"
                },
                "applicationDate": {
                    "type": "string",
                    "description": "Application date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "progress_status": {
                    "type": "string",
                    "description": "The latest progress status of the loan application"
                }
            }
        }
    },
    {
        "name": "search_product",
        "description": "Search for products on Amazon",
        "arguments": {
            "type": "object",
            "properties": {
                "product_name": {
                    "type": "string",
                    "description": "The name of the product to search for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_status": {
                    "description": "Whether the search operation was successful",
                    "type": "string"
                },
                "product_list": {
                    "description": "List of products found",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "insurance_product_search",
        "description": "Insurance Product Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "insuranceCompany": {
                    "description": "Insurance Company Name",
                    "type": "string"
                },
                "productCategory": {
                    "description": "Product Category",
                    "type": "string"
                },
                "paymentMethod": {
                    "description": "Payment Method",
                    "type": "string"
                },
                "paymentPeriod": {
                    "description": "Payment Period",
                    "type": "integer"
                },
                "insurancePeriod": {
                    "description": "Insurance Period",
                    "type": "integer"
                },
                "targetAudience": {
                    "description": "Target Customer Group",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "insurance_product_info": {
                    "description": "Insurance Product Information",
                    "type": "array",
                    "items": {
                        "properties": {
                            "productName": {
                                "description": "Product Name",
                                "type": "string"
                            },
                            "productBenefits": {
                                "description": "Product Benefits",
                                "type": "string"
                            },
                            "productPremium": {
                                "description": "Product Premium",
                                "type": "number"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "web_search_tool",
        "description": "Used for collecting web information of specific individuals, including social media, news reports, and articles",
        "arguments": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "The full name of the person to be searched",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "web_info": {
                    "description": "Web information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "archive_file_tool",
        "description": "File Archiving Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "filePath": {
                    "type": "string",
                    "description": "The path of the file or folder to be archived"
                },
                "archivePath": {
                    "type": "string",
                    "description": "The path where the archived file will be stored"
                },
                "archiveType": {
                    "type": "string",
                    "description": "The type of the archive file (e.g., zip, rar, etc.)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "archiveStatus": {
                    "type": "boolean",
                    "description": "Whether the archiving operation was successful"
                },
                "archiveFilePath": {
                    "type": "string",
                    "description": "The full path of the archived file"
                }
            }
        }
    },
    {
        "name": "search_authorized_service_provider",
        "description": "Search for authorized repair service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "provider_brand": {
                    "type": "string",
                    "description": "Home appliance brand"
                },
                "provider_model": {
                    "type": "string",
                    "description": "Home appliance model"
                },
                "userLocation": {
                    "type": "string",
                    "description": "User's location"
                },
                "applianceType": {
                    "type": "string",
                    "description": "Type of home appliance"
                },
                "address": {
                    "type": "string",
                    "description": "Service area address"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_provider": {
                    "type": "string",
                    "description": "Information of the found service provider"
                },
                "service_center_contact": {
                    "type": "string",
                    "description": "Contact information of the repair service center obtained"
                },
                "service_center_info": {
                    "type": "string",
                    "description": "Authorized repair service center information"
                }
            }
        }
    },
    {
        "name": "department_structure_search",
        "description": "Internal department structure query tool",
        "arguments": {
            "type": "object",
            "properties": {
                "department": {
                    "description": "The department to query",
                    "type": "string"
                },
                "employee": {
                    "description": "Employee name or ID number",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "department_structure": {
                    "description": "Department structure",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "internal_person_search",
        "description": "Internal Staff Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Employee name, must be two to four characters",
                    "type": "string"
                },
                "mobile": {
                    "description": "Employee mobile number, must start with 1 and be 11 digits long",
                    "type": "integer",
                    "example": 13312340987
                },
                "level": {
                    "description": "Employee level, can only query employees between levels 10 to 20",
                    "type": "integer",
                    "example": 16
                },
                "firstOrganization": {
                    "description": "Employee's first-level department",
                    "type": "string"
                },
                "secondOrganization": {
                    "description": "Employee's second-level department",
                    "type": "string"
                },
                "thirdOrganization": {
                    "description": "Employee's third-level department",
                    "type": "string"
                },
                "fourthOrganization": {
                    "description": "Employee's fourth-level department",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "person_info": {
                    "description": "Internal Staff Information",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "document_editor",
        "description": "A tool for editing and saving documents",
        "arguments": {
            "type": "object",
            "properties": {
                "document_id": {
                    "type": "string",
                    "description": "The unique identifier of the document"
                },
                "content": {
                    "type": "string",
                    "description": "The text content to be inserted"
                },
                "photo_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Local paths of the photos to be inserted"
                },
                "file_path": {
                    "type": "string",
                    "description": "The path of the document"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Whether the document was edited and saved successfully"
                }
            }
        }
    },
    {
        "name": "labor_law_guide",
        "description": "Labor Law Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "region": {
                    "description": "Administrative Region",
                    "type": "string"
                },
                "employmentType": {
                    "description": "Employment Type",
                    "type": "string"
                },
                "inquiryDate": {
                    "description": "Inquiry Date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "labor_laws": {
                    "description": "Relevant Labor Laws",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "collect_feedback",
        "description": "Contact the user to collect feedback after the service is completed",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "The user's contact information"
                },
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "feedback_status": {
                    "type": "string",
                    "description": "Feedback collection status"
                }
            }
        }
    },
    {
        "name": "login_info_collect",
        "description": "User Login Information Collection Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "userID": {
                    "description": "The unique identifier of the user",
                    "type": "integer"
                },
                "loginTime": {
                    "description": "The time when the user logs in",
                    "type": "string"
                },
                "loginDevice": {
                    "description": "The type of device the user logs in with",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "loginStatus": {
                    "description": "The login status of the user",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "restore_transaction",
        "description": "Restore previously incorrectly deleted transaction records",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "description": "Transaction ID to restore",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the restore operation was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "last_call_record",
        "description": "Retrieve the last call record for a specified phone number",
        "arguments": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "type": "string",
                    "description": "The phone number to query the call record for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "call_record": {
                    "description": "The information of the last call record",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_last_login_time",
        "description": "Get the last login time of the account",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "last_login_time": {
                    "description": "The last login time",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "analyze_transactions",
        "description": "Analyze transaction records, mark abnormal transaction tools",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "analysis_results": {
                    "description": "Analysis results, including abnormal transaction tags",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "currency_type_selector",
        "description": "Tool for selecting currency type",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "description": "Selected currency type",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "currency_exchange_rate",
        "description": "Query the current exchange rate of a currency pair",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_from": {
                    "description": "Source currency type",
                    "type": "string"
                },
                "currency_to": {
                    "description": "Target currency type",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "exchange_rate": {
                    "description": "Current market exchange rate",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "confirm_appointment",
        "description": "Confirm appointment information",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                },
                "confirmation": {
                    "description": "Whether to confirm the appointment",
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ]
                },
                "date": {
                    "type": "string",
                    "description": "Appointment date"
                },
                "time": {
                    "type": "string",
                    "description": "Appointment time"
                },
                "technician_name": {
                    "type": "string",
                    "description": "Technician's name"
                },
                "contact_method": {
                    "type": "string",
                    "description": "User's contact method"
                },
                "company": {
                    "type": "string",
                    "description": "Maintenance company name"
                },
                "serviceAddress": {
                    "type": "string",
                    "description": "Service address"
                },
                "toolList": {
                    "type": "array",
                    "description": "List of tools the technician needs to carry",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_details": {
                    "description": "Appointment confirmation details",
                    "type": "string"
                },
                "confirmation_status": {
                    "description": "Appointment confirmation status",
                    "type": "string"
                },
                "appointment_status": {
                    "description": "Appointment status",
                    "type": "string"
                },
                "arrival_time": {
                    "type": "string",
                    "description": "Estimated technician arrival time"
                }
            }
        }
    },
    {
        "name": "notify_user_of_appointment",
        "description": "Notify the user that the appointment is successful and provide relevant information",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "User contact information"
                },
                "provider_info": {
                    "type": "object",
                    "description": "Service provider information"
                },
                "time": {
                    "type": "string",
                    "description": "Appointment time"
                },
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                },
                "appointmentDetails": {
                    "type": "string",
                    "description": "Detailed information of the appointment"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "description": "Notification status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "calculate_meal_subsidy",
        "description": "Calculate the total meal subsidy",
        "arguments": {
            "type": "object",
            "properties": {
                "meal_subsidy_standard": {
                    "type": "number",
                    "description": "Daily meal subsidy standard"
                },
                "days": {
                    "type": "number",
                    "description": "Number of business trip days"
                },
                "meal_subsidy_per_meal": {
                    "type": "number",
                    "description": "Meal subsidy amount per meal"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "total_meal_subsidy": {
                    "type": "number",
                    "description": "Total meal subsidy"
                }
            }
        }
    },
    {
        "name": "schedule_currency_check",
        "description": "Set up an automatic task to check exchange rates and calculate the conversion amount at a specified time",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "The time when the task is executed"
                },
                "amount": {
                    "type": "integer",
                    "description": "The amount of money to convert"
                },
                "from_currency": {
                    "type": "string",
                    "description": "The original currency type"
                },
                "to_currency": {
                    "type": "string",
                    "description": "The target currency type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_status": {
                    "type": "string",
                    "description": "The status of the task setup"
                }
            }
        }
    },
    {
        "name": "confirm_transaction",
        "description": "Confirm a specific transaction record",
        "arguments": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "string",
                    "description": "Account card number"
                },
                "transaction_details": {
                    "type": "object",
                    "properties": {
                        "merchant_name": {
                            "type": "string",
                            "description": "Merchant name"
                        },
                        "amount": {
                            "type": "number",
                            "description": "Transaction amount"
                        }
                    },
                    "required": [
                        "merchant_name",
                        "amount"
                    ]
                },
                "transaction_time": {
                    "type": "string",
                    "description": "Transaction time"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Transaction confirmation status"
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Confirmed transaction ID"
                }
            }
        }
    },
    {
        "name": "cash_withdrawal_reservation",
        "description": "RMB cash withdrawal reservation tool",
        "arguments": {
            "type": "object",
            "properties": {
                "withdrawal_type": {
                    "description": "Withdrawal type (large amount/new notes/small change)",
                    "type": "string"
                },
                "pickup_branch": {
                    "description": "Pickup branch",
                    "type": "string"
                },
                "pickup_date": {
                    "description": "Pickup date",
                    "type": "string",
                    "format": "date"
                },
                "withdrawal_account": {
                    "description": "Withdrawal account",
                    "type": "string"
                },
                "amount": {
                    "description": "Amount",
                    "type": "integer"
                },
                "business_notice": {
                    "description": "Business notice",
                    "type": "boolean"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_status": {
                    "description": "Reservation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "flight_ticket_cancelling",
        "description": "Flight Ticket Cancellation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "description": "Departure time of the flight to be cancelled",
                    "type": "string"
                },
                "flightNumber": {
                    "description": "Flight number to be cancelled",
                    "type": "string"
                },
                "bookingName": {
                    "description": "Name of the passenger for the flight to be cancelled",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Flight booking cancellation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "company_credit_check",
        "description": "Enterprise Credit Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "companyName": {
                    "description": "The name of the company being queried",
                    "type": "string"
                },
                "country": {
                    "description": "The country or region where the enterprise is located",
                    "type": "string"
                },
                "checkDate": {
                    "description": "The date of inquiry",
                    "type": "string",
                    "format": "date-time"
                },
                "reportingPeriod": {
                    "description": "Reporting period",
                    "type": "string"
                },
                "region": {
                    "description": "The region where the company is located",
                    "type": "string"
                },
                "checkType": {
                    "description": "Type of inquiry, conducting queries around various aspects of enterprise credit",
                    "enum": [
                        "financial",
                        "legal",
                        "business"
                    ],
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "credit_score": {
                    "description": "The credit score of the enterprise",
                    "type": "integer"
                },
                "credit_rating": {
                    "description": "Credit rating of the enterprise",
                    "type": "string"
                },
                "credit_status": {
                    "description": "The credit status of the enterprise being queried",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "company_credit_score",
        "description": "Corporate Credit Scoring Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "companyName": {
                    "description": "Company Name",
                    "type": "string"
                },
                "industry": {
                    "description": "Industry Type",
                    "type": "string"
                },
                "establishmentDate": {
                    "description": "Establishment Date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "credit_score": {
                    "description": "Corporate Credit Score",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "user_info_query",
        "description": "User Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "user_info": {
                    "description": "User Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "enterprise_credit_assessment",
        "description": "Enterprise Credit Assessment Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "enterpriseName": {
                    "description": "Enterprise Name",
                    "type": "string"
                },
                "evaluationDate": {
                    "description": "Evaluation Date",
                    "type": "string"
                },
                "industryType": {
                    "description": "Industry Type",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "credit_score": {
                    "description": "Enterprise Credit Score",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "medicine_info_search",
        "description": "Medicine Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "medicineName": {
                    "description": "Name of the medicine",
                    "type": "string"
                },
                "manufacturer": {
                    "description": "Manufacturer",
                    "type": "string"
                },
                "expiryDate": {
                    "description": "Expiry date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ingredients": {
                    "description": "Ingredients of the medicine",
                    "type": "string"
                },
                "indication": {
                    "description": "Indications",
                    "type": "string"
                },
                "sideEffects": {
                    "description": "Possible side effects",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "enterprise_credit_search",
        "description": "Enterprise Credit Rating Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "companyName": {
                    "description": "Name of the company",
                    "type": "string"
                },
                "fiscalYear": {
                    "description": "Fiscal year",
                    "type": "string"
                },
                "sector": {
                    "description": "Industry sector of the company",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "credit_rating": {
                    "description": "Credit rating of the company",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "query_credit_card_debt",
        "description": "Credit Card Debt Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Credit Card Account ID"
                },
                "card_number": {
                    "type": "string",
                    "description": "Credit Card Number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "debt_amount": {
                    "type": "number",
                    "description": "Current Debt Amount of the Credit Card"
                }
            }
        }
    },
    {
        "name": "domestic_remittance",
        "description": "Make a single remittance to a designated domestic account",
        "arguments": {
            "type": "object",
            "properties": {
                "payee_name": {
                    "description": "Payee Name",
                    "type": "string"
                },
                "payee_card_number": {
                    "description": "Payee Card Number",
                    "type": "string"
                },
                "payee_bank": {
                    "description": "Payee Bank",
                    "type": "string"
                },
                "remittance_amount": {
                    "description": "Remittance Amount",
                    "type": "number"
                },
                "remittance_method": {
                    "description": "Remittance Method (Instant/Regular/Next Day)",
                    "type": "string"
                },
                "payer_card_number": {
                    "description": "Payer Card Number",
                    "type": "string"
                },
                "postscript": {
                    "description": "Postscript (Optional)",
                    "type": "string"
                },
                "sms_notification": {
                    "description": "SMS Notification (Optional)",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "description": "Transaction ID",
                    "type": "string"
                },
                "status": {
                    "description": "Remittance Status",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Transaction Timestamp",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "export_transactions",
        "description": "Export bank account transactions within a specified time range",
        "arguments": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string",
                    "description": "The account for which to export transaction records"
                },
                "start_date": {
                    "type": "string",
                    "description": "The start date of the records to export"
                },
                "end_date": {
                    "type": "string",
                    "description": "The end date of the records to export"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "export_status": {
                    "type": "boolean",
                    "description": "Whether the export was successful"
                },
                "transactions": {
                    "type": "array",
                    "description": "List of transaction records"
                }
            }
        }
    },
    {
        "name": "search_customer_service",
        "description": "Search for the official customer service phone number based on the bank name",
        "arguments": {
            "type": "object",
            "properties": {
                "bank_name": {
                    "type": "string",
                    "description": "The bank name of the user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "phone_number": {
                    "type": "string",
                    "description": "The obtained customer service phone number"
                }
            }
        }
    },
    {
        "name": "send_booking_status",
        "description": "Send booking status information through the user's preferred communication method",
        "arguments": {
            "type": "object",
            "properties": {
                "preferred_contact_method": {
                    "type": "string",
                    "description": "User's preferred contact method"
                },
                "booking_details": {
                    "type": "string",
                    "description": "Details of the booking"
                },
                "orderStatus": {
                    "type": "string",
                    "description": "Details of the order delivery status"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Send status"
                }
            }
        }
    },
    {
        "name": "complaint_merchant",
        "description": "Users complain about merchants to customer service through the platform",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "User Account ID",
                    "type": "string"
                },
                "merchant_id": {
                    "description": "Merchant ID",
                    "type": "string"
                },
                "content": {
                    "description": "Content of the complaint",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status of the complaint",
                    "type": "string"
                },
                "response": {
                    "description": "Customer service response",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "notify_user_of_repair_details",
        "description": "Notify the user of the detailed information of the repair request using the user's contact information",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "The user's contact information"
                },
                "requestID": {
                    "type": "string",
                    "description": "The identification number of the repair request"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "The status of the notification sent"
                }
            }
        }
    },
    {
        "name": "get_deleted_transaction_time",
        "description": "Get the time of the deleted transaction",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "The ID of the deleted transaction"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_time": {
                    "type": "string",
                    "description": "The time of the deleted transaction",
                    "format": "date-time"
                }
            }
        }
    },
    {
        "name": "create_task",
        "description": "Create and save a new task",
        "arguments": {
            "type": "object",
            "properties": {
                "task_name": {
                    "type": "string",
                    "description": "Task name"
                },
                "task_content": {
                    "type": "string",
                    "description": "Task content"
                },
                "task_time": {
                    "type": "string",
                    "description": "Task time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "task_creation_status": {
                    "type": "string",
                    "description": "Task creation status"
                }
            }
        }
    },
    {
        "name": "request_transaction_deletion",
        "description": "Create a request to delete erroneous transactions",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Erroneous transaction ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "deletion_status": {
                    "description": "Deletion request status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_discount_info_to_user",
        "description": "Send filtered discount information to the user",
        "arguments": {
            "type": "object",
            "properties": {
                "discount_info": {
                    "type": "string",
                    "description": "Filtered discount information"
                },
                "user_id": {
                    "type": "string",
                    "description": "User ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Send status"
                }
            }
        }
    },
    {
        "name": "query_bank_customer_service",
        "description": "Query the contact information of bank customer service",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "customer_service_info": {
                    "description": "Contact information of bank customer service",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "customer_review_analyzer",
        "description": "Analyze the emotional tendency of user review content",
        "arguments": {
            "type": "object",
            "properties": {
                "productID": {
                    "description": "The ID of the product",
                    "type": "string"
                },
                "reviewDate": {
                    "description": "The date of the user review",
                    "type": "string"
                },
                "reviewText": {
                    "description": "The content of the user's review",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sentiment_score": {
                    "description": "The sentiment score of the user review, ranging from -1 to 1, with -1 being the most negative and 1 being the most positive",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "get_refund_transaction_details",
        "description": "Retrieve detailed information of refund transactions between a specified account and merchant within a specified time frame",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User Account ID"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                },
                "transaction_time": {
                    "type": "string",
                    "description": "Transaction Time",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the information retrieval"
                },
                "transaction_details": {
                    "type": "string",
                    "description": "Detailed information of the refund transaction"
                }
            }
        }
    },
    {
        "name": "government_bond_search",
        "description": "Savings Government Bond Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "term": {
                    "description": "Term (36 months/60 months)",
                    "type": "integer"
                },
                "issue_start_time": {
                    "description": "Government Bond Issue Start Time",
                    "type": "string"
                },
                "interest_payment_method": {
                    "description": "Interest Payment Method (Periodic Payment/Interest Paid at Maturity/Other)",
                    "type": "string"
                },
                "interest_rate_method": {
                    "description": "Interest Rate Method (Fixed Coupon Rate/Floating Coupon Rate/Inflation-indexed Bond/Other)",
                    "type": "string"
                },
                "term_type": {
                    "description": "Term Type (Variable Term/Other)",
                    "type": "string"
                },
                "keywords": {
                    "description": "Keywords",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "government_bond_info": {
                    "description": "Government Bond Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "analyze_and_recommend",
        "description": "Analyze the home insurance products on the market and generate a recommendation list",
        "arguments": {
            "type": "object",
            "properties": {
                "products_info": {
                    "type": "array",
                    "description": "Information of home insurance products on the market"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recommendations": {
                    "type": "array",
                    "description": "List of recommended home insurance products",
                    "items": {
                        "properties": {
                            "productName": {
                                "description": "Product Name",
                                "type": "string"
                            },
                            "productBenefits": {
                                "description": "Product Benefits",
                                "type": "string"
                            },
                            "productPremium": {
                                "description": "Product Premium",
                                "type": "number"
                            },
                            "userRating": {
                                "description": "User Rating",
                                "type": "number"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "flight_price_query",
        "description": "Query flight price information for a specific time range from departure to destination",
        "arguments": {
            "type": "object",
            "properties": {
                "departure": {
                    "type": "string",
                    "description": "Departure location"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "time_range": {
                    "type": "string",
                    "description": "Time range for the query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flights": {
                    "type": "array",
                    "description": "List of flights",
                    "items": {
                        "type": "object",
                        "properties": {
                            "flight_number": {
                                "type": "string",
                                "description": "Flight number"
                            },
                            "price": {
                                "type": "number",
                                "description": "Price"
                            },
                            "departure_time": {
                                "type": "string",
                                "description": "Departure time"
                            },
                            "arrival_time": {
                                "type": "string",
                                "description": "Arrival time"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "query_flight_with_same_time",
        "description": "Query for new flight information with the same time as the original flight",
        "arguments": {
            "type": "object",
            "properties": {
                "originalFlightNumber": {
                    "type": "string",
                    "description": "Original flight number"
                },
                "newFlightNumber": {
                    "type": "string",
                    "description": "New flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Scheduled departure date of the new flight"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "departureTime": {
                    "type": "string",
                    "description": "Actual departure time of the new flight"
                }
            }
        }
    },
    {
        "name": "compare_exchange_rates",
        "description": "Compare the amount after different exchange rates conversion",
        "arguments": {
            "type": "object",
            "properties": {
                "real_time_rate": {
                    "type": "number",
                    "description": "Real-time exchange rate"
                },
                "bank_rate": {
                    "type": "number",
                    "description": "Commercial bank exchange rate"
                },
                "cny_to_jpy_amount": {
                    "description": "Amount of Chinese Yuan converted to Japanese Yen",
                    "type": "number"
                },
                "usd_to_jpy_amount": {
                    "description": "Amount of US Dollar converted to Japanese Yen",
                    "type": "number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "difference": {
                    "type": "number",
                    "description": "The difference in amount between the two methods"
                },
                "better_rate": {
                    "description": "More favorable exchange rate method",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "user_review_assessment",
        "description": "User Review Analysis Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "reviewText": {
                    "description": "The review text from the user",
                    "type": "string"
                },
                "reviewDate": {
                    "description": "The date of the user review (format: YYYY-MM-DD HH:MM)",
                    "type": "string"
                },
                "productName": {
                    "description": "The name of the product being reviewed",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sentiment_score": {
                    "description": "The sentiment score of the user review",
                    "type": "number"
                },
                "keywords": {
                    "description": "Keywords from the user review",
                    "type": "array"
                },
                "summary": {
                    "description": "Summary of the review",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "retrieve_transaction_amount",
        "description": "Retrieve the amount of payment transactions with merchants at a specific point in time",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "date": {
                    "type": "string",
                    "description": "Transaction date"
                },
                "time": {
                    "type": "string",
                    "description": "Specific transaction time"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Retrieval status"
                },
                "amount": {
                    "type": "integer",
                    "description": "Transaction amount"
                }
            }
        }
    },
    {
        "name": "verify_transaction_amount",
        "description": "Verify whether the amount in the transaction record is correct",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User Account ID"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                },
                "date": {
                    "type": "string",
                    "description": "Transaction Date"
                },
                "transaction_details": {
                    "type": "string",
                    "description": "Transaction Details"
                },
                "expected_amount": {
                    "type": "integer",
                    "description": "Expected Correct Amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "Consumption Amount"
                },
                "verification_status": {
                    "description": "Amount Verification Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_delivery_time",
        "description": "Get the delivery time for a specific order",
        "arguments": {
            "type": "object",
            "properties": {
                "orderId": {
                    "type": "string",
                    "description": "The order ID for which the delivery time is being queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "deliveryTime": {
                    "type": "string",
                    "description": "The delivery time of the order"
                }
            }
        }
    },
    {
        "name": "arrange_delivery",
        "description": "Arrange the delivery of goods to the specified address",
        "arguments": {
            "type": "object",
            "properties": {
                "product": {
                    "type": "string",
                    "description": "Name of the product to be delivered"
                },
                "address": {
                    "type": "string",
                    "description": "Delivery address"
                },
                "delivery_time": {
                    "type": "string",
                    "description": "Expected delivery time"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of the material package"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "delivery_status": {
                    "type": "string",
                    "description": "Delivery status"
                },
                "tracking_info": {
                    "type": "string",
                    "description": "Tracking information"
                }
            }
        }
    },
    {
        "name": "delay_delivery",
        "description": "Request the courier service provider to postpone the delivery time",
        "arguments": {
            "type": "object",
            "properties": {
                "trackingNumber": {
                    "type": "string",
                    "description": "Courier tracking number"
                },
                "courierCompany": {
                    "type": "string",
                    "description": "Name of the courier company"
                },
                "newDeliveryTime": {
                    "type": "string",
                    "description": "New delivery time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "changeStatus": {
                    "type": "string",
                    "description": "Status of whether the change of delivery time was successful"
                }
            }
        }
    },
    {
        "name": "currency_conversion",
        "description": "Currency Conversion Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Amount to be converted",
                    "type": "integer"
                },
                "from_currency": {
                    "description": "Original currency type (e.g., USD, CNY, etc.)",
                    "type": "string"
                },
                "to_currency": {
                    "description": "Target currency type (e.g., EUR, JPY, etc.)",
                    "type": "string"
                },
                "exchange_rate": {
                    "type": "number",
                    "description": "Current exchange rate of foreign currency"
                },
                "date": {
                    "type": "string",
                    "description": "The date of the exchange rate query, must be a past date",
                    "format": "date-time",
                    "example": "2022-01-01"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "conversion_result": {
                    "description": "Result after conversion",
                    "type": "number"
                },
                "exchange_status": {
                    "type": "string",
                    "description": "Information on whether the exchange was successful"
                },
                "date": {
                    "type": "string",
                    "description": "Date of the exchange rate used",
                    "format": "date-time"
                }
            }
        }
    },
    {
        "name": "check_delivery_status",
        "description": "Check the delivery status of a specified order number",
        "arguments": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string",
                    "description": "The order number for which to check the delivery status"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Delivery status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "track_approval_status",
        "description": "Track approval process status",
        "arguments": {
            "type": "object",
            "properties": {
                "approval_id": {
                    "type": "string",
                    "description": "Approval ID"
                },
                "assetID": {
                    "type": "string",
                    "description": "Asset Number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "approval_status": {
                    "type": "string",
                    "description": "Approval Status"
                }
            }
        }
    },
    {
        "name": "estimate_delivery_time",
        "description": "Estimate the expected delivery time based on order status and delivery address",
        "arguments": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string",
                    "description": "Order ID"
                },
                "trackingNumber": {
                    "type": "string",
                    "description": "Tracking Number"
                },
                "deliveryAddress": {
                    "type": "string",
                    "description": "Delivery Address"
                },
                "orderStatus": {
                    "type": "string",
                    "description": "Current Order Status"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "delivery_date": {
                    "type": "string",
                    "description": "Estimated Delivery Date"
                }
            }
        }
    },
    {
        "name": "schedule_file_delete",
        "description": "Set up a task to automatically delete files",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path to delete"
                },
                "delete_date": {
                    "type": "string",
                    "description": "The scheduled date for deletion"
                },
                "delete_time": {
                    "type": "string",
                    "description": "The time to delete the file"
                },
                "condition": {
                    "type": "string",
                    "description": "The condition that triggers the deletion"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the task setting is successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "media_platforms_search",
        "description": "Search for media platforms that report on a specific news event and filter out the main publishing platforms",
        "arguments": {
            "type": "object",
            "properties": {
                "keyword": {
                    "type": "string",
                    "description": "News keyword"
                },
                "date": {
                    "type": "string",
                    "description": "Date of the news",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "platforms": {
                    "type": "array",
                    "description": "List of main media platforms reporting the news"
                }
            }
        }
    },
    {
        "name": "precious_metals_quotes_search",
        "description": "Precious Metals Quotation Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "metalsType": {
                    "description": "Type of precious metal",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "current_price": {
                    "description": "Current price",
                    "type": "number"
                },
                "day_change": {
                    "description": "Daily change",
                    "type": "number"
                },
                "week_change": {
                    "description": "Weekly change",
                    "type": "number"
                },
                "month_change": {
                    "description": "Monthly change",
                    "type": "number"
                },
                "year_change": {
                    "description": "Annual change",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "contract_content_search",
        "description": "Contract Content Retrieval Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "input": {
                    "description": "User Input",
                    "type": "string"
                },
                "contractType": {
                    "description": "Contract Type",
                    "type": "string"
                },
                "contractName": {
                    "description": "Contract Name",
                    "type": "string"
                },
                "subContractName": {
                    "description": "Subcontract Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contract_content": {
                    "description": "Contract Content",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "filter_pharmacies_with_medication",
        "description": "Filter pharmacies that sell specified medication from the list of pharmacies",
        "arguments": {
            "type": "object",
            "properties": {
                "pharmacies_list": {
                    "type": "array",
                    "description": "List of pharmacies"
                },
                "medication": {
                    "type": "string",
                    "description": "Name of the medication"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_pharmacies": {
                    "type": "array",
                    "description": "List of filtered pharmacies"
                }
            }
        }
    },
    {
        "name": "flight_status_search",
        "description": "Flight Status Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "description": "Flight Number",
                    "type": "string"
                },
                "date": {
                    "description": "Departure Date",
                    "type": "string"
                },
                "airport": {
                    "description": "Airport Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flight_status": {
                    "description": "Flight Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "search_attractions",
        "description": "Search for famous attractions and recommended routes in a specific location",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Travel destination"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "attractions_list": {
                    "type": "array",
                    "description": "List of attractions"
                }
            }
        }
    },
    {
        "name": "insurance_claim_status",
        "description": "Query the status of insurance claim",
        "arguments": {
            "type": "object",
            "properties": {
                "claimNumber": {
                    "description": "Claim case number",
                    "type": "string"
                },
                "customerID": {
                    "description": "Customer ID",
                    "type": "string"
                },
                "insuranceCompany": {
                    "description": "Insurance company",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "claim_status": {
                    "description": "Claim status",
                    "type": "string"
                },
                "estimatedCompletionDate": {
                    "description": "Estimated completion date",
                    "type": "string"
                },
                "details": {
                    "description": "Claim details",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "compare_insurance_prices",
        "description": "Compare the insurance price differences at different ages",
        "arguments": {
            "type": "object",
            "properties": {
                "price_age_30": {
                    "type": "number",
                    "description": "Insurance price at age 30"
                },
                "price_age_25": {
                    "type": "number",
                    "description": "Insurance price at age 25"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price_difference": {
                    "type": "number",
                    "description": "Price difference"
                }
            }
        }
    },
    {
        "name": "update_user_repair_record",
        "description": "Update user's personal repair appointment record",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "User's contact information"
                },
                "newDate": {
                    "type": "string",
                    "description": "New repair appointment date"
                },
                "address": {
                    "type": "string",
                    "description": "Repair location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "type": "string",
                    "description": "Status of the update record"
                }
            }
        }
    },
    {
        "name": "select_best_insurance_product",
        "description": "Select the best insurance product from the provided list of insurance products",
        "arguments": {
            "type": "object",
            "properties": {
                "insurance_products": {
                    "description": "List of eligible insurance products",
                    "type": "array"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_product": {
                    "description": "Information of the selected best insurance product",
                    "type": "object",
                    "properties": {
                        "productName": {
                            "description": "Product Name",
                            "type": "string"
                        },
                        "productBenefits": {
                            "description": "Product Benefits",
                            "type": "string"
                        },
                        "productPremium": {
                            "description": "Product Premium",
                            "type": "number"
                        }
                    }
                }
            }
        }
    },
    {
        "name": "insurance_customer_update",
        "description": "Update insurance customer's personal information",
        "arguments": {
            "type": "object",
            "properties": {
                "customerID": {
                    "description": "Customer ID",
                    "type": "string"
                },
                "newAddress": {
                    "description": "New address",
                    "type": "string"
                },
                "newPhoneNumber": {
                    "description": "New phone number",
                    "type": "string"
                },
                "newEmail": {
                    "description": "New email address",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "updateStatus": {
                    "description": "Update status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "open_icbc_messenger_service",
        "description": "Tool for activating ICBC Messenger Service",
        "arguments": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "description": "Card (Account) Number/Mobile Number/Username",
                    "type": "string"
                },
                "password": {
                    "description": "Account Password",
                    "type": "string"
                },
                "verificationCode": {
                    "description": "Verification Code",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_opening_status": {
                    "description": "ICBC Messenger Service Activation Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "analyze_currency_fluctuation",
        "description": "Analyze historical currency exchange rate fluctuations to predict potential future volatility",
        "arguments": {
            "type": "object",
            "properties": {
                "historical_data": {
                    "type": "array",
                    "description": "Historical exchange rate data"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "fluctuation_analysis": {
                    "type": "string",
                    "description": "Currency exchange rate fluctuation analysis results"
                }
            }
        }
    },
    {
        "name": "transport_card_recharge",
        "description": "Public Transport Card Recharge Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "cardID": {
                    "description": "Public Transport Card ID",
                    "type": "string"
                },
                "amount": {
                    "description": "Recharge Amount",
                    "type": "integer"
                },
                "paymentMethod": {
                    "description": "Payment Method",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transactionID": {
                    "description": "Transaction ID",
                    "type": "string"
                },
                "remainingBalance": {
                    "description": "Remaining Balance on Card",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "enterprise_credit_report",
        "description": "Enterprise Credit Report Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "companyName": {
                    "description": "Company Name",
                    "type": "string"
                },
                "registerDate": {
                    "description": "Company Registration Date",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                },
                "region": {
                    "description": "Company Location",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "credit_rating": {
                    "description": "Enterprise Credit Rating",
                    "type": "string"
                },
                "total_score": {
                    "description": "Enterprise Total Credit Score",
                    "type": "integer"
                },
                "report_date": {
                    "description": "Report Generation Date",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "export_schedule_info",
        "description": "Export the searched schedule information to a specified file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path where the information will be exported"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the export operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "delivery_time_prediction",
        "description": "Predict the delivery time of an order based on the current delivery status and average delivery time",
        "arguments": {
            "type": "object",
            "properties": {
                "orderStatus": {
                    "type": "string",
                    "description": "The current delivery status of the order"
                },
                "averageDeliveryTime": {
                    "type": "string",
                    "description": "The average delivery time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "predictedDeliveryTime": {
                    "description": "The predicted delivery time",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "loan_confirmation",
        "description": "Loan Confirmation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation": {
                    "description": "Confirm loan (Yes/No)",
                    "type": "boolean"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_result": {
                    "description": "Loan Confirmation Result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "confirm_price_and_policy",
        "description": "Confirm the price and booking policy of the specified hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                },
                "city": {
                    "type": "string",
                    "description": "City"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date",
                    "format": "date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date",
                    "format": "date"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "policy": {
                    "type": "string",
                    "description": "Booking policy"
                }
            }
        }
    },
    {
        "name": "compare_price_and_select_room",
        "description": "Compare prices and select the appropriate room",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_room": {
                    "type": "object",
                    "description": "Information of the selected room"
                }
            }
        }
    },
    {
        "name": "analyze_price_trend",
        "description": "Analyze price trend",
        "arguments": {
            "type": "object",
            "properties": {
                "historical_prices": {
                    "type": "array",
                    "description": "Historical price data"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price_trend": {
                    "type": "string",
                    "description": "Price trend analysis results"
                }
            }
        }
    },
    {
        "name": "create_price_table",
        "description": "Create a table for recording price information",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "table": {
                    "description": "The created table object",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "price_comparison_tool",
        "description": "Product price query and comparison tool",
        "arguments": {
            "type": "object",
            "properties": {
                "productID1": {
                    "description": "Product identification code 1",
                    "type": "string"
                },
                "productID2": {
                    "description": "Product identification code 2",
                    "type": "string"
                },
                "productID": {
                    "description": "Unique product identification code",
                    "type": "string"
                },
                "date1": {
                    "description": "Date 1",
                    "type": "string"
                },
                "date2": {
                    "description": "Date 2",
                    "type": "string"
                },
                "price1": {
                    "description": "Price 1",
                    "type": "string"
                },
                "price2": {
                    "description": "Price 2",
                    "type": "string"
                },
                "storeName1": {
                    "description": "Store name 1",
                    "type": "string"
                },
                "storeName2": {
                    "description": "Store name 2",
                    "type": "string"
                },
                "storeName": {
                    "description": "Store name",
                    "type": "string"
                },
                "date": {
                    "description": "Query date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "description": "Product price",
                    "type": "number"
                },
                "lowestStore": {
                    "description": "Store name with the lowest price",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "product_catalog_import",
        "description": "Product Catalog Import Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "Product Category",
                    "type": "string"
                },
                "importDate": {
                    "description": "Import Date",
                    "type": "string"
                },
                "dataSource": {
                    "description": "Data Source",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "import_status": {
                    "description": "Import Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "select_deposit_product",
        "description": "Select the best deposit product that matches the account balance from the search results",
        "arguments": {
            "type": "object",
            "properties": {
                "product_list": {
                    "type": "string",
                    "description": "List of deposit products"
                },
                "account_balance": {
                    "type": "string",
                    "description": "Account balance"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_product": {
                    "type": "string",
                    "description": "Selected deposit product"
                }
            }
        }
    },
    {
        "name": "mortgage_calculator_tool",
        "description": "A tool for calculating mortgage loans, capable of computing both equal principal and equal repayment methods",
        "arguments": {
            "type": "object",
            "properties": {
                "loanAmount": {
                    "type": "number",
                    "description": "Total loan amount, unit: Yuan",
                    "example": 1000000
                },
                "loanTerm": {
                    "type": "integer",
                    "description": "Loan term, unit: years",
                    "example": 20
                },
                "annualInterestRate": {
                    "type": "number",
                    "description": "Annual interest rate, unit: %, please represent 4.9% as 4.9",
                    "example": 4.9
                },
                "repaymentMethod": {
                    "type": "string",
                    "description": "Repayment method, options are \"Equal principal\" and \"Equal repayment\"",
                    "enum": [
                        "Equal principal",
                        "Equal repayment"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "monthlyPayment": {
                    "type": "array",
                    "description": "Monthly repayment amount, each element in the array represents the repayment amount for one month, unit: Yuan"
                },
                "totalPayment": {
                    "type": "number",
                    "description": "Total repayment amount, unit: Yuan"
                },
                "totalInterest": {
                    "type": "number",
                    "description": "Total interest paid, unit: Yuan"
                }
            }
        }
    },
    {
        "name": "technician_experience_verification",
        "description": "Verify whether the technician has maintenance experience for a specific model of washing machine",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceModel": {
                    "type": "string",
                    "description": "The model of the washing machine that requires verification of maintenance experience"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "type": "string",
                    "description": "The status of whether the technician has maintenance experience"
                }
            }
        }
    },
    {
        "name": "fashion_advice",
        "description": "Provides fashion coordination advice based on season, temperature range, clothing types, color matching, and accessory selection",
        "arguments": {
            "type": "object",
            "properties": {
                "season": {
                    "type": "string",
                    "description": "Season"
                },
                "temperature_range": {
                    "type": "string",
                    "description": "Temperature range"
                },
                "clothing_types": {
                    "type": "string",
                    "description": "Clothing types"
                },
                "color_match": {
                    "type": "string",
                    "description": "Color matching advice"
                },
                "accessories": {
                    "type": "string",
                    "description": "Accessory selection"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "fashion_tips": {
                    "type": "string",
                    "description": "Fashion coordination advice"
                }
            }
        }
    },
    {
        "name": "skill_matching_tool",
        "description": "Match the skill requirements mentioned in the job description with the skills listed in the resume",
        "arguments": {
            "type": "object",
            "properties": {
                "job_skills": {
                    "type": "string",
                    "description": "The skill requirements mentioned in the job description"
                },
                "resume_skills": {
                    "type": "string",
                    "description": "The skills listed in the resume"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "match_status": {
                    "type": "boolean",
                    "description": "Whether the skills match"
                }
            }
        }
    },
    {
        "name": "camera_details_fetcher",
        "description": "Fetch detailed information of a specific camera model",
        "arguments": {
            "type": "object",
            "properties": {
                "model": {
                    "type": "string",
                    "description": "Camera model"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Camera price"
                },
                "weight": {
                    "type": "number",
                    "description": "Camera weight"
                },
                "resolution": {
                    "type": "string",
                    "description": "Camera resolution"
                },
                "other_features": {
                    "type": "string",
                    "description": "Other key features"
                },
                "specifications": {
                    "type": "string",
                    "description": "Detailed specifications of the camera"
                }
            }
        }
    },
    {
        "name": "professional_photography_tips",
        "description": "A tool providing photography techniques, including the effects of different lighting, composition tips, color matching suggestions, and camera settings",
        "arguments": {
            "type": "object",
            "properties": {
                "lighting_conditions": {
                    "description": "Description of lighting conditions, such as strong sunlight, dim light, indoor lighting, etc.",
                    "type": "string",
                    "enum": [
                        "strong sunlight",
                        "dim light",
                        "indoor lighting",
                        "natural light"
                    ]
                },
                "scene": {
                    "description": "Type of scene, such as landscape, city, indoors, animals, etc.",
                    "type": "string"
                },
                "burst_mode": {
                    "description": "Whether to use burst mode",
                    "type": "boolean"
                },
                "iso": {
                    "description": "ISO value",
                    "type": "string"
                },
                "shutter_speed": {
                    "description": "Shutter speed",
                    "type": "string"
                },
                "color_match": {
                    "description": "Color matching requirements, such as bright, soft, black and white, etc.",
                    "type": "string",
                    "enum": [
                        "bright",
                        "soft",
                        "black and white",
                        "colorful"
                    ]
                },
                "camera_settings": {
                    "description": "Camera setting requirements, such as automatic, manual, depth of field, etc.",
                    "type": "string",
                    "enum": [
                        "automatic",
                        "manual",
                        "depth of field"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "photography_tips": {
                    "description": "Photography techniques",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "team_collaboration_tool",
        "description": "A tool that helps team collaboration and project management, capable of creating projects, adding team members, assigning tasks, and tracking task progress",
        "arguments": {
            "type": "object",
            "properties": {
                "project_name": {
                    "description": "Project Name",
                    "type": "string",
                    "format": "^[\\w\\s]{1,255}$",
                    "example": "New Product Development"
                },
                "team_members": {
                    "description": "Team Members",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tasks": {
                    "description": "Tasks",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "task_name": {
                                "description": "Task Name",
                                "type": "string"
                            },
                            "task_description": {
                                "description": "Task Description",
                                "type": "string"
                            },
                            "assignee": {
                                "description": "Assignee",
                                "type": "string"
                            },
                            "deadline": {
                                "description": "Deadline",
                                "type": "string",
                                "format": "date"
                            }
                        }
                    }
                },
                "progress": {
                    "description": "Project Progress",
                    "type": "string",
                    "enum": [
                        "Not Started",
                        "In Progress",
                        "Completed"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "overall_status": {
                    "description": "Overall Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "legal_guideline_search",
        "description": "Regulation Guidance Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "country": {
                    "description": "Country",
                    "type": "string"
                },
                "sector": {
                    "description": "Sector",
                    "type": "string"
                },
                "date": {
                    "description": "Adoption Date",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "guideline": {
                    "description": "Regulation Guidance",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "summarize_investment_info",
        "description": "Summarize the investment information of the product",
        "arguments": {
            "type": "object",
            "properties": {
                "productAnalysis": {
                    "type": "object",
                    "description": "Investment analysis of the product"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "investmentSummary": {
                    "type": "object",
                    "description": "Summary of investment information for the product"
                }
            }
        }
    },
    {
        "name": "travel_guide_generator",
        "description": "Travel Guide Generator Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "duration": {
                    "description": "Travel Duration",
                    "type": "integer"
                },
                "preferences": {
                    "description": "Travel Preferences",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "travel_guide": {
                    "description": "Travel Guide",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "parenting_advice_tool",
        "description": "Parenting Guidance Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "parent_age": {
                    "description": "Parent's age, only accepts numbers between 20 to 60",
                    "type": "integer"
                },
                "parent_education": {
                    "description": "Parent's educational level, can be 'primary school', 'junior high school', 'high school', 'university' or 'postgraduate'",
                    "type": "string",
                    "enum": [
                        "primary school",
                        "junior high school",
                        "high school",
                        "university",
                        "postgraduate"
                    ]
                },
                "child_age": {
                    "description": "Child's age, only accepts numbers between 0 to 18",
                    "type": "integer",
                    "format": "integer"
                },
                "child_sex": {
                    "description": "Child's sex, only accepts 'male' or 'female'",
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ]
                },
                "parent_sex": {
                    "description": "Parent's sex, only accepts 'male' or 'female'",
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ]
                },
                "issue": {
                    "description": "Guidance issue, must be 5 to 200 characters long",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "advice": {
                    "description": "Parenting guidance advice",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "investment_portfolio_builder",
        "description": "A tool for building investment portfolios, suitable for stocks, bonds, money market securities, commodity futures, and foreign exchange investments",
        "arguments": {
            "type": "object",
            "properties": {
                "investment_type": {
                    "description": "Type of investment",
                    "type": "string",
                    "enum": [
                        "stocks",
                        "bonds",
                        "money market securities",
                        "commodity futures",
                        "foreign exchange"
                    ]
                },
                "investment_amount": {
                    "description": "Amount of investment",
                    "type": "number"
                },
                "risk_tolerance": {
                    "description": "Risk tolerance",
                    "type": "string",
                    "enum": [
                        "conservative",
                        "moderate",
                        "aggressive"
                    ]
                },
                "investment_period": {
                    "description": "Investment period, in years",
                    "type": "integer",
                    "format": "int32",
                    "example": 3
                },
                "expected_return_rate": {
                    "description": "Expected annualized return rate, e.g., 0.05 represents 5%",
                    "type": "number",
                    "example": 0.05
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "portfolio": {
                    "description": "Investment portfolio information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "generate_unique_id",
        "description": "Generate a unique identifier ID",
        "arguments": {
            "type": "object",
            "properties": {
                "event_name": {
                    "type": "string",
                    "description": "Event name"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "event_id": {
                    "description": "Generated unique identifier ID",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "generate_review_draft",
        "description": "Generate a 5-star review draft based on user satisfaction prediction",
        "arguments": {
            "type": "object",
            "properties": {
                "sentiment": {
                    "type": "string",
                    "description": "Overall user satisfaction with the restaurant"
                },
                "dish_highlight": {
                    "type": "string",
                    "description": "User satisfaction description for a specific dish (e.g., fish)"
                },
                "service_highlight": {
                    "type": "string",
                    "description": "User satisfaction description of the restaurant's service"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "review_draft": {
                    "type": "string",
                    "description": "Generated content of the review draft"
                }
            }
        }
    },
    {
        "name": "generate_kline_chart",
        "description": "Generate and display the K-line trend chart",
        "arguments": {
            "type": "object",
            "properties": {
                "kline_data": {
                    "type": "string",
                    "description": "K-line data"
                },
                "title": {
                    "type": "string",
                    "description": "Chart title"
                },
                "x_label": {
                    "type": "string",
                    "description": "X-axis label"
                },
                "y_label": {
                    "type": "string",
                    "description": "Y-axis label"
                },
                "legend": {
                    "type": "string",
                    "description": "Legend"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "chart": {
                    "description": "Generated K-line chart",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "insert_daily_trend_analysis",
        "description": "Insert daily trend analysis into the report document",
        "arguments": {
            "type": "object",
            "properties": {
                "document": {
                    "description": "Report document",
                    "type": "string"
                },
                "daily_trend_data": {
                    "description": "Daily trend data",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "description": "Whether the analysis was successfully inserted"
                }
            }
        }
    },
    {
        "name": "get_transaction_id",
        "description": "Get transaction ID based on transaction time, user account ID, and merchant ID",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                },
                "amount": {
                    "type": "integer",
                    "description": "Transaction amount"
                },
                "transaction_time": {
                    "type": "string",
                    "description": "Transaction time",
                    "format": "date-time"
                },
                "description": {
                    "type": "string",
                    "description": "Transaction description"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Obtained transaction ID"
                }
            }
        }
    },
    {
        "name": "hotel_availability_query",
        "description": "Query the availability of rooms in a specified hotel for a specific date.",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "check_in_date": {
                    "type": "string",
                    "description": "Check-in date",
                    "format": "date"
                },
                "check_out_date": {
                    "type": "string",
                    "description": "Check-out date",
                    "format": "date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Room availability status"
                },
                "room_types": {
                    "type": "array",
                    "description": "List of available room types"
                }
            }
        }
    },
    {
        "name": "check_hotel_promotions",
        "description": "Check the current promotions of a specified hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                },
                "check_in_date": {
                    "type": "string",
                    "description": "Check-in date",
                    "format": "date"
                },
                "check_out_date": {
                    "type": "string",
                    "description": "Check-out date",
                    "format": "date"
                },
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "promotions": {
                    "type": "array",
                    "description": "Information on hotel promotions"
                },
                "promotion_details": {
                    "type": "string",
                    "description": "Details of the promotion"
                }
            }
        }
    },
    {
        "name": "hotel_info_query",
        "description": "Query hotel information",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "description": "Hotel identifier ID",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_info": {
                    "description": "Detailed hotel information",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "hotel_room_availability",
        "description": "Hotel Room Availability Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "hotelName": {
                    "description": "Name of the hotel",
                    "type": "string"
                },
                "roomType": {
                    "description": "Room type",
                    "type": "string"
                },
                "checkIn": {
                    "description": "Check-in date",
                    "type": "string"
                },
                "checkOut": {
                    "description": "Check-out date",
                    "type": "string"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel Identifier ID"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of rooms to book"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "description": "Availability of the room",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "hotel_cancellation_policy_query",
        "description": "Query the cancellation policy details for a specific reservation",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Reservation confirmation number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cancellation_policy": {
                    "type": "string",
                    "description": "Detailed information of the cancellation policy"
                }
            }
        }
    },
    {
        "name": "travel_group_search",
        "description": "Travel Group Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "departure_date": {
                    "description": "Departure Date",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                },
                "return_date": {
                    "description": "Return Date",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                },
                "root_city": {
                    "description": "Departure City",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "group_details": {
                    "description": "Detailed Information of the Travel Group",
                    "type": "string"
                },
                "tour_options": {
                    "description": "Travel Group Options",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "tour_name": {
                                "description": "Tour Group Name",
                                "type": "string"
                            },
                            "price": {
                                "description": "Price",
                                "type": "number"
                            },
                            "availability": {
                                "description": "Available Quantity",
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "hotel_booking_query",
        "description": "Hotel Booking Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "checkInDate": {
                    "description": "Expected Check-in Date",
                    "type": "string"
                },
                "checkOutDate": {
                    "description": "Expected Check-out Date",
                    "type": "string"
                },
                "hotelName": {
                    "description": "Hotel Name",
                    "type": "string"
                },
                "confirmation_number": {
                    "description": "Booking Confirmation Number",
                    "type": "string"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel Identifier ID"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room Type"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of Rooms Inquired"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "description": "Booking Availability",
                    "type": "boolean"
                },
                "order_details": {
                    "type": "object",
                    "description": "Booking Order Details",
                    "properties": {
                        "customer_name": {
                            "description": "Customer Name",
                            "type": "string"
                        },
                        "hotel_id": {
                            "description": "Hotel Identifier ID",
                            "type": "string"
                        },
                        "check_in": {
                            "description": "Check-in Date",
                            "type": "string",
                            "format": "date"
                        },
                        "check_out": {
                            "description": "Check-out Date",
                            "type": "string",
                            "format": "date"
                        },
                        "room_type": {
                            "description": "Room Type",
                            "type": "string"
                        },
                        "number_of_rooms": {
                            "description": "Number of Rooms",
                            "type": "integer"
                        },
                        "status": {
                            "description": "Order Status",
                            "type": "string"
                        }
                    }
                },
                "availability_status": {
                    "type": "string",
                    "description": "Room Availability Status"
                }
            }
        }
    },
    {
        "name": "hotel_reservation_status",
        "description": "A tool for querying hotel reservation status",
        "arguments": {
            "type": "object",
            "properties": {
                "hotelName": {
                    "description": "Hotel Name",
                    "type": "string"
                },
                "checkIn": {
                    "description": "Expected Check-in Time",
                    "type": "string",
                    "format": "date-time"
                },
                "checkOut": {
                    "description": "Expected Check-out Time",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_status": {
                    "description": "Hotel Reservation Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_summary_document",
        "description": "Create and save a summary document containing all service information",
        "arguments": {
            "type": "object",
            "properties": {
                "fixed_interest_bonds": {
                    "type": "string",
                    "description": "Information on government bonds with fixed interest payments and attached fixed interest rates"
                },
                "inflation_indexed_bonds": {
                    "type": "string",
                    "description": "Information on government bonds with interest payments indexed to inflation and categorized as inflation-indexed debts"
                },
                "customer_name": {
                    "type": "string",
                    "description": "Customer's name"
                },
                "room_services_info": {
                    "type": "string",
                    "description": "Room service information"
                },
                "dining_services_info": {
                    "type": "string",
                    "description": "Dining service information"
                },
                "fitness_facilities_info": {
                    "type": "string",
                    "description": "Fitness facilities information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "document": {
                    "description": "The created summary document",
                    "type": "string"
                },
                "document_path": {
                    "type": "string",
                    "description": "Path of the summary document"
                },
                "document_status": {
                    "type": "string",
                    "description": "Status of the document creation and saving"
                }
            }
        }
    },
    {
        "name": "check_database_service_status",
        "description": "Check the current status of the database service",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the database service is running",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "geolocation_tracker",
        "description": "Geolocation Tracking Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "deviceID": {
                    "description": "The unique identifier of the device",
                    "type": "string"
                },
                "startTime": {
                    "description": "The start time of tracking",
                    "type": "string"
                },
                "endTime": {
                    "description": "The end time of tracking",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "location_data": {
                    "description": "Geographical location data of the device within the specified time period",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "description": "Latitude"
                            },
                            "lon": {
                                "type": "number",
                                "description": "Longitude"
                            },
                            "timestamp": {
                                "type": "string",
                                "description": "The time when the location was captured"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "create_movement_report",
        "description": "Create a report based on device movement trajectory data",
        "arguments": {
            "type": "object",
            "properties": {
                "location_data": {
                    "type": "array",
                    "description": "Device movement trajectory data",
                    "items": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "description": "Latitude"
                            },
                            "lon": {
                                "type": "number",
                                "description": "Longitude"
                            },
                            "timestamp": {
                                "type": "string",
                                "description": "Time when the location was captured"
                            }
                        }
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report": {
                    "description": "Generated movement trajectory report",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_coordinates",
        "description": "Get latitude and longitude coordinates based on the provided address",
        "arguments": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The detailed address for which to query coordinates"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "coordinates": {
                    "type": "string",
                    "description": "The obtained latitude and longitude coordinates"
                }
            }
        }
    },
    {
        "name": "visualize_location_data",
        "description": "Convert geographic location data into a visual map",
        "arguments": {
            "type": "object",
            "properties": {
                "location_data": {
                    "type": "array",
                    "description": "Device movement route data",
                    "items": {
                        "type": "object",
                        "properties": {
                            "lat": {
                                "type": "number",
                                "description": "Latitude"
                            },
                            "lon": {
                                "type": "number",
                                "description": "Longitude"
                            },
                            "timestamp": {
                                "type": "string",
                                "description": "Time when the location was captured"
                            }
                        }
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "visualization": {
                    "description": "Generated visual map",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "repeat_reservation",
        "description": "Repeat reservation dates",
        "arguments": {
            "type": "object",
            "properties": {
                "reservation_id": {
                    "type": "string",
                    "description": "Reservation ID"
                },
                "event_title": {
                    "type": "string",
                    "description": "Event title"
                },
                "start_time": {
                    "type": "string",
                    "description": "Reservation start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Reservation end time"
                },
                "recurrence": {
                    "type": "string",
                    "description": "Recurrence frequency, e.g., daily, weekly, monthly, yearly, etc."
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the reservation was successfully created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_complaint_status",
        "description": "Check the processing progress of user complaints",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User Account ID"
                },
                "complaint_id": {
                    "type": "string",
                    "description": "Complaint ID"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "complaint_status": {
                    "type": "string",
                    "description": "Complaint processing status"
                },
                "status": {
                    "description": "Status of the complaint handling",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "package_status_tracker",
        "description": "Express package status tracking tool",
        "arguments": {
            "type": "object",
            "properties": {
                "tracking_number": {
                    "description": "Express tracking number",
                    "type": "string"
                },
                "courier_name": {
                    "description": "Name of the courier company",
                    "type": "string"
                },
                "request_date": {
                    "description": "Date and time of the tracking request",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                },
                "notificationMethod": {
                    "description": "Notification method",
                    "type": "string"
                },
                "expectedDeliveryDate": {
                    "description": "Expected delivery date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Current status of the express package",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "appliance_repair_status_query",
        "description": "Appliance Repair Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "description": "The repair request number to be queried",
                    "type": "string"
                },
                "applianceType": {
                    "description": "The type of appliance to be queried for repair",
                    "type": "string"
                },
                "applianceBrand": {
                    "description": "The brand of appliance to be queried for repair",
                    "type": "string"
                },
                "applianceModel": {
                    "description": "The model of appliance to be queried for repair",
                    "type": "string"
                },
                "contactInformation": {
                    "description": "Customer contact information",
                    "type": "string"
                },
                "address": {
                    "description": "Customer address",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "repair_status": {
                    "description": "Repair inquiry result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "package_status_tracking",
        "description": "Package Status Tracking Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "trackingNumber": {
                    "description": "Package Tracking Number",
                    "type": "string"
                },
                "carrierName": {
                    "description": "Carrier Name",
                    "type": "string"
                },
                "dateShipped": {
                    "description": "Date and Time of Shipment",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "currentLocation": {
                    "description": "Current Location of the Package",
                    "type": "string"
                },
                "currentStatus": {
                    "description": "Current Status of the Package",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "email_tracking",
        "description": "A tool for tracking the read status of emails",
        "arguments": {
            "type": "object",
            "properties": {
                "recipient_list": {
                    "type": "array",
                    "description": "List of recipient email addresses"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "tracking_status": {
                    "description": "Email tracking status",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "travel_backpack_catalog",
        "description": "Travel Backpack Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "brand": {
                    "description": "Backpack Brand",
                    "type": "string"
                },
                "capacity": {
                    "description": "Backpack Capacity, in liters",
                    "type": "integer"
                },
                "color": {
                    "description": "Backpack Color",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "backpack_details": {
                    "description": "Detailed Information of Travel Backpacks that Meet the Criteria",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "model": {
                                "description": "Backpack Model",
                                "type": "string"
                            },
                            "price": {
                                "description": "Backpack Price",
                                "type": "number"
                            },
                            "stock": {
                                "description": "Stock Quantity",
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "parcel_location_tracking",
        "description": "Query the location of the parcel at a specific time point",
        "arguments": {
            "type": "object",
            "properties": {
                "parcelNumber": {
                    "type": "string",
                    "description": "Tracking number"
                },
                "dateTime": {
                    "type": "string",
                    "description": "The time point for the query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "Current location of the parcel",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "repair_checklist_request",
        "description": "Pre-repair checklist request",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceType": {
                    "type": "string",
                    "description": "Type of appliance to be inspected"
                },
                "applianceBrand": {
                    "type": "string",
                    "description": "Appliance brand"
                },
                "applianceModel": {
                    "type": "string",
                    "description": "Appliance model"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "checklist": {
                    "type": "string",
                    "description": "Checklist before repair"
                }
            }
        }
    },
    {
        "name": "highspeed_train_search",
        "description": "Search for high-speed train information",
        "arguments": {
            "type": "object",
            "properties": {
                "departure": {
                    "type": "string",
                    "description": "Departure location"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "return_date": {
                    "type": "string",
                    "description": "Return date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "trains": {
                    "type": "array",
                    "description": "High-speed train information"
                }
            }
        }
    },
    {
        "name": "geo_location_tracker",
        "description": "Geographical Location Tracking Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "deviceID": {
                    "description": "ID of the tracking device",
                    "type": "string"
                },
                "startTime": {
                    "description": "Start time of tracking",
                    "type": "string"
                },
                "endTime": {
                    "description": "End time of tracking",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "locations": {
                    "description": "Geographical locations of the device within the specified time frame",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "longitude": {
                                "type": "number",
                                "description": "Longitude"
                            },
                            "latitude": {
                                "type": "number",
                                "description": "Latitude"
                            },
                            "recordTime": {
                                "type": "string",
                                "description": "Record time"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "vehicle_tracker",
        "description": "Vehicle Tracking Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "vehicleId": {
                    "description": "Vehicle ID",
                    "type": "string"
                },
                "startTime": {
                    "description": "Start Tracking Time",
                    "type": "string"
                },
                "stopTime": {
                    "description": "Stop Tracking Time",
                    "type": "string"
                },
                "vehicleNumber": {
                    "description": "Vehicle License Plate Number",
                    "type": "string"
                },
                "duration": {
                    "description": "Tracking Duration (hours)",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "location_history": {
                    "description": "Vehicle Location Tracking History",
                    "type": "array"
                },
                "location": {
                    "description": "Real-time Location of the Vehicle",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "filter_rental_service_with_car_plate",
        "description": "Filter the list of rental services to find companies that offer cars with a specific license plate number",
        "arguments": {
            "type": "object",
            "properties": {
                "car_plate": {
                    "type": "string",
                    "description": "Car license plate number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_service_list": {
                    "type": "string",
                    "description": "Filtered list of rental companies"
                }
            }
        }
    },
    {
        "name": "special_vehicle_rental_service",
        "description": "Provides rental services for various types of vehicles including cars, SUVs, business vehicles, and sports cars. Users need to provide information such as rental period, type of driver's license, and whether to purchase vehicle insurance",
        "arguments": {
            "type": "object",
            "properties": {
                "vehicle_type": {
                    "description": "Vehicle type",
                    "type": "string",
                    "enum": [
                        "Car",
                        "SUV",
                        "Business vehicle",
                        "Sports car"
                    ]
                },
                "rental_period": {
                    "description": "Rental period",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-17"
                },
                "license_type": {
                    "description": "Driver's license type",
                    "type": "string",
                    "enum": [
                        "C1",
                        "C2",
                        "B1",
                        "B2",
                        "A1",
                        "A2"
                    ]
                },
                "insurance_purchased": {
                    "description": "Whether to purchase rental car insurance",
                    "type": "boolean"
                },
                "pickup_location": {
                    "description": "Pickup location",
                    "type": "string",
                    "example": "Shanghai Hongqiao Airport"
                },
                "return_location": {
                    "description": "Return location",
                    "type": "string",
                    "example": "Pudong International Airport"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Booking status of the rental car",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "order_tracking",
        "description": "Order Tracking Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "orderNumber": {
                    "description": "Order Number",
                    "type": "string"
                },
                "customerID": {
                    "description": "Customer ID",
                    "type": "string"
                },
                "orderDate": {
                    "description": "Order Date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "orderStatus": {
                    "description": "Order Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "continuous_vehicle_tracking",
        "description": "Continuously track the real-time location of a vehicle and periodically save the data",
        "arguments": {
            "type": "object",
            "properties": {
                "vehicle_id": {
                    "type": "string",
                    "description": "Unique vehicle identifier"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "tracking_status": {
                    "type": "string",
                    "description": "Vehicle tracking status"
                },
                "location_updates": {
                    "type": "array",
                    "description": "Vehicle location update data",
                    "items": {
                        "type": "object",
                        "properties": {
                            "location": {
                                "type": "string"
                            },
                            "time": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "vehicle_fault_check",
        "description": "Check the fault records of a specified vehicle",
        "arguments": {
            "type": "object",
            "properties": {
                "VIN": {
                    "type": "string",
                    "description": "Vehicle Identification Number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "fault_status": {
                    "type": "string",
                    "description": "Vehicle fault record status"
                },
                "fault_report": {
                    "type": "string",
                    "description": "Vehicle fault record report"
                }
            }
        }
    },
    {
        "name": "mobile_number_info",
        "description": "Query the location and service provider information of a mobile number",
        "arguments": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "type": "string",
                    "description": "The mobile number to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location of the mobile number"
                },
                "serviceProvider": {
                    "type": "string",
                    "description": "The service provider of the mobile number"
                }
            }
        }
    },
    {
        "name": "locate_contact_information_section",
        "description": "Locate the contact information section",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "location_status": {
                    "description": "Whether the contact information section was successfully located",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "mobile_phone_locator",
        "description": "Mobile Phone Number Locator Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "description": "The phone number to be located",
                    "type": "string"
                },
                "country": {
                    "description": "The country to which the phone number belongs",
                    "type": "string"
                },
                "serviceProvider": {
                    "description": "The service provider of the phone number",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "The location information of the phone number",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "receive_mobile_verification",
        "description": "Receive mobile two-factor authentication message",
        "arguments": {
            "type": "object",
            "properties": {
                "mobile_number": {
                    "type": "string",
                    "description": "User's mobile number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_code": {
                    "description": "Received two-factor verification code",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "update_phone_number",
        "description": "Update the phone number bound to the user account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "old_phone_number": {
                    "type": "string",
                    "description": "Currently bound phone number"
                },
                "new_phone_number": {
                    "type": "string",
                    "description": "New phone number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the update operation"
                }
            }
        }
    },
    {
        "name": "activate_sms_reminder",
        "description": "Activate SMS reminder service, send text messages to the specified mobile number",
        "arguments": {
            "type": "object",
            "properties": {
                "phone_number": {
                    "type": "string",
                    "description": "The mobile number to receive SMS reminders"
                },
                "message_content": {
                    "type": "string",
                    "description": "The content of the message"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "The time for the reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "SMS reminder activation status"
                }
            }
        }
    },
    {
        "name": "mobile_number_location",
        "description": "Mobile Number Location Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "mobileNumber": {
                    "description": "Mobile Number",
                    "type": "string"
                },
                "serviceProvider": {
                    "description": "Service Provider",
                    "type": "string"
                },
                "time": {
                    "description": "Query Time",
                    "type": "string"
                },
                "countryCode": {
                    "description": "Country Code",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "Number Location Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_parcel_tracking",
        "description": "Set parcel status change notification tool",
        "arguments": {
            "type": "object",
            "properties": {
                "parcel_id": {
                    "type": "string",
                    "description": "Parcel tracking number"
                },
                "courier": {
                    "type": "string",
                    "description": "Courier company"
                },
                "notification_method": {
                    "type": "string",
                    "description": "Notification method, such as SMS, app push, etc."
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "tracking_status": {
                    "type": "string",
                    "description": "Parcel tracking setup result"
                }
            }
        }
    },
    {
        "name": "flight_status_tracking",
        "description": "Flight Status Tracking Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "airline": {
                    "description": "Airline",
                    "type": "string"
                },
                "flightNumber": {
                    "description": "Flight Number",
                    "type": "string"
                },
                "departureDate": {
                    "description": "Departure Date",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flight_status": {
                    "description": "Flight Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_cancellation_policy",
        "description": "Inquire about cancellation policy",
        "arguments": {
            "type": "object",
            "properties": {
                "service_type": {
                    "type": "string",
                    "description": "Service type"
                },
                "date": {
                    "type": "string",
                    "description": "Service date"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "policy_status": {
                    "type": "string",
                    "description": "Cancellation policy status"
                }
            }
        }
    },
    {
        "name": "order_dishes",
        "description": "Ordering dishes",
        "arguments": {
            "type": "object",
            "properties": {
                "dish1": {
                    "type": "string",
                    "description": "Name of the first dish"
                },
                "quantity1": {
                    "type": "integer",
                    "description": "Quantity of the first dish"
                },
                "dish2": {
                    "type": "string",
                    "description": "Name of the second dish"
                },
                "quantity2": {
                    "type": "integer",
                    "description": "Quantity of the second dish"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "order_status": {
                    "type": "string",
                    "description": "Order status"
                }
            }
        }
    },
    {
        "name": "calculate_checkout_date",
        "description": "Calculate the checkout date based on the check-in date and the number of days booked",
        "arguments": {
            "type": "object",
            "properties": {
                "check_in": {
                    "type": "string",
                    "description": "Check-in date",
                    "format": "date"
                },
                "duration": {
                    "type": "integer",
                    "description": "Number of days booked"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "check_out": {
                    "type": "string",
                    "description": "Calculated checkout date",
                    "format": "date"
                }
            }
        }
    },
    {
        "name": "schedule_repair_service",
        "description": "Confirm repair appointment time",
        "arguments": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string",
                    "description": "User contact number"
                },
                "brand": {
                    "type": "string",
                    "description": "Washing machine brand"
                },
                "model": {
                    "type": "string",
                    "description": "Washing machine model"
                },
                "issue": {
                    "type": "string",
                    "description": "Type of fault to be addressed"
                },
                "within_days": {
                    "type": "integer",
                    "description": "Maximum number of days for the service provider to visit"
                },
                "service_id": {
                    "type": "string",
                    "description": "Repair service point ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_status": {
                    "type": "string",
                    "description": "Repair appointment status"
                },
                "scheduled_time": {
                    "type": "string",
                    "description": "Confirmed repair time"
                }
            }
        }
    },
    {
        "name": "predict_delivery_time",
        "description": "Predict Delivery Time",
        "arguments": {
            "type": "object",
            "properties": {
                "tracking_number": {
                    "type": "string",
                    "description": "Tracking Number"
                },
                "courier_name": {
                    "type": "string",
                    "description": "Courier Company Name"
                },
                "current_date": {
                    "type": "string",
                    "description": "Current Query Date and Time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "predicted_delivery_time": {
                    "type": "string",
                    "description": "Estimated Delivery Time"
                }
            }
        }
    },
    {
        "name": "visa_approval_estimation",
        "description": "Visa Approval Time Estimation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "application_status": {
                    "description": "Current visa application status",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "estimated_approval_date": {
                    "description": "Estimated visa approval date",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "visa_status_check",
        "description": "Visa Status Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "applicationId": {
                    "description": "Application ID",
                    "type": "integer"
                },
                "passportNo": {
                    "description": "Passport Number",
                    "type": "string"
                },
                "nationality": {
                    "description": "Nationality",
                    "type": "string"
                },
                "birthDate": {
                    "description": "Date of Birth",
                    "type": "string"
                },
                "visaType": {
                    "description": "Visa Type",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "application_status": {
                    "description": "Visa Application Status",
                    "type": "string"
                },
                "visa_status": {
                    "description": "Visa Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "transit_card_info",
        "description": "Transit Card Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "cardNumber": {
                    "description": "Transit Card Number",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Card Balance",
                    "type": "number"
                },
                "expirationDate": {
                    "description": "Card Expiration Date",
                    "type": "string"
                },
                "isActive": {
                    "description": "Card Activation Status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "travel_info_search",
        "description": "Independent Travel Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "startDate": {
                    "description": "Departure Date",
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "description": "Return Date",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_info": {
                    "description": "Hotel Information",
                    "type": "string"
                },
                "scenic_spot_info": {
                    "description": "Scenic Spot Information",
                    "type": "string"
                },
                "food_info": {
                    "description": "Gourmet Information",
                    "type": "string"
                },
                "local_customs_info": {
                    "description": "Local Customs Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_meal_service",
        "description": "Confirm whether the specified flight provides meal service",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "The flight number for which to query the meal service"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "meal_service_status": {
                    "type": "string",
                    "description": "Status of meal service provision"
                }
            }
        }
    },
    {
        "name": "insert_table",
        "description": "Insert a table into the document",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path of the document"
                },
                "columns": {
                    "type": "string",
                    "description": "The number of columns in the table"
                },
                "rows": {
                    "type": "integer",
                    "description": "The number of rows in the table"
                },
                "column_titles": {
                    "type": "array",
                    "description": "The column titles of the table",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the table insertion was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "create_event",
        "description": "Create a new event and set reminders in the schedule management tool",
        "arguments": {
            "type": "object",
            "properties": {
                "event_name": {
                    "type": "string",
                    "description": "Event name"
                },
                "event_date": {
                    "type": "string",
                    "description": "Event date"
                },
                "event_id": {
                    "type": "string",
                    "description": "Event ID"
                },
                "title": {
                    "type": "string",
                    "description": "Event title"
                },
                "description": {
                    "type": "string",
                    "description": "Event description"
                },
                "start_time": {
                    "type": "string",
                    "description": "Event start time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Event creation status",
                    "type": "string"
                },
                "event_id": {
                    "type": "string",
                    "description": "Created event ID"
                }
            }
        }
    },
    {
        "name": "export_to_pdf",
        "description": "Export document content to PDF format",
        "arguments": {
            "type": "object",
            "properties": {
                "documentName": {
                    "type": "string",
                    "description": "The name of the document to be exported to PDF"
                },
                "document_content": {
                    "type": "string",
                    "description": "The content of the document to be exported"
                },
                "pdf_path": {
                    "type": "string",
                    "description": "The file path for the exported PDF"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "pdf_status": {
                    "type": "string",
                    "description": "The status of the PDF export operation"
                }
            }
        }
    },
    {
        "name": "add_text_to_photo",
        "description": "Add custom text and styles to a photo",
        "arguments": {
            "type": "object",
            "properties": {
                "photo_path": {
                    "type": "string",
                    "description": "The path of the photo to which text will be added"
                },
                "text_content": {
                    "type": "string",
                    "description": "The content of the text to add"
                },
                "text_style": {
                    "type": "string",
                    "description": "The style information of the text"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the text was added successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "product_catalog_create",
        "description": "Product Catalog Creation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "productName": {
                    "description": "Product Name",
                    "type": "string"
                },
                "productPrice": {
                    "description": "Product Price",
                    "type": "integer"
                },
                "launchDate": {
                    "description": "Product Launch Date",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                },
                "category": {
                    "description": "Product Category",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "catalogId": {
                    "description": "Product Catalog ID",
                    "type": "integer"
                },
                "catalog": {
                    "description": "Generated Product Catalog",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_login_attempts",
        "description": "Check the abnormal login attempt records of the account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "attempts_info": {
                    "description": "Login attempt record information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "flight_status_tracker",
        "description": "Flight Status Tracking Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "description": "Flight Number",
                    "type": "string"
                },
                "departureDate": {
                    "description": "Expected Departure Date and Time of the Flight",
                    "type": "string"
                },
                "airline": {
                    "description": "Airline corresponding to the Flight",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flight_status": {
                    "description": "Current Status of the Flight",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "company_vehicle_service",
        "description": "Company Vehicle Service Reservation Lookup Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "queryTime": {
                    "description": "Reservation Time",
                    "type": "string",
                    "format": "date-time"
                },
                "departure": {
                    "description": "Departure Location",
                    "type": "string"
                },
                "destination": {
                    "description": "Destination",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "vehicle_details": {
                    "description": "Vehicle Details",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "reserve_vehicle",
        "description": "Reserve a specified business vehicle",
        "arguments": {
            "type": "object",
            "properties": {
                "vehicle_id": {
                    "type": "string",
                    "description": "Vehicle ID"
                },
                "departure_time": {
                    "type": "string",
                    "description": "Departure time",
                    "format": "date-time"
                },
                "departure_location": {
                    "type": "string",
                    "description": "Departure location"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "passenger_name": {
                    "type": "string",
                    "description": "Passenger name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_status": {
                    "type": "string",
                    "description": "Reservation status"
                }
            }
        }
    },
    {
        "name": "notify_user_of_repair_status",
        "description": "Notify user of the repair request status",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "User's contact information"
                },
                "requestID": {
                    "type": "string",
                    "description": "Repair request ID"
                },
                "repair_status": {
                    "type": "string",
                    "description": "Current repair status"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "postal_code_lookup",
        "description": "Postal Code Lookup Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "country": {
                    "description": "Country Name",
                    "type": "string"
                },
                "city": {
                    "description": "City Name",
                    "type": "string"
                },
                "district": {
                    "description": "District or County Name",
                    "type": "string"
                },
                "street": {
                    "description": "Street Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "postal_code": {
                    "description": "Postal Code",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "repair_cost_time_notification_request",
        "description": "Request the repair technician to notify in advance the estimated repair duration and potential costs",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Repair request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Status of whether the notification request was successfully sent"
                }
            }
        }
    },
    {
        "name": "login_to_car_rental_platform",
        "description": "Login to car rental reservation platform tool",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "User's login username"
                },
                "password": {
                    "type": "string",
                    "description": "User's login password"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "description": "Login status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "instant_messaging",
        "description": "Instant messaging tool, supports text, voice, and video modes, with options to set push notifications",
        "arguments": {
            "type": "object",
            "properties": {
                "communication_mode": {
                    "description": "Communication mode",
                    "type": "string",
                    "enum": [
                        "Text",
                        "Voice",
                        "Video"
                    ]
                },
                "target_user": {
                    "description": "Target user",
                    "type": "string"
                },
                "message_content": {
                    "description": "Message content",
                    "type": "string"
                },
                "send_time": {
                    "description": "Send time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-12-31T23:59:59Z"
                },
                "need_notification": {
                    "description": "Whether push notification is needed",
                    "type": "boolean"
                },
                "notification_type": {
                    "description": "Type of push notification",
                    "type": "string",
                    "enum": [
                        "Email",
                        "SMS",
                        "In-app"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Send status information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "activate_meeting_time_change_listener",
        "description": "Activate the listener to monitor changes in meeting time and trigger file updates when changes occur",
        "arguments": {
            "type": "object",
            "properties": {
                "current_date": {
                    "type": "string",
                    "description": "Current date"
                },
                "meeting_time": {
                    "type": "string",
                    "description": "The meeting time to be monitored"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_detected": {
                    "type": "boolean",
                    "description": "Whether a change in meeting time was detected"
                },
                "new_meeting_time": {
                    "type": "string",
                    "description": "The new meeting time after the change"
                }
            }
        }
    },
    {
        "name": "special_weather_forecast_tool",
        "description": "Forecasts future weather conditions based on city, date, and type of forecast, capable of forecasting within the next 7 days, and limited to major cities within China",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "description": "City name, limited to major cities within China",
                    "type": "string",
                    "example": "Shanghai"
                },
                "date": {
                    "description": "Forecast date, must be within the next 7 days",
                    "type": "string",
                    "format": "date",
                    "example": "2022-12-30"
                },
                "forecast_type": {
                    "description": "Type of forecast, options include temperature, humidity, wind direction and speed",
                    "type": "string",
                    "enum": [
                        "temperature",
                        "humidity",
                        "wind direction and speed"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "forecast_status": {
                    "description": "Forecast information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "gourmet_tour_guide",
        "description": "A tool that provides recommendations for local delicacies and dining discounts, supporting only major cities in Europe, Asia, North America, and Australia",
        "arguments": {
            "type": "object",
            "properties": {
                "continent": {
                    "description": "Continent",
                    "type": "string",
                    "enum": [
                        "Europe",
                        "Asia",
                        "North America",
                        "Australia"
                    ]
                },
                "city": {
                    "description": "City",
                    "type": "string"
                },
                "cuisine_type": {
                    "description": "Restaurant Type",
                    "type": "string",
                    "enum": [
                        "Chinese Cuisine",
                        "Western Cuisine",
                        "Japanese Cuisine",
                        "Korean Barbecue",
                        "Seafood",
                        "Vegetarian"
                    ]
                },
                "budget": {
                    "description": "Budget",
                    "type": "number",
                    "minimum": 0
                },
                "special_dietary_requirement": {
                    "description": "Special Dietary Requirement",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recommended_restaurants": {
                    "description": "Recommended Restaurant Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "find_restaurant_api",
        "description": "Query nearby restaurants based on user location information",
        "arguments": {
            "type": "object",
            "properties": {
                "user_location": {
                    "description": "User's location information",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "restaurant_list": {
                    "description": "List of nearby restaurants",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "tourist_discount_coupon",
        "description": "Tourist Discount Coupon Acquisition Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Tourist Destination",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "coupon_code": {
                    "description": "Coupon Code",
                    "type": "string"
                },
                "discount_value": {
                    "description": "Coupon Value",
                    "type": "integer"
                },
                "expiry_date": {
                    "description": "Coupon Expiry Date",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "workday_date_range",
        "description": "Get the date range of a specified number of future workdays",
        "arguments": {
            "type": "object",
            "properties": {
                "daysCount": {
                    "type": "number",
                    "description": "The number of future workdays to obtain"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the user is located"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "dateRange": {
                    "type": "string",
                    "description": "The date range of the future workdays"
                }
            }
        }
    },
    {
        "name": "prioritize_g_trains",
        "description": "Further filter out high-speed trains with the 'G' prefix from the filtered train list",
        "arguments": {
            "type": "object",
            "properties": {
                "trains_info": {
                    "type": "string",
                    "description": "Filtered train information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "prioritized_trains": {
                    "type": "string",
                    "description": "Information of the prioritized high-speed trains with the 'G' prefix"
                }
            }
        }
    },
    {
        "name": "test_db_connection",
        "description": "Run the database connection test command.",
        "arguments": {
            "type": "object",
            "properties": {
                "db_address": {
                    "type": "string",
                    "description": "The new address of the database"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the database connection test is successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "order_lunch",
        "description": "Reserve lunch and arrange delivery service",
        "arguments": {
            "type": "object",
            "properties": {
                "quantity": {
                    "type": "string",
                    "description": "The quantity of lunches to reserve"
                },
                "delivery_time": {
                    "type": "string",
                    "description": "Delivery time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "order_status": {
                    "type": "string",
                    "description": "Lunch reservation status"
                }
            }
        }
    },
    {
        "name": "checkout_api",
        "description": "Checkout API, dependent on the result of the previous Place Order API 'Order ID'",
        "arguments": {
            "type": "object",
            "properties": {
                "order_id": {
                    "description": "Order ID",
                    "type": "integer"
                },
                "amount": {
                    "description": "Payment Amount",
                    "type": "integer"
                },
                "payment_method": {
                    "description": "Payment Method",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "total_bill": {
                    "description": "Total Bill Amount",
                    "type": "integer"
                },
                "payment_status": {
                    "description": "Payment Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "merge_orders",
        "description": "Merge multiple orders into one order",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_name": {
                    "type": "string",
                    "description": "Restaurant name"
                },
                "order_ids": {
                    "type": "array",
                    "description": "List of order IDs to be merged",
                    "items": {
                        "type": "integer"
                    }
                },
                "table_id": {
                    "type": "integer",
                    "description": "Table number to merge into"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "merge_status": {
                    "type": "string",
                    "description": "Order merge status"
                },
                "merged_order_id": {
                    "description": "Merged order ID",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "assign_random_table",
        "description": "Randomly assign a dining table based on the number of diners",
        "arguments": {
            "type": "object",
            "properties": {
                "number_of_guests": {
                    "description": "Number of diners",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "table_id": {
                    "description": "Assigned table ID",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "menu_select_api",
        "description": "Ordering API for selecting dishes",
        "arguments": {
            "type": "object",
            "properties": {
                "dish_id": {
                    "description": "Dish ID",
                    "type": "integer"
                },
                "quantity": {
                    "description": "Quantity of dishes",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "order_id": {
                    "description": "Generated order ID for subsequent ordering and checkout operations",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "create_scheduled_import_task",
        "description": "Create a scheduled import task to import the product catalog from the internal system into the online store database",
        "arguments": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "description": "Product category"
                },
                "importTime": {
                    "type": "string",
                    "description": "Import time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "taskId": {
                    "type": "string",
                    "description": "ID of the created automation task"
                },
                "task_status": {
                    "type": "string",
                    "description": "Task creation status"
                }
            }
        }
    },
    {
        "name": "menu_recommendation_tool",
        "description": "Recommend dishes based on user's budget and restaurant features",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_name": {
                    "type": "string",
                    "description": "Restaurant Name"
                },
                "budget": {
                    "type": "number",
                    "description": "Average Budget per Person"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recommendations": {
                    "type": "array",
                    "description": "List of Recommended Dishes",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "search_restaurant",
        "description": "Search for restaurants with specific conditions",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "User's location information"
                },
                "cuisine": {
                    "type": "string",
                    "description": "Cuisine of the restaurant"
                },
                "dish_name": {
                    "type": "string",
                    "description": "Name of the dish to search for"
                },
                "diet_preference": {
                    "type": "string",
                    "description": "User's dietary preferences"
                },
                "criteria": {
                    "type": "string",
                    "description": "Criteria for searching restaurants"
                },
                "route_info": {
                    "type": "string",
                    "description": "Planned route information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "restaurants": {
                    "type": "array",
                    "description": "List of restaurants found"
                },
                "restaurant_id": {
                    "type": "integer",
                    "description": "Selected restaurant ID"
                },
                "outcome": {
                    "type": "string",
                    "description": "Whether the search was successful"
                }
            }
        }
    },
    {
        "name": "restaurant_search",
        "description": "Search for highly-rated restaurants nearby",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "User's location area"
                },
                "dishes": {
                    "type": "array",
                    "description": "List of desired dishes",
                    "items": {
                        "type": "string"
                    }
                },
                "cuisine": {
                    "type": "string",
                    "description": "Specified cuisine type"
                },
                "customer_satisfaction": {
                    "type": "integer",
                    "description": "Minimum customer satisfaction rating"
                },
                "people_count": {
                    "type": "integer",
                    "description": "Number of diners"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "restaurants": {
                    "type": "array",
                    "description": "List of recommended restaurants",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Restaurant name"
                            },
                            "contact": {
                                "type": "string",
                                "description": "Restaurant contact information"
                            },
                            "address": {
                                "type": "string",
                                "description": "Restaurant address"
                            },
                            "rating": {
                                "type": "number",
                                "description": "Restaurant rating"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "select_restaurants",
        "description": "Select recommended restaurants based on user's taste and location",
        "arguments": {
            "type": "object",
            "properties": {
                "dishes": {
                    "type": "string",
                    "description": "List of required dishes, separated by commas"
                },
                "location": {
                    "type": "string",
                    "description": "User's location area"
                },
                "rating": {
                    "type": "string",
                    "description": "Restaurant rating"
                },
                "destination": {
                    "type": "string",
                    "description": "Travel destination"
                },
                "tastes": {
                    "type": "string",
                    "description": "User's taste preferences"
                },
                "weather": {
                    "type": "array",
                    "description": "Weather forecast information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "restaurant_id": {
                    "description": "Selected restaurant ID",
                    "type": "integer"
                },
                "restaurant": {
                    "type": "string",
                    "description": "Selected restaurant"
                },
                "status": {
                    "description": "Whether the restaurant was successfully selected",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "restaurant_review_analyzer",
        "description": "Restaurant Review Analysis Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "reviewText": {
                    "description": "Content of the user's review",
                    "type": "string"
                },
                "visitDate": {
                    "description": "Date of the user's visit",
                    "type": "string"
                },
                "restaurantName": {
                    "description": "Name of the restaurant",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sentiment": {
                    "description": "Sentiment analysis result of the review",
                    "type": "string"
                },
                "starRating": {
                    "description": "Predicted star rating",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "search_good_reputation_restaurants",
        "description": "Search for restaurants with good reputation in a specific area and of a specific type",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location of the restaurant"
                },
                "dish_type": {
                    "type": "string",
                    "description": "The restaurant's specialty dish"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "restaurant_list": {
                    "type": "array",
                    "description": "List of restaurants that meet the criteria"
                }
            }
        }
    },
    {
        "name": "check_restaurant_availability",
        "description": "Check the reservation availability of restaurants for a specific date and time",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_list": {
                    "type": "string",
                    "description": "Filtered list of restaurants"
                },
                "date": {
                    "type": "string",
                    "description": "Reservation date"
                },
                "time": {
                    "type": "string",
                    "description": "Reservation time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "available_restaurants": {
                    "type": "string",
                    "description": "Confirmed list of available restaurants"
                }
            }
        }
    },
    {
        "name": "restaurant_review",
        "description": "Restaurant Review Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "Restaurant location",
                    "type": "string"
                },
                "cuisine": {
                    "description": "Type of cuisine offered by the restaurant",
                    "type": "string"
                },
                "visitDate": {
                    "description": "Visit date",
                    "format": "date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "avg_rating": {
                    "description": "Average restaurant rating",
                    "type": "number"
                },
                "total_reviews": {
                    "description": "Total number of reviews",
                    "type": "integer"
                },
                "top_review": {
                    "description": "Details of the highest-rated review",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "website_design_tool",
        "description": "Help users create and design web pages",
        "arguments": {
            "type": "object",
            "properties": {
                "template_type": {
                    "description": "Template type",
                    "type": "string",
                    "enum": [
                        "Business",
                        "Running Blog",
                        "Personal Blog",
                        "Photography",
                        "E-commerce"
                    ]
                },
                "color_theme": {
                    "description": "Color theme",
                    "type": "string",
                    "enum": [
                        "Light",
                        "Dark"
                    ]
                },
                "features_required": {
                    "description": "Required features",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "Responsive design",
                            "SEO optimization",
                            "Embedded video",
                            "Online store",
                            "Interactive features"
                        ]
                    }
                },
                "page_layout": {
                    "description": "Page layout",
                    "type": "string",
                    "enum": [
                        "Single column",
                        "Double column",
                        "Triple column"
                    ]
                },
                "navigation_menu": {
                    "description": "Navigation menu position",
                    "type": "string",
                    "enum": [
                        "Header",
                        "Footer",
                        "Sidebar",
                        "Floating"
                    ]
                },
                "website_title": {
                    "description": "Website title",
                    "type": "string"
                },
                "website_description": {
                    "description": "Website description",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "design_status": {
                    "description": "Design status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "filter_on_site_technicians",
        "description": "Filter out technicians who provide on-site services from the list of service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "providers_list": {
                    "type": "array",
                    "description": "List of maintenance service providers"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_technicians": {
                    "type": "array",
                    "description": "List of filtered maintenance technicians"
                }
            }
        }
    },
    {
        "name": "event_discovery",
        "description": "Used to discover event information at specific locations and times",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location of the event"
                },
                "time_frame": {
                    "type": "string",
                    "description": "The time range of the event"
                },
                "event_type": {
                    "type": "string",
                    "description": "The type of the event"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "description": "The list of discovered events",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the event"
                            },
                            "details": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "description": "The date of the event"
                                    },
                                    "location": {
                                        "type": "string",
                                        "description": "The location of the event"
                                    },
                                    "price": {
                                        "type": "string",
                                        "description": "The ticket price"
                                    },
                                    "performers": {
                                        "type": "array",
                                        "description": "The list of performers",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "date",
                                    "location",
                                    "price",
                                    "performers"
                                ]
                            }
                        },
                        "required": [
                            "name",
                            "details"
                        ]
                    }
                }
            }
        }
    },
    {
        "name": "current_traffic_condition_tool",
        "description": "Get current traffic condition information",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "traffic_condition": {
                    "description": "Current traffic condition information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "event_planning_tool",
        "description": "Event planning tool, used for planning and managing various types of events",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Event date"
                },
                "scale": {
                    "type": "string",
                    "description": "Event scale"
                },
                "donation_type": {
                    "type": "string",
                    "description": "Type of donation items"
                },
                "eventType": {
                    "type": "string",
                    "description": "Event type",
                    "enum": [
                        "Exhibition",
                        "Lecture",
                        "Concert",
                        "Singing Performance",
                        "Conference",
                        "Seminar"
                    ]
                },
                "location": {
                    "type": "string",
                    "description": "Event location",
                    "example": "Bird's Nest Stadium, Chaoyang District, Beijing"
                },
                "budget": {
                    "type": "number",
                    "description": "Event budget",
                    "example": 12000.0
                },
                "guestNumber": {
                    "type": "integer",
                    "description": "Estimated number of attendees"
                },
                "theme": {
                    "type": "string",
                    "description": "Event theme"
                },
                "responsiblePerson": {
                    "type": "string",
                    "description": "Name of the responsible person"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "event_plan": {
                    "description": "Event planning scheme",
                    "type": "string"
                },
                "planId": {
                    "type": "string",
                    "description": "Unique identifier for the event planning"
                },
                "status": {
                    "type": "string",
                    "description": "Event planning status",
                    "enum": [
                        "Not started",
                        "In progress",
                        "Completed",
                        "Cancelled"
                    ]
                },
                "resourceAllocation": {
                    "type": "object",
                    "description": "Resource allocation details",
                    "properties": {
                        "venue": {
                            "type": "string",
                            "description": "Venue booking status"
                        },
                        "equipment": {
                            "type": "string",
                            "description": "Equipment rental status"
                        },
                        "catering": {
                            "type": "string",
                            "description": "Catering arrangements"
                        },
                        "staff": {
                            "type": "array",
                            "description": "List of staff members",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "schedule": {
                    "type": "array",
                    "description": "Event schedule",
                    "items": {
                        "type": "object",
                        "properties": {
                            "time": {
                                "type": "string",
                                "description": "Specific time",
                                "format": "time"
                            },
                            "activity": {
                                "type": "string",
                                "description": "Details of the scheduled activity"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "select_book",
        "description": "Select a book",
        "arguments": {
            "type": "object",
            "properties": {
                "book_id": {
                    "type": "string",
                    "description": "The ID of the selected book"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selection_status": {
                    "description": "Whether the book was successfully selected",
                    "type": "string"
                },
                "selected_book": {
                    "description": "The selected book",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "navigate_to_orders_page",
        "description": "Navigate to the user's order information page",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "navigation_status": {
                    "description": "Page navigation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "order_details_api",
        "description": "API to get order details, used to confirm the names, quantities, and prices of dishes in the order",
        "arguments": {
            "type": "object",
            "properties": {
                "order_id": {
                    "description": "Order ID",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "dishes": {
                    "description": "Details of the dishes in the order",
                    "type": "array"
                },
                "total_price": {
                    "description": "Total price of the order",
                    "type": "integer"
                },
                "address": {
                    "description": "Delivery address",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "add_calendar_note",
        "description": "Add a note to the calendar",
        "arguments": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "string",
                    "description": "The ID of the note"
                },
                "calendar_date": {
                    "type": "string",
                    "description": "The date of the calendar"
                },
                "note_content": {
                    "type": "string",
                    "description": "The content of the note"
                },
                "note_priority": {
                    "type": "string",
                    "description": "The priority of the note"
                },
                "note_category": {
                    "type": "string",
                    "description": "The category of the note"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the note was successfully added",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "find_original_booking",
        "description": "Find the booking order based on user information and original booking date, and obtain the booking confirmation number",
        "arguments": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string",
                    "description": "Customer name"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                },
                "check_in": {
                    "type": "string",
                    "description": "Original check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Original check-out date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                }
            }
        }
    },
    {
        "name": "restaurant_login",
        "description": "Used for logging into the restaurant ordering system",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Username for the ordering system"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the ordering system"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "type": "string",
                    "description": "Login status"
                },
                "session_token": {
                    "type": "string",
                    "description": "Session token, used for subsequent operations"
                }
            }
        }
    },
    {
        "name": "search_nearby_restaurants",
        "description": "Search for nearby restaurants",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Preferred restaurant location by the user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "restaurant_list": {
                    "description": "List of nearby restaurants",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "find_recommended_dishes",
        "description": "Find the recommended dishes based on the restaurant's review information",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurantName": {
                    "type": "string",
                    "description": "The name of the restaurant"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the restaurant"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recommended_dishes": {
                    "type": "array",
                    "description": "List of recommended dishes"
                }
            }
        }
    },
    {
        "name": "restaurant_search_and_select_api",
        "description": "Search for restaurants in the user's area and select one that offers online reservation services",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The user's location area"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "restaurant_id": {
                    "type": "integer",
                    "description": "The ID of the selected restaurant"
                }
            }
        }
    },
    {
        "name": "restaurant_review_tool",
        "description": "For submitting reviews of a specific restaurant",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurantName": {
                    "description": "Name of the restaurant",
                    "type": "string"
                },
                "visitDate": {
                    "description": "Visit date",
                    "type": "string",
                    "format": "date-time"
                },
                "stars": {
                    "description": "Star rating",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5
                },
                "reviewText": {
                    "description": "Content of the review",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "average_stars": {
                    "description": "Average star rating",
                    "type": "number"
                },
                "total_reviews": {
                    "description": "Total number of reviews",
                    "type": "integer"
                },
                "status": {
                    "description": "Status of the review submission",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "complete_purchase_process",
        "description": "Complete the purchase process of deposit products",
        "arguments": {
            "type": "object",
            "properties": {
                "product": {
                    "type": "string",
                    "description": "The deposit product to purchase"
                },
                "account_id": {
                    "type": "string",
                    "description": "Online banking account ID"
                },
                "account_password": {
                    "type": "string",
                    "description": "Online banking account password"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchase_status": {
                    "type": "string",
                    "description": "Purchase status"
                }
            }
        }
    },
    {
        "name": "confirm_payment_method",
        "description": "Confirm payment method",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_contact": {
                    "type": "string",
                    "description": "Restaurant contact information"
                },
                "restaurant_name": {
                    "type": "string",
                    "description": "Restaurant name"
                },
                "payment_method": {
                    "type": "string",
                    "description": "Payment method"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_method_confirmed": {
                    "type": "boolean",
                    "description": "Whether the payment method has been confirmed"
                }
            }
        }
    },
    {
        "name": "submit_preorder",
        "description": "Submit the pre-order menu to the restaurant",
        "arguments": {
            "type": "object",
            "properties": {
                "dish1": {
                    "type": "string",
                    "description": "Name of the first dish"
                },
                "dish2": {
                    "type": "string",
                    "description": "Name of the second dish"
                },
                "restaurant_name": {
                    "type": "string",
                    "description": "Restaurant name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "preorder_status": {
                    "type": "string",
                    "description": "Pre-order submission status"
                }
            }
        }
    },
    {
        "name": "confirm_repair_support",
        "description": "Confirm whether the service provider supports repairs for a specific model",
        "arguments": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "description": "Brand"
                },
                "model": {
                    "type": "string",
                    "description": "Model"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "supported": {
                    "type": "boolean",
                    "description": "Whether repair is supported"
                }
            }
        }
    },
    {
        "name": "table_booking_api",
        "description": "Restaurant table reservation",
        "arguments": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "User name"
                },
                "contact": {
                    "type": "string",
                    "description": "User contact information"
                },
                "table_id": {
                    "type": "integer",
                    "description": "Table number"
                },
                "time": {
                    "type": "string",
                    "description": "Reservation time"
                },
                "restaurant_name": {
                    "type": "string",
                    "description": "Restaurant name"
                },
                "date": {
                    "type": "string",
                    "description": "Reservation date"
                },
                "number_of_people": {
                    "type": "string",
                    "description": "Number of people for the reservation"
                },
                "special_requirements": {
                    "type": "string",
                    "description": "Special dietary requirements"
                },
                "restaurant_id": {
                    "type": "integer",
                    "description": "Restaurant ID"
                },
                "seats": {
                    "type": "integer",
                    "description": "Number of seats at the table"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_status": {
                    "type": "string",
                    "description": "Reservation status"
                },
                "reservation_id": {
                    "type": "integer",
                    "description": "Reservation ID"
                },
                "reservation_details": {
                    "type": "object",
                    "description": "Reservation details"
                }
            }
        }
    },
    {
        "name": "filter_hotels_by_date",
        "description": "Filter hotels by check-in and check-out dates",
        "arguments": {
            "type": "object",
            "properties": {
                "hotels": {
                    "type": "array",
                    "description": "List of hotels to be filtered"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotels": {
                    "type": "array",
                    "description": "Filtered list of hotels"
                }
            }
        }
    },
    {
        "name": "request_menu",
        "description": "Request the restaurant to provide an electronic menu",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_name": {
                    "type": "string",
                    "description": "Restaurant name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "menu": {
                    "type": "object",
                    "description": "Electronic menu"
                }
            }
        }
    },
    {
        "name": "update_account_balance",
        "description": "Update the account balance based on the correction of the transaction amount",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "amount_difference": {
                    "type": "integer",
                    "description": "The difference in transaction amount before and after correction"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "new_balance": {
                    "type": "integer",
                    "description": "Updated account balance"
                }
            }
        }
    },
    {
        "name": "get_dish_id",
        "description": "Get the dish ID based on the dish name",
        "arguments": {
            "type": "object",
            "properties": {
                "dish_name": {
                    "type": "string",
                    "description": "Dish name"
                },
                "menu": {
                    "type": "array",
                    "description": "Restaurant menu"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "dish_id": {
                    "type": "integer",
                    "description": "Queried dish ID"
                }
            }
        }
    },
    {
        "name": "place_order",
        "description": "Place an order based on dish information and table number",
        "arguments": {
            "type": "object",
            "properties": {
                "dishes": {
                    "type": "array",
                    "description": "List of dishes, each dish includes dish ID and quantity"
                },
                "table_id": {
                    "type": "integer",
                    "description": "Table number"
                },
                "order_id": {
                    "type": "integer",
                    "description": "Order number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "integer",
                    "description": "Generated order ID"
                },
                "confirmation": {
                    "description": "Order confirmation message",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "delete_listed_files",
        "description": "Delete all files in the provided file list",
        "arguments": {
            "type": "object",
            "properties": {
                "file_list": {
                    "type": "array",
                    "description": "List of files to be deleted",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether all files were successfully deleted"
                }
            }
        }
    },
    {
        "name": "send_transaction_id",
        "description": "Send transaction ID to the user",
        "arguments": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "type": "string",
                    "description": "User's contact information"
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "boolean",
                    "description": "Whether the transaction ID was successfully sent"
                }
            }
        }
    },
    {
        "name": "get_check_in_counter_info",
        "description": "Get the check-in counter location information for a specific flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "counter_location": {
                    "type": "string",
                    "description": "Check-in counter location"
                }
            }
        }
    },
    {
        "name": "book_meeting",
        "description": "Book a meeting venue",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Meeting date"
                },
                "city": {
                    "type": "string",
                    "description": "City"
                },
                "location": {
                    "type": "string",
                    "description": "Meeting location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                }
            }
        }
    },
    {
        "name": "book_table",
        "description": "Reserve a table",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_id": {
                    "type": "string",
                    "description": "Restaurant ID"
                },
                "number_of_people": {
                    "type": "integer",
                    "description": "Number of diners"
                },
                "reservation_time": {
                    "type": "string",
                    "description": "Reservation time"
                },
                "date": {
                    "type": "string",
                    "description": "Reservation date"
                },
                "table_number": {
                    "type": "string",
                    "description": "Table number"
                },
                "name": {
                    "type": "string",
                    "description": "Reservator's name"
                },
                "phone": {
                    "type": "string",
                    "description": "Reservator's contact phone"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "table_id": {
                    "description": "Reserved table ID",
                    "type": "integer"
                },
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "confirmation": {
                    "type": "string",
                    "description": "Booking confirmation information"
                }
            }
        }
    },
    {
        "name": "book_car",
        "description": "Make a car rental reservation after confirming car availability",
        "arguments": {
            "type": "object",
            "properties": {
                "carID": {
                    "type": "string",
                    "description": "Car ID"
                },
                "startDate": {
                    "type": "string",
                    "description": "Rental start date"
                },
                "endDate": {
                    "type": "string",
                    "description": "Rental end date"
                },
                "city": {
                    "type": "string",
                    "description": "City for car pickup"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Car rental reservation status"
                }
            }
        }
    },
    {
        "name": "check_room_booking_status",
        "description": "Check the booking status of a specified meeting room for a specific date and time range",
        "arguments": {
            "type": "object",
            "properties": {
                "room_number": {
                    "type": "string",
                    "description": "Meeting room number"
                },
                "date": {
                    "type": "string",
                    "description": "Date"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time"
                },
                "time_range": {
                    "type": "string",
                    "description": "Time range"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Meeting room booking status"
                },
                "is_for_specified_meeting": {
                    "type": "boolean",
                    "description": "Whether booked for a specified meeting"
                }
            }
        }
    },
    {
        "name": "select_meal_service",
        "description": "Select in-flight meal service",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight Number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure Date"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Passenger Name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "meal_service_selection_status": {
                    "type": "string",
                    "description": "Meal Service Selection Status"
                }
            }
        }
    },
    {
        "name": "confirm_and_book_catering",
        "description": "Confirm and book catering services",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Service date"
                },
                "start_time": {
                    "type": "string",
                    "description": "Service start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Service end time"
                },
                "location": {
                    "type": "string",
                    "description": "Service location"
                },
                "service_title": {
                    "type": "string",
                    "description": "Service title"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the service was successfully booked",
                    "type": "string"
                },
                "reservation_id": {
                    "description": "Service reservation ID",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "select_best_restaurant",
        "description": "Select the best restaurant from the list",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_list": {
                    "type": "string",
                    "description": "List of restaurants to be selected from"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_restaurant": {
                    "type": "string",
                    "description": "The selected best restaurant"
                }
            }
        }
    },
    {
        "name": "get_menu",
        "description": "Get restaurant menu information",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_name": {
                    "type": "string",
                    "description": "Restaurant name"
                },
                "date": {
                    "description": "Date",
                    "type": "string"
                },
                "restaurant_id": {
                    "description": "Restaurant ID",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "menu": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "dish_id": {
                                "type": "integer",
                                "description": "Dish ID"
                            },
                            "dish_name": {
                                "type": "string",
                                "description": "Dish name"
                            },
                            "price": {
                                "type": "integer",
                                "description": "Dish price"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "send_booking_details",
        "description": "Send booking details to the customer",
        "arguments": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string",
                    "description": "Customer name"
                },
                "booking_details": {
                    "type": "string",
                    "description": "Booking details"
                },
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                },
                "notification_method": {
                    "type": "string",
                    "description": "Notification method selection"
                },
                "contact": {
                    "type": "string",
                    "description": "Customer contact information"
                },
                "order_details": {
                    "type": "object",
                    "description": "Order details"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Status of whether the customer accepts the booking details"
                },
                "send_status": {
                    "type": "string",
                    "description": "Send status"
                }
            }
        }
    },
    {
        "name": "hotel_booking_modification",
        "description": "Hotel order modification interface, used to modify existing hotel reservation orders. Depends on the confirmation number provided by the hotel booking interface (hotel_booking).",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "description": "Reservation confirmation number",
                    "type": "string"
                },
                "check_in": {
                    "description": "New check-in date",
                    "type": "string",
                    "format": "date"
                },
                "check_out": {
                    "description": "New check-out date",
                    "type": "string",
                    "format": "date"
                },
                "room_type": {
                    "description": "New room type",
                    "type": "string"
                },
                "number_of_rooms": {
                    "description": "New number of rooms",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "modification_status": {
                    "description": "Order modification status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "query_dish_id",
        "description": "Query Dish ID",
        "arguments": {
            "type": "object",
            "properties": {
                "dish_name": {
                    "type": "string",
                    "description": "Dish Name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "dish_id": {
                    "type": "integer",
                    "description": "Dish ID"
                }
            }
        }
    },
    {
        "name": "compare_and_select_room",
        "description": "Compare facility information and select a meeting room similar to the reference meeting room facilities",
        "arguments": {
            "type": "object",
            "properties": {
                "reference_room_id": {
                    "type": "string",
                    "description": "The ID of the reference meeting room"
                },
                "available_rooms": {
                    "type": "array",
                    "description": "List of available meeting rooms"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_room_id": {
                    "type": "string",
                    "description": "The ID of the selected meeting room"
                }
            }
        }
    },
    {
        "name": "select_meal",
        "description": "Select a meal package and generate an order ID",
        "arguments": {
            "type": "object",
            "properties": {
                "fish_quantity": {
                    "type": "string",
                    "description": "Quantity of fish"
                },
                "chicken_quantity": {
                    "type": "string",
                    "description": "Quantity of chicken"
                },
                "vegetable_quantity": {
                    "type": "string",
                    "description": "Quantity of green vegetables"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "integer",
                    "description": "Generated order ID"
                }
            }
        }
    },
    {
        "name": "conference_room_cancelling",
        "description": "Conference Room Cancellation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "startTime": {
                    "description": "The start time of the meeting to be cancelled (date+time)",
                    "type": "string"
                },
                "endTime": {
                    "description": "The end time of the meeting to be cancelled (date+time)",
                    "type": "string"
                },
                "roomID": {
                    "description": "The ID of the conference room to be cancelled",
                    "type": "string"
                },
                "city": {
                    "description": "The city where the conference room to be cancelled is located",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Conference room cancellation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "car_rental_cancelling",
        "description": "Car Rental Reservation Cancellation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "startDate": {
                    "description": "Start date (date + time) of the car rental to be cancelled",
                    "type": "string"
                },
                "endDate": {
                    "description": "End date (date + time) of the car rental to be cancelled",
                    "type": "string"
                },
                "carID": {
                    "description": "Car identification number to be cancelled",
                    "type": "string"
                },
                "city": {
                    "description": "City where the car rental pickup is to be cancelled",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Car rental cancellation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "reserve_flight_ticket",
        "description": "Reserve a flight ticket and select options that allow free cancellation or changes",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "cancellationOption": {
                    "type": "string",
                    "description": "Cancellation or change options"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Flight reservation status"
                }
            }
        }
    },
    {
        "name": "generate_cancellation_certificate",
        "description": "Generate a certificate for cancellation of reservation",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation_info": {
                    "type": "string",
                    "description": "Confirmation information for cancellation of reservation"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate for cancellation of reservation"
                }
            }
        }
    },
    {
        "name": "flight_ticket_payment",
        "description": "Complete flight ticket payment and booking",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure time",
                    "format": "date-time"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "seatNumber": {
                    "type": "string",
                    "description": "Seat number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_status": {
                    "type": "string",
                    "description": "Payment status"
                }
            }
        }
    },
    {
        "name": "sort_tickets_by_price",
        "description": "Sort the list of train tickets from low to high based on ticket price",
        "arguments": {
            "type": "object",
            "properties": {
                "ticket_list": {
                    "type": "string",
                    "description": "The list of train tickets to be sorted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sorted_ticket_list": {
                    "type": "string",
                    "description": "The sorted list of train tickets"
                }
            }
        }
    },
    {
        "name": "set_ringtone_for_event",
        "description": "Set ringtone for a specific event",
        "arguments": {
            "type": "object",
            "properties": {
                "event_name": {
                    "type": "string",
                    "description": "Calendar event name"
                },
                "ringtone_file": {
                    "type": "string",
                    "description": "Ringtone file name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "setting_status": {
                    "type": "string",
                    "description": "Ringtone setting status"
                }
            }
        }
    },
    {
        "name": "contact_seller",
        "description": "Contact the seller to confirm the condition of the computer and the transaction process",
        "arguments": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string",
                    "description": "Seller's contact information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contact_status": {
                    "type": "string",
                    "description": "Contact status"
                }
            }
        }
    },
    {
        "name": "get_contact_information",
        "description": "Get the contact information of the restaurant",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_id": {
                    "type": "integer",
                    "description": "Restaurant ID"
                },
                "restaurant_name": {
                    "type": "string",
                    "description": "Restaurant Name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "type": "string",
                    "description": "Restaurant contact method"
                },
                "contact_information": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "description": "Email address"
                        },
                        "phone": {
                            "type": "string",
                            "description": "Phone number"
                        },
                        "address": {
                            "type": "string",
                            "description": "Mailing address"
                        }
                    }
                },
                "location": {
                    "type": "string",
                    "description": "Restaurant location"
                },
                "business_hours": {
                    "type": "string",
                    "description": "Business hours"
                }
            }
        }
    },
    {
        "name": "book_restaurant",
        "description": "Restaurant Reservation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_name": {
                    "type": "string",
                    "description": "Name of the restaurant to reserve"
                },
                "reservation_time": {
                    "type": "string",
                    "description": "Reservation time"
                },
                "customer_name": {
                    "type": "string",
                    "description": "Customer's name"
                },
                "contact_info": {
                    "type": "string",
                    "description": "Customer contact information"
                },
                "party_size": {
                    "type": "integer",
                    "description": "Number of people in the party"
                },
                "special_requests": {
                    "type": "string",
                    "description": "Special requests"
                },
                "view_requirement": {
                    "type": "string",
                    "description": "Seating requirement, e.g., view of concert stage"
                },
                "area": {
                    "type": "string",
                    "description": "Reservation area"
                },
                "nearby_location": {
                    "type": "string",
                    "description": "Nearby location"
                },
                "budgetPerPerson": {
                    "type": "integer",
                    "description": "Budget per person"
                },
                "special_requirements": {
                    "type": "string",
                    "description": "Special dietary requirements"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_status": {
                    "type": "string",
                    "description": "Reservation status"
                },
                "bookingDetails": {
                    "type": "string",
                    "description": "Details of the booking"
                },
                "outcome": {
                    "type": "string",
                    "description": "Whether the reservation was successful"
                },
                "reservation_details": {
                    "type": "object",
                    "description": "Details of the reservation"
                },
                "restaurantDetails": {
                    "type": "string",
                    "description": "Details of the restaurant"
                },
                "booking_confirmation": {
                    "type": "string",
                    "description": "Booking confirmation information"
                },
                "restaurant_address": {
                    "type": "string",
                    "description": "Restaurant address"
                },
                "reservation_proof": {
                    "type": "string",
                    "description": "Proof of reservation"
                },
                "table_id": {
                    "type": "integer",
                    "description": "Table ID"
                }
            }
        }
    },
    {
        "name": "search_food_history",
        "description": "Search the historical background of a specific cuisine",
        "arguments": {
            "type": "object",
            "properties": {
                "dish": {
                    "type": "string",
                    "description": "The name of the cuisine to search for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "history": {
                    "type": "string",
                    "description": "The historical background of the cuisine"
                }
            }
        }
    },
    {
        "name": "food_recommendation",
        "description": "Recommend local delicacies based on tourist attraction location",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "Tourist attraction location",
                    "type": "string"
                },
                "dietPreferences": {
                    "description": "User's dietary preferences",
                    "type": "string"
                },
                "allergies": {
                    "description": "User's food allergies",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recommended_dish": {
                    "description": "Recommended dish",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "book_seats",
        "description": "Book seats using the restaurant's contact information",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInfo": {
                    "type": "string",
                    "description": "The contact information of the restaurant"
                },
                "seats": {
                    "type": "integer",
                    "description": "The number of seats to reserve"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "bookingStatus": {
                    "type": "string",
                    "description": "The status of the reservation"
                },
                "confirmationNumber": {
                    "type": "string",
                    "description": "The reservation confirmation number"
                }
            }
        }
    },
    {
        "name": "check_table_availability",
        "description": "Check the availability of a specific table for tonight",
        "arguments": {
            "type": "object",
            "properties": {
                "table_id": {
                    "type": "string",
                    "description": "Table ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether the table is available"
                }
            }
        }
    },
    {
        "name": "b_b_availability_check",
        "description": "B&B Availability Check Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "date_check_in": {
                    "description": "Check-in Date",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-08-01 08:00"
                },
                "date_check_out": {
                    "description": "Check-out Date",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-08-03 10:00"
                },
                "b_b_name": {
                    "description": "B&B Name",
                    "type": "string"
                },
                "location": {
                    "description": "Location of the B&B",
                    "type": "string"
                },
                "guests": {
                    "description": "Number of Guests",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "description": "Availability Status of the B&B",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "check_booking_information",
        "description": "Check if the flight booking information is correct",
        "arguments": {
            "type": "object",
            "properties": {
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "check_status": {
                    "type": "string",
                    "description": "Booking information check status"
                }
            }
        }
    },
    {
        "name": "confirm_room_price_and_policy",
        "description": "Confirm the room price and booking policy of the specified hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel Identifier ID"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room Type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Room Price"
                },
                "policy": {
                    "type": "string",
                    "description": "Booking Policy"
                }
            }
        }
    },
    {
        "name": "query_unspecified_time_bookings",
        "description": "Query all train ticket booking records with unspecified time",
        "arguments": {
            "type": "object",
            "properties": {
                "identityNumber": {
                    "type": "string",
                    "description": "Identity card number of the ticket purchaser"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "bookings": {
                    "type": "array",
                    "description": "List of train ticket booking records with unspecified time"
                }
            }
        }
    },
    {
        "name": "select_room_for_booking",
        "description": "Select an appropriate room for booking",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of rooms"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selection_status": {
                    "type": "string",
                    "description": "Selection status"
                }
            }
        }
    },
    {
        "name": "check_booking_status",
        "description": "Check the booking status of a meeting room for a specified account on a specific date",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "User account ID"
                },
                "date": {
                    "type": "string",
                    "description": "Booking date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Meeting room booking status"
                }
            }
        }
    },
    {
        "name": "hotel_reservation_search",
        "description": "Hotel Reservation Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "hotelName": {
                    "description": "Name of the hotel",
                    "type": "string"
                },
                "checkInDate": {
                    "description": "Check-in date",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                },
                "checkOutDate": {
                    "description": "Check-out date",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                },
                "roomType": {
                    "description": "Room type",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "available_rooms": {
                    "description": "Number of available rooms",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "check_price_and_policy",
        "description": "Check the price and booking policy for the specified hotel and room type",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel Name"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room Type"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in Date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out Date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Price"
                },
                "policy": {
                    "type": "string",
                    "description": "Booking Policy"
                }
            }
        }
    },
    {
        "name": "check_hotel_rating",
        "description": "Check the hotel room satisfaction rating within a specific date range",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                },
                "start_date": {
                    "type": "string",
                    "description": "Rating start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "Rating end date"
                },
                "minimum_rating": {
                    "type": "number",
                    "description": "Minimum satisfaction rating"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "rating_status": {
                    "type": "string",
                    "description": "Whether the rating meets the requirements"
                },
                "actual_rating": {
                    "type": "number",
                    "description": "Actual satisfaction rating"
                }
            }
        }
    },
    {
        "name": "select_business_hotel",
        "description": "Select a suitable hotel for business inspection based on location, user preferences, check-in date, length of stay, room type, and number of rooms, and check the availability and price of the executive king-size room.",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Location of the hotel"
                },
                "preferences": {
                    "type": "string",
                    "description": "User preferences"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "stay_days": {
                    "type": "integer",
                    "description": "Number of days to stay"
                },
                "room_type": {
                    "type": "string",
                    "description": "Type of room"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of rooms to book"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Filtered hotel ID"
                },
                "availability": {
                    "type": "boolean",
                    "description": "Availability of the selected room type"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                }
            }
        }
    },
    {
        "name": "check_availability_and_price",
        "description": "Check the availability and price of a specific hotel room type within a given date range",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of rooms to book"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                },
                "price_limit": {
                    "type": "number",
                    "description": "Price limit per night"
                },
                "platform": {
                    "type": "string",
                    "description": "Booking platform name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether there are enough rooms available for booking"
                },
                "price": {
                    "type": "number",
                    "description": "Room price"
                },
                "within_budget": {
                    "type": "boolean",
                    "description": "Whether the price is within budget"
                },
                "cancellation_policy": {
                    "type": "string",
                    "description": "Cancellation policy"
                }
            }
        }
    },
    {
        "name": "check_provider_availability",
        "description": "Check the availability of the service provider at the specified time",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "The time the user wishes to have the service"
                },
                "provider": {
                    "type": "string",
                    "description": "Service provider name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Availability of the service provider at the specified time"
                }
            }
        }
    },
    {
        "name": "book_selected_tour",
        "description": "Complete the booking process for a tour group",
        "arguments": {
            "type": "object",
            "properties": {
                "tour_name": {
                    "type": "string",
                    "description": "Tour group name"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "return_date": {
                    "type": "string",
                    "description": "Return date"
                },
                "tour_details": {
                    "type": "string",
                    "description": "Detailed information of the selected tour, including dates, prices, services, etc."
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                }
            }
        }
    },
    {
        "name": "get_modification_guide",
        "description": "Get the guide and steps for modifying an order",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "modification_guide": {
                    "type": "string",
                    "description": "Guide and steps for modification"
                }
            }
        }
    },
    {
        "name": "hotel_selection_and_verification",
        "description": "Select hotels that meet the travel standards and check the availability and price of rooms",
        "arguments": {
            "type": "object",
            "properties": {
                "check_in_date": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "accommodation_standard": {
                    "type": "number",
                    "description": "Accommodation standard selected based on travel standards"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selection_status": {
                    "type": "string",
                    "description": "Hotel selection status"
                },
                "verification_status": {
                    "type": "string",
                    "description": "Hotel availability and price verification status"
                }
            }
        }
    },
    {
        "name": "trip_package_search",
        "description": "Travel Package Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination of the trip",
                    "type": "string"
                },
                "travel_date": {
                    "description": "Date of the trip",
                    "type": "string"
                },
                "budget_range": {
                    "description": "Budget range",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "package_details": {
                    "description": "Detailed information of the travel package",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_confirmation_number",
        "description": "Get the reservation confirmation number based on customer name, hotel ID, check-in date, check-out date, and room type",
        "arguments": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string",
                    "description": "Customer name"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel ID"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Reservation confirmation number"
                }
            }
        }
    },
    {
        "name": "set_event_reminder",
        "description": "Set a reminder for a specified event",
        "arguments": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string",
                    "description": "The ID of the event"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "How much time in advance to remind"
                },
                "event_title": {
                    "type": "string",
                    "description": "The title of the event"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the reminder was set successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "access_weather_forecast_service",
        "description": "Access the weather forecast service and retrieve information",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Location"
                },
                "date": {
                    "type": "string",
                    "description": "Date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "weather_info": {
                    "type": "string",
                    "description": "Weather forecast information"
                }
            }
        }
    },
    {
        "name": "get_agenda_details",
        "description": "Get the detailed information of a specified agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The agenda id for which details are to be retrieved"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "The detailed information of the agenda",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "schedule_reminder",
        "description": "Set up a meeting reminder to automatically send to attendees at a specified time",
        "arguments": {
            "type": "object",
            "properties": {
                "reminder_time": {
                    "type": "string",
                    "description": "The time when the reminder is sent"
                },
                "attendee_contacts": {
                    "type": "string",
                    "description": "List of contact information for attendees"
                },
                "reminder_content": {
                    "type": "string",
                    "description": "Content of the meeting reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_status": {
                    "type": "string",
                    "description": "Status of the reminder setting"
                }
            }
        }
    },
    {
        "name": "create_meeting_reminder",
        "description": "Create meeting reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_id": {
                    "type": "string",
                    "description": "Meeting ID"
                },
                "meeting_topic": {
                    "type": "string",
                    "description": "Meeting topic"
                },
                "meeting_time": {
                    "type": "string",
                    "description": "Meeting time"
                },
                "meeting_location": {
                    "type": "string",
                    "description": "Meeting location"
                },
                "reminder_time": {
                    "type": "integer",
                    "description": "Reminder time (minutes)"
                },
                "meeting_details": {
                    "type": "string",
                    "description": "Meeting details"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the meeting notification was successfully created",
                    "type": "string"
                },
                "meeting_notification": {
                    "type": "string",
                    "description": "Meeting notification content"
                }
            }
        }
    },
    {
        "name": "filter_hotels_by_room_type",
        "description": "Filter hotels by room type",
        "arguments": {
            "type": "object",
            "properties": {
                "room_type": {
                    "type": "string",
                    "description": "Required room type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_hotels": {
                    "type": "array",
                    "description": "List of filtered hotels"
                }
            }
        }
    },
    {
        "name": "select_best_hotel",
        "description": "Select the best hotel based on user requirements",
        "arguments": {
            "type": "object",
            "properties": {
                "hotels": {
                    "type": "array",
                    "description": "List of hotels to choose from"
                },
                "preferences": {
                    "type": "object",
                    "description": "User preferences, such as price, rating, etc."
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "star_rating": {
                    "type": "string",
                    "description": "Hotel star rating"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date",
                    "format": "date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date",
                    "format": "date"
                },
                "room_type": {
                    "type": "string",
                    "description": "Required room type"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of rooms"
                },
                "location": {
                    "type": "string",
                    "description": "Location of the hotel"
                },
                "criteria": {
                    "type": "string",
                    "description": "Selection criteria, such as price, location, user reviews"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "best_hotel": {
                    "type": "object",
                    "description": "Information of the hotel that best meets the requirements"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "ID of the selected hotel"
                }
            }
        }
    },
    {
        "name": "get_booking_confirmation",
        "description": "Get hotel booking confirmation information",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                },
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_details": {
                    "type": "object",
                    "description": "Booking confirmation details"
                }
            }
        }
    },
    {
        "name": "travel_group_schedule",
        "description": "Travel Group Itinerary Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "groupID": {
                    "description": "Unique Identifier ID of the Travel Group",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule": {
                    "description": "Detailed Itinerary of the Travel Group",
                    "type": "string"
                },
                "startDate": {
                    "description": "Start Date of the Trip",
                    "type": "string"
                },
                "endDate": {
                    "description": "End Date of the Trip",
                    "type": "string"
                }
            },
            "required": [
                "schedule",
                "startDate",
                "endDate"
            ]
        }
    },
    {
        "name": "check_room_availability",
        "description": "Check the availability and price of room types at a specified hotel on specific dates",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel Name"
                },
                "check_in_date": {
                    "type": "string",
                    "description": "Check-in Date"
                },
                "check_out_date": {
                    "type": "string",
                    "description": "Check-out Date"
                },
                "location": {
                    "type": "string",
                    "description": "Hotel Location"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room Type"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel Identifier ID"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of Rooms"
                },
                "location_preference": {
                    "type": "string",
                    "description": "Location Preference"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether the room is available"
                },
                "price": {
                    "type": "number",
                    "description": "Room Price"
                },
                "availability_status": {
                    "type": "string",
                    "description": "Hotel Room Availability Status"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel Identifier ID"
                },
                "available_rooms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Available Rooms"
                },
                "offers": {
                    "type": "array",
                    "description": "List of Available Promotions"
                },
                "selected_option": {
                    "type": "string",
                    "description": "Selected Booking Option"
                }
            }
        }
    },
    {
        "name": "send_booking_info",
        "description": "Send booking information to the customer",
        "arguments": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string",
                    "description": "Customer name"
                },
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Send status"
                }
            }
        }
    },
    {
        "name": "check_room_upgrade_availability",
        "description": "Check the availability of room upgrade",
        "arguments": {
            "type": "object",
            "properties": {
                "current_room_type": {
                    "description": "Current room type",
                    "type": "string"
                },
                "new_room_type": {
                    "description": "New room type",
                    "type": "string"
                },
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "upgrade_status": {
                    "description": "Whether the room upgrade is feasible",
                    "type": "boolean"
                },
                "price_difference": {
                    "description": "Price difference",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "room_type_availability_check",
        "description": "Check the availability of a specified room type in a hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether the specified room type is available"
                }
            }
        }
    },
    {
        "name": "hotel_id_lookup",
        "description": "A tool for querying hotel identification ID",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Destination city"
                },
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identification ID"
                }
            }
        }
    },
    {
        "name": "check_hotel_existence",
        "description": "Check if the hotel exists",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel Identifier ID"
                },
                "location": {
                    "type": "string",
                    "description": "Hotel Location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "existence": {
                    "type": "boolean",
                    "description": "Whether the hotel exists"
                }
            }
        }
    },
    {
        "name": "search_and_select_hotel",
        "description": "Search and select the appropriate hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Travel destination"
                },
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of rooms"
                },
                "hotel_rating": {
                    "type": "string",
                    "description": "Hotel rating"
                },
                "star_rating": {
                    "type": "string",
                    "description": "Hotel star rating"
                },
                "check_in_date": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out_date": {
                    "type": "string",
                    "description": "Check-out date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_selection": {
                    "type": "string",
                    "description": "User-selected hotel information"
                },
                "hotel_info": {
                    "type": "string",
                    "description": "Information of the selected hotel"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Identifier ID of the selected hotel"
                }
            }
        }
    },
    {
        "name": "find_and_select_hotel",
        "description": "Find and select an appropriate hotel based on check-in and check-out dates as well as room type",
        "arguments": {
            "type": "object",
            "properties": {
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "description": "Selected hotel ID",
                    "type": "string"
                },
                "selection_status": {
                    "description": "Hotel selection status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "search_and_filter_hotels",
        "description": "Search and filter hotels that meet the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The city of stay"
                },
                "brand": {
                    "type": "string",
                    "description": "Hotel brand"
                },
                "check_in_date": {
                    "type": "string",
                    "description": "Check-in date",
                    "format": "date"
                },
                "check_out_date": {
                    "type": "string",
                    "description": "Check-out date",
                    "format": "date"
                },
                "price_limit": {
                    "type": "number",
                    "description": "Price limit"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_options": {
                    "type": "array",
                    "description": "Hotel options that meet the criteria"
                }
            }
        }
    },
    {
        "name": "search_and_select_meeting_room",
        "description": "Search and select a meeting room that meets the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Location of the meeting room"
                },
                "meeting_time": {
                    "type": "string",
                    "description": "Meeting start time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "meeting_room_details": {
                    "type": "string",
                    "description": "Details of the selected meeting room"
                }
            }
        }
    },
    {
        "name": "get_room_price",
        "description": "Query the price of each room type in a specified hotel during a specific period",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "checkIn": {
                    "type": "string",
                    "description": "Expected check-in time",
                    "format": "date-time"
                },
                "checkOut": {
                    "type": "string",
                    "description": "Expected check-out time",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Room price"
                }
            }
        }
    },
    {
        "name": "check_room_facilities",
        "description": "Check if the meeting room facilities meet the requirements",
        "arguments": {
            "type": "object",
            "properties": {
                "room_id": {
                    "type": "string",
                    "description": "Meeting room ID"
                },
                "required_facilities": {
                    "type": "string",
                    "description": "Required meeting room facilities"
                },
                "city": {
                    "type": "string",
                    "description": "City where the meeting room is located"
                },
                "projector_minimum": {
                    "type": "integer",
                    "description": "Minimum number of projectors required"
                },
                "sockets_minimum": {
                    "type": "integer",
                    "description": "Minimum number of sockets required"
                },
                "capacity_minimum": {
                    "type": "integer",
                    "description": "Minimum capacity required"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "facilities_status": {
                    "type": "string",
                    "description": "Whether the meeting room facilities meet the needs"
                }
            }
        }
    },
    {
        "name": "random_hotel_selector",
        "description": "Randomly selects a hotel based on location and date and returns the hotel ID",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location of the hotel"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "The randomly selected hotel ID"
                }
            }
        }
    },
    {
        "name": "search_hotels",
        "description": "Search for hotels based on location, time, and user preferences",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Hotel location"
                },
                "star_rating": {
                    "type": "string",
                    "description": "Hotel star rating"
                },
                "amenities": {
                    "type": "array",
                    "description": "List of hotel amenities, such as free Wi-Fi"
                },
                "max_distance": {
                    "type": "string",
                    "description": "Maximum distance from the hotel to a specific landmark"
                },
                "check_in_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Check-in date"
                },
                "check_out_date": {
                    "type": "string",
                    "format": "date",
                    "description": "Check-out date"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "include_breakfast": {
                    "type": "string",
                    "description": "Whether breakfast service is included"
                },
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "minimum_rating": {
                    "type": "number",
                    "description": "Minimum rating"
                },
                "brand": {
                    "type": "string",
                    "description": "Hotel brand"
                },
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                },
                "wifi": {
                    "type": "string",
                    "description": "Whether free Wi-Fi service is required"
                },
                "additional_services": {
                    "type": "string",
                    "description": "Additional service requirements"
                },
                "maxPrice": {
                    "type": "number",
                    "description": "Maximum price per night"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of rooms to book"
                },
                "budget": {
                    "type": "integer",
                    "description": "Budget"
                },
                "duration": {
                    "type": "integer",
                    "description": "Number of days to stay"
                },
                "airport_transfer": {
                    "type": "boolean",
                    "description": "Whether airport transfer service is needed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotels": {
                    "type": "array",
                    "description": "List of hotels that meet the criteria"
                },
                "hotel_id": {
                    "description": "Identifier ID of the hotel that meets the criteria",
                    "type": "string"
                },
                "search_status": {
                    "type": "string",
                    "description": "Search status"
                }
            }
        }
    },
    {
        "name": "filter_hotels_by_service",
        "description": "Filter hotels by required services",
        "arguments": {
            "type": "object",
            "properties": {
                "hotels_list": {
                    "type": "array",
                    "description": "List of hotels to be filtered"
                },
                "required_service": {
                    "type": "string",
                    "description": "The required additional service"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_list": {
                    "type": "array",
                    "description": "List of filtered hotels"
                }
            }
        }
    },
    {
        "name": "confirm_and_select_seat",
        "description": "Confirm the flight booking change is successful, and select seat preference",
        "arguments": {
            "type": "object",
            "properties": {
                "booking_name": {
                    "type": "string",
                    "description": "The name of the passenger whose booking needs to be confirmed"
                },
                "flight_number": {
                    "type": "string",
                    "description": "The flight number that needs to be confirmed"
                },
                "new_departure_date": {
                    "type": "string",
                    "description": "The new departure date"
                },
                "seat_preference": {
                    "type": "string",
                    "description": "Seat preference"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Flight booking change confirmation status"
                },
                "seat_selection_status": {
                    "type": "string",
                    "description": "Seat selection status"
                }
            }
        }
    },
    {
        "name": "request_written_confirmation",
        "description": "Request to send written confirmation after changing the appointment",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Status of whether the written confirmation was successfully sent"
                }
            }
        }
    },
    {
        "name": "flight_search",
        "description": "Flight Ticket Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "departure_date": {
                    "type": "string",
                    "description": "Departure Date"
                },
                "return_date": {
                    "type": "string",
                    "description": "Return Date"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "departure_city": {
                    "type": "string",
                    "description": "Departure City"
                },
                "arrival_city": {
                    "type": "string",
                    "description": "Arrival City"
                },
                "departure_time": {
                    "type": "string",
                    "description": "Earliest Departure Time"
                },
                "directFlight": {
                    "type": "boolean",
                    "description": "Direct Flight"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight Number"
                },
                "priceLimit": {
                    "type": "string",
                    "description": "Price Limit"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Booking Name"
                },
                "cabinClass": {
                    "type": "string",
                    "description": "Cabin Class"
                },
                "timePeriod": {
                    "type": "string",
                    "description": "Time Period, e.g., 'morning'"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flight_options": {
                    "type": "array",
                    "description": "List of Available Flight Options",
                    "items": {
                        "type": "object"
                    }
                },
                "selected_flight_price": {
                    "type": "integer",
                    "description": "Price of the Selected Flight"
                }
            }
        }
    },
    {
        "name": "search_alternative_flights",
        "description": "Find alternative flight options with the closest departure time for a specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "original_flight_date": {
                    "type": "string",
                    "description": "Original flight date"
                },
                "original_flight_number": {
                    "type": "string",
                    "description": "Original flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "alternative_flights": {
                    "type": "string",
                    "description": "Alternative flight options"
                }
            }
        }
    },
    {
        "name": "flight_ticket_confirmation",
        "description": "Flight Ticket Booking Confirmation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "bookingName": {
                    "type": "string",
                    "description": "Passenger Name"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight Number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure Date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "description": "Booking Confirmation Status",
                    "type": "string"
                },
                "e_ticket": {
                    "description": "E-Ticket Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "business_trip_ticket_search",
        "description": "Flight ticket inquiry for tickets that can be booked on the same day",
        "arguments": {
            "type": "object",
            "properties": {
                "departureTime": {
                    "description": "Scheduled departure time",
                    "type": "string"
                },
                "departureLocation": {
                    "description": "Departure location",
                    "type": "string"
                },
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "class": {
                    "description": "Cabin class",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ticket_reservation_status": {
                    "description": "Ticket reservation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "clock_alarm_cancel",
        "description": "Cancel alarm tool",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "description": "The time of the alarm to be canceled",
                    "type": "string"
                },
                "date": {
                    "description": "The date of the alarm to be canceled",
                    "type": "string"
                },
                "label": {
                    "description": "The label of the alarm to be canceled",
                    "type": "string"
                },
                "frequency": {
                    "description": "The frequency of the alarm to be canceled",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "clock_alarm_info": {
                    "description": "Alarm cancellation result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "list_all_alarms",
        "description": "List all set alarm information",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "alarms": {
                    "description": "The list of all current alarms",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "confirm_existing_alarm",
        "description": "A tool to confirm the existing alarm settings",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "The alarm time to be confirmed"
                },
                "frequency": {
                    "type": "string",
                    "description": "The alarm frequency to be confirmed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "The result of the alarm confirmation"
                }
            }
        }
    },
    {
        "name": "cancel_alarms_before",
        "description": "Cancel all alarms before a specified time",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "The specified point in time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The result of the cancellation operation"
                }
            }
        }
    },
    {
        "name": "clock_alarm_set",
        "description": "Set Alarm Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "description": "Alarm Set Time",
                    "type": "string"
                },
                "date": {
                    "description": "Alarm Set Date",
                    "type": "string"
                },
                "label": {
                    "description": "Alarm Label",
                    "type": "string"
                },
                "frequency": {
                    "description": "Alarm Set Frequency, options: Once, Daily, Monday to Sunday, default is Once",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "clock_alarm_info": {
                    "description": "Alarm Setting Result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_alarm_volume",
        "description": "Set Alarm Volume Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Alarm Time"
                },
                "frequency": {
                    "type": "string",
                    "description": "Alarm Setting Frequency"
                },
                "volume": {
                    "type": "string",
                    "description": "Alarm Volume Level, such as maximum, medium, etc"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "volume_set_info": {
                    "description": "Alarm Volume Setting Result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_alarm_label",
        "description": "Set a label for the alarm with specified time and frequency",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Alarm set time"
                },
                "frequency": {
                    "type": "string",
                    "description": "Alarm set frequency"
                },
                "label": {
                    "type": "string",
                    "description": "Alarm label"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "label_status": {
                    "type": "string",
                    "description": "Label set status"
                }
            }
        }
    },
    {
        "name": "advance_ticket_booking",
        "description": "This tool is used for booking tickets for various events, such as concerts, plays, movies, etc.",
        "arguments": {
            "type": "object",
            "properties": {
                "event_type": {
                    "description": "Event type",
                    "type": "string",
                    "enum": [
                        "concert",
                        "play",
                        "movie"
                    ]
                },
                "date": {
                    "description": "Booking date",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-01-01T18:30:00.000Z"
                },
                "number_of_tickets": {
                    "description": "Number of tickets",
                    "type": "integer",
                    "minimum": 1
                },
                "seat_preference": {
                    "description": "Seat preference (e.g., front row, middle row, back row)",
                    "type": "string"
                },
                "vip": {
                    "description": "Whether VIP",
                    "type": "boolean"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Booking status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "train_ticket_booking",
        "description": "Train ticket booking tool",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "description": "Departure date and time",
                    "type": "string"
                },
                "startStation": {
                    "description": "Departure station",
                    "type": "string"
                },
                "endStation": {
                    "description": "Arrival station",
                    "type": "string"
                },
                "seatType": {
                    "description": "Seat type (e.g., hard seat, soft seat, sleeper)",
                    "type": "string"
                },
                "identityNumber": {
                    "description": "Passenger's ID number",
                    "type": "string"
                },
                "name": {
                    "description": "Passenger's name",
                    "type": "string"
                },
                "seatPreference": {
                    "description": "Seat preference",
                    "type": "string"
                },
                "trainNumber": {
                    "description": "Train number",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Train ticket booking status",
                    "type": "string"
                },
                "ticketID": {
                    "description": "Train ticket booking ID",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "train_ticket_cancelling",
        "description": "Train Ticket Reservation Cancellation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "ticketID": {
                    "description": "The train ticket number to be cancelled",
                    "type": "string"
                },
                "identityNumber": {
                    "description": "The identity card number of the person who purchased the ticket",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cancellation_status": {
                    "description": "Train ticket cancellation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "train_ticket_cancellation_policy",
        "description": "Inquire about the train ticket cancellation policy and process",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "cancellation_policy": {
                    "description": "Train ticket cancellation policy",
                    "type": "string"
                },
                "cancellation_steps": {
                    "description": "Train ticket cancellation steps",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "query_past_ticket",
        "description": "Query past train ticket orders",
        "arguments": {
            "type": "object",
            "properties": {
                "identityNumber": {
                    "type": "string",
                    "description": "Ticket purchaser's ID number"
                },
                "date": {
                    "type": "string",
                    "description": "Date to be queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "query_status": {
                    "type": "string",
                    "description": "Query status"
                },
                "ticketID": {
                    "type": "string",
                    "description": "Train ticket order number"
                }
            }
        }
    },
    {
        "name": "login_to_ticket_platform",
        "description": "Login tool for train ticket booking platform",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "description": "User login name",
                    "type": "string"
                },
                "password": {
                    "description": "User password",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "description": "Login status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "search_train",
        "description": "Search for train tickets based on preferences and return a list of train services that meet the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "departure": {
                    "type": "string",
                    "description": "Departure location"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "departure_time": {
                    "type": "string",
                    "description": "Departure time"
                },
                "departure_station": {
                    "type": "string",
                    "description": "Departure station"
                },
                "train_number": {
                    "type": "string",
                    "description": "Train number"
                },
                "seatPreference": {
                    "type": "string",
                    "description": "Seat preference"
                },
                "seatType": {
                    "type": "string",
                    "description": "Seat type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "train_id": {
                    "description": "High-speed train service ID",
                    "type": "string"
                },
                "search_status": {
                    "description": "Search status",
                    "type": "string"
                },
                "train_options": {
                    "description": "List of train services that meet the criteria",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "get_repair_confirmation_info",
        "description": "Get repair service confirmation information",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_info": {
                    "type": "string",
                    "description": "Repair service confirmation information"
                }
            }
        }
    },
    {
        "name": "confirm_room_type",
        "description": "Confirm the hotel provides a specific room type",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                },
                "expected_room_type": {
                    "type": "string",
                    "description": "Expected room type to reserve"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "room_type_status": {
                    "type": "string",
                    "description": "Room type confirmation status"
                },
                "availability": {
                    "type": "boolean",
                    "description": "Availability of the room type"
                }
            }
        }
    },
    {
        "name": "filter_hotels_with_room_type",
        "description": "Filter out hotels that offer a specified room type from the list of hotels",
        "arguments": {
            "type": "object",
            "properties": {
                "room_type": {
                    "type": "string",
                    "description": "Required room type"
                },
                "hotels": {
                    "type": "array",
                    "description": "List of hotels to be filtered"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_hotel_list": {
                    "type": "array",
                    "description": "List of hotels that offer the specified room type"
                }
            }
        }
    },
    {
        "name": "search_and_select_luxury_suite",
        "description": "Search and select a luxury suite",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Location of the hotel to search"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "description": "ID of the selected hotel",
                    "type": "string"
                },
                "selection_status": {
                    "description": "Whether the hotel was successfully selected",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "appliance_repair_request",
        "description": "Appliance Repair Request Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceType": {
                    "description": "Type of appliance to be repaired, such as refrigerator, TV, washing machine, etc.",
                    "type": "string"
                },
                "applianceBrand": {
                    "description": "Brand of the appliance to be repaired",
                    "type": "string"
                },
                "applianceModel": {
                    "description": "Model of the appliance to be repaired",
                    "type": "string"
                },
                "issueDescription": {
                    "description": "Description of the appliance malfunction",
                    "type": "string"
                },
                "contactInformation": {
                    "description": "Contact information",
                    "type": "string"
                },
                "address": {
                    "description": "Service address",
                    "type": "string"
                },
                "time": {
                    "description": "Scheduled service time",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "request_status": {
                    "description": "Repair request status",
                    "type": "string"
                },
                "requestID": {
                    "description": "Repair request ID",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "provide_repair_details",
        "description": "Provide detailed information required for repair to the service center",
        "arguments": {
            "type": "object",
            "properties": {
                "appliance_brand": {
                    "type": "string",
                    "description": "Appliance brand"
                },
                "appliance_model": {
                    "type": "string",
                    "description": "Appliance model"
                },
                "issue_description": {
                    "type": "string",
                    "description": "Fault description"
                },
                "contact_information": {
                    "type": "string",
                    "description": "Contact information"
                },
                "service_address": {
                    "type": "string",
                    "description": "Service address"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "detail_submission_status": {
                    "type": "string",
                    "description": "Information submission status"
                }
            }
        }
    },
    {
        "name": "local_appliance_repair_provider_search",
        "description": "Search for local appliance repair service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceType": {
                    "type": "string",
                    "description": "Type of appliance in need of repair"
                },
                "address": {
                    "type": "string",
                    "description": "Service address"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "provider_list": {
                    "description": "List of local appliance repair service providers",
                    "type": "array"
                },
                "search_status": {
                    "type": "string",
                    "description": "Search status"
                }
            }
        }
    },
    {
        "name": "appliance_repair_cancellation",
        "description": "Appliance Repair Cancellation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "description": "The repair request number to be cancelled",
                    "type": "string"
                },
                "cancellationReason": {
                    "description": "Reason for cancellation",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cancellation_status": {
                    "description": "Repair cancellation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "repair_experience_query",
        "description": "Query whether the repair company has experience in repairing specific brand appliances",
        "arguments": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string",
                    "description": "The area to be queried"
                },
                "brand": {
                    "type": "string",
                    "description": "The appliance brand to be queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "experience_status": {
                    "type": "string",
                    "description": "The status of having repair experience"
                }
            }
        }
    },
    {
        "name": "conference_room_query",
        "description": "Conference Room Reservation Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "startTime": {
                    "description": "The start time of the meeting to be queried (date + time)",
                    "type": "string"
                },
                "endTime": {
                    "description": "The end time of the meeting to be queried (date + time)",
                    "type": "string"
                },
                "roomID": {
                    "description": "The ID of the conference room to be queried",
                    "type": "string"
                },
                "city": {
                    "description": "The city where the conference room to be queried is located",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "conference_room_status": {
                    "description": "The reservation list of conference rooms that meet the search criteria",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "login_to_booking_system",
        "description": "Log in to the meeting room booking system",
        "arguments": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "User login credentials"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "type": "string",
                    "description": "Login status"
                }
            }
        }
    },
    {
        "name": "check_conference_room_seating",
        "description": "Check if the specified conference room has enough seating",
        "arguments": {
            "type": "object",
            "properties": {
                "roomID": {
                    "type": "string",
                    "description": "Conference room number"
                },
                "city": {
                    "type": "string",
                    "description": "City where the conference room is located"
                },
                "minimum_seats": {
                    "type": "string",
                    "description": "Minimum number of seats required"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "seating_status": {
                    "type": "string",
                    "description": "Whether the number of seats is sufficient"
                },
                "current_seats": {
                    "type": "string",
                    "description": "Current number of seats"
                }
            }
        }
    },
    {
        "name": "filter_conference_rooms",
        "description": "Filter the list of conference rooms that meet specific capacity and facility requirements",
        "arguments": {
            "type": "object",
            "properties": {
                "conference_room_list": {
                    "type": "string",
                    "description": "List of conference rooms"
                },
                "min_capacity": {
                    "type": "number",
                    "description": "Minimum capacity requirement"
                },
                "required_facilities": {
                    "type": "array",
                    "description": "List of required facilities"
                },
                "equipment": {
                    "type": "array",
                    "description": "List of required equipment",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_conference_rooms": {
                    "type": "string",
                    "description": "Filtered list of conference rooms"
                }
            }
        }
    },
    {
        "name": "batch_book_meeting_rooms",
        "description": "Batch book meeting rooms",
        "arguments": {
            "type": "object",
            "properties": {
                "dates": {
                    "type": "array",
                    "description": "List of dates to book"
                },
                "start_time": {
                    "type": "string",
                    "description": "Booking start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Booking end time"
                },
                "capacity": {
                    "type": "integer",
                    "description": "Capacity of the meeting room"
                },
                "location": {
                    "type": "string",
                    "description": "Location of the meeting room"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "array",
                    "description": "Booking status for each date"
                }
            }
        }
    },
    {
        "name": "conference_room_booking",
        "description": "Conference Room Booking Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "startTime": {
                    "description": "Meeting start time (date+time)",
                    "type": "string"
                },
                "endTime": {
                    "description": "Meeting end time (date+time)",
                    "type": "string"
                },
                "roomID": {
                    "description": "Conference room ID",
                    "type": "string"
                },
                "city": {
                    "description": "City where the conference room is located",
                    "type": "string"
                },
                "content": {
                    "description": "Meeting agenda",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Conference room booking status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_availability_and_parts",
        "description": "Check the availability of the service provider at the specified time and confirm if the required parts can be carried",
        "arguments": {
            "type": "object",
            "properties": {
                "provider_contact": {
                    "type": "string",
                    "description": "Contact information of the service provider"
                },
                "service_time": {
                    "type": "string",
                    "description": "The time when the service is needed"
                },
                "parts_needed": {
                    "type": "string",
                    "description": "Parts that may need to be replaced"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Availability status of the service provider"
                },
                "parts_status": {
                    "type": "string",
                    "description": "Status of the parts carrying condition"
                }
            }
        }
    },
    {
        "name": "search_repair_advice",
        "description": "Search for repair advice for a specific appliance model",
        "arguments": {
            "type": "object",
            "properties": {
                "appliance_model": {
                    "type": "string",
                    "description": "Appliance model"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "advice": {
                    "type": "array",
                    "description": "List of repair advice"
                }
            }
        }
    },
    {
        "name": "notify_part_replacement_possibility",
        "description": "Notify the repair service center to check for the need to replace parts during maintenance, and reserve the possibility to reschedule the visit at the user's specified time",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification status"
                }
            }
        }
    },
    {
        "name": "check_dish_availability",
        "description": "Check if the dishes are available",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_id": {
                    "description": "Restaurant ID",
                    "type": "integer"
                },
                "dish_list": {
                    "description": "List of required dishes",
                    "type": "array"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "description": "Whether all dishes are available",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "adjust_alarm_volume",
        "description": "Adjust the volume of a specified alarm",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Alarm set time"
                },
                "frequency": {
                    "type": "string",
                    "description": "Frequency of volume adjustment"
                },
                "volume": {
                    "type": "string",
                    "description": "Alarm volume level"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "adjust_status": {
                    "type": "string",
                    "description": "Status of whether the volume adjustment was successful"
                }
            }
        }
    },
    {
        "name": "set_smart_alarm_delay",
        "description": "Set a smart delay feature for the alarm clock, which will ring again after a certain period of time if it is not turned off within the specified time",
        "arguments": {
            "type": "object",
            "properties": {
                "alarm_time": {
                    "type": "string",
                    "description": "Alarm clock time"
                },
                "delay_condition": {
                    "type": "string",
                    "description": "Delay condition, for example 'not turned off within 10 minutes'"
                },
                "delay_time": {
                    "type": "string",
                    "description": "Delay time, for example '10 minutes'"
                },
                "effective_days": {
                    "type": "string",
                    "description": "Number of days the delay feature is effective, for example '3 days'"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "set_status": {
                    "type": "string",
                    "description": "Smart delay setting status"
                }
            }
        }
    },
    {
        "name": "clock_alarm_change",
        "description": "Change Alarm Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "originalTime": {
                    "description": "The original time of the alarm to be changed",
                    "type": "string"
                },
                "date": {
                    "description": "The date after the alarm is changed",
                    "type": "string"
                },
                "label": {
                    "description": "The label after the alarm is changed",
                    "type": "string"
                },
                "changeTime": {
                    "description": "The time after the alarm is changed",
                    "type": "string"
                },
                "originalFrequency": {
                    "description": "The original frequency of the alarm to be changed",
                    "type": "string"
                },
                "changeFrequency": {
                    "description": "The frequency after the alarm is changed",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "clock_alarm_info": {
                    "description": "Alarm change result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "clock_alarm_verify",
        "description": "Verify whether the alarm clock is enabled for the next 7 days",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "The alarm clock time to be verified"
                },
                "frequency": {
                    "type": "string",
                    "description": "The alarm clock frequency to be verified"
                },
                "days": {
                    "type": "integer",
                    "description": "The number of days to be verified"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "type": "string",
                    "description": "The status of whether the alarm clock is enabled for the next 7 days"
                }
            }
        }
    },
    {
        "name": "generate_alarm_setting_guide",
        "description": "Generate Alarm Setting Guide Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "description": "Alarm setting time",
                    "type": "string"
                },
                "frequency": {
                    "description": "Alarm setting frequency, options: Once, Daily, Monday to Sunday, default is Once",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "guide": {
                    "description": "Alarm setting guide content",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_cleaning_changes",
        "description": "Check if there have been any cancellations or changes for the home cleaning appointment on the specified date and address",
        "arguments": {
            "type": "object",
            "properties": {
                "cleaningDate": {
                    "type": "string",
                    "description": "The cleaning date to be checked"
                },
                "address": {
                    "type": "string",
                    "description": "The home address to be checked"
                },
                "city": {
                    "type": "string",
                    "description": "The city where the home to be checked is located"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_status": {
                    "type": "string",
                    "description": "Appointment change status"
                }
            }
        }
    },
    {
        "name": "clear_invalid_reminders",
        "description": "Clear invalid or expired reminders at a specific time and frequency",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Reminder time"
                },
                "frequency": {
                    "type": "string",
                    "description": "Reminder frequency"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "clear_status": {
                    "type": "string",
                    "description": "Reminder clearance status"
                }
            }
        }
    },
    {
        "name": "search_files",
        "description": "Search for specific types of files in a designated directory and return a list of files.",
        "arguments": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "description": "The name of the file to search for"
                },
                "directory": {
                    "type": "string",
                    "description": "The path of the directory to search in"
                },
                "file_type": {
                    "type": "string",
                    "description": "The type of file to search for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "description": "List of file paths found"
                }
            }
        }
    },
    {
        "name": "search_luxury_hotels",
        "description": "Search for luxury hotels in a specified city",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Identifier ID of the luxury hotel"
                }
            }
        }
    },
    {
        "name": "complete_payment_for_tour_group",
        "description": "Complete payment for the selected tour group",
        "arguments": {
            "type": "object",
            "properties": {
                "tour_group_id": {
                    "type": "string",
                    "description": "The unique identifier ID of the tour group"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_status": {
                    "type": "string",
                    "description": "Payment status"
                }
            }
        }
    },
    {
        "name": "complete_hotel_booking",
        "description": "Complete hotel reservation and payment process",
        "arguments": {
            "type": "object",
            "properties": {
                "hotelName": {
                    "type": "string",
                    "description": "Name of the hotel"
                },
                "checkInDate": {
                    "type": "string",
                    "description": "Check-in date",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                "checkOutDate": {
                    "type": "string",
                    "description": "Check-out date",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                "roomType": {
                    "type": "string",
                    "description": "Room type"
                },
                "userName": {
                    "type": "string",
                    "description": "User's name"
                },
                "contact": {
                    "type": "string",
                    "description": "User contact information"
                },
                "paymentPreference": {
                    "type": "string",
                    "description": "User payment preference"
                },
                "paymentInfo": {
                    "type": "string",
                    "description": "User payment information"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of rooms"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "bookingConfirmation": {
                    "type": "string",
                    "description": "Booking confirmation information"
                }
            }
        }
    },
    {
        "name": "additional_room_booking",
        "description": "Additional room booking interface, used to add rooms in the same order, ensuring rooms are on the same floor.",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of rooms to book"
                },
                "same_floor_requirement": {
                    "type": "boolean",
                    "description": "Whether the rooms are required to be on the same floor"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                }
            }
        }
    },
    {
        "name": "search_nearby_attractions",
        "description": "Search and list famous tourist attractions near a specified hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "attractions": {
                    "type": "array",
                    "description": "List of nearby tourist attractions",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Attraction name"
                            },
                            "description": {
                                "type": "string",
                                "description": "Attraction introduction"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "accommodation_search",
        "description": "Search for accommodation options based on destination",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Travel destination"
                },
                "start_date": {
                    "type": "string",
                    "description": "Check-in start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "Check-out end date"
                },
                "budget": {
                    "type": "integer",
                    "description": "Accommodation budget"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "accommodations": {
                    "type": "array",
                    "description": "List of accommodation options"
                }
            }
        }
    },
    {
        "name": "hotel_search",
        "description": "Search for hotels that meet the criteria and return a list",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Hotel location"
                },
                "check_in_date": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out_date": {
                    "type": "string",
                    "description": "Check-out date"
                },
                "guests": {
                    "description": "Number of guests",
                    "type": "integer"
                },
                "city": {
                    "type": "string",
                    "description": "City of stay"
                },
                "stay_duration": {
                    "description": "Duration of stay",
                    "type": "integer"
                },
                "stars": {
                    "type": "integer",
                    "description": "Hotel star rating"
                },
                "budget": {
                    "type": "integer",
                    "description": "Budget"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of rooms"
                },
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name to search for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_info": {
                    "type": "string",
                    "description": "Filtered hotel information"
                },
                "hotel_options": {
                    "type": "array",
                    "description": "List of available hotels"
                },
                "search_status": {
                    "description": "Search status",
                    "type": "string"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel ID that meets the criteria"
                },
                "availability": {
                    "type": "boolean",
                    "description": "Availability of rooms"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                }
            }
        }
    },
    {
        "name": "validate_identity",
        "description": "Verify the validity of the ID card number",
        "arguments": {
            "type": "object",
            "properties": {
                "identity_number": {
                    "type": "string",
                    "description": "The ID card number to be verified"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "type": "string",
                    "description": "The verification status of the ID card number"
                }
            }
        }
    },
    {
        "name": "send_verification_code",
        "description": "Send a verification code to the user's reserved mobile number",
        "arguments": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string",
                    "description": "The user's card (account) number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_code": {
                    "type": "string",
                    "description": "The verification code sent to the user's mobile phone"
                },
                "send_status": {
                    "type": "string",
                    "description": "Verification code sending status"
                }
            }
        }
    },
    {
        "name": "identity_verification",
        "description": "Identity Verification Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "identity_info": {
                    "type": "string",
                    "description": "User Identity Information"
                },
                "account_id": {
                    "type": "string",
                    "description": "User Account ID"
                },
                "name": {
                    "type": "string",
                    "description": "User Name"
                },
                "identity_number": {
                    "type": "string",
                    "description": "Identity Card Number to be Verified"
                },
                "personal_info": {
                    "type": "string",
                    "description": "Account Owner's Personal Information"
                },
                "identity_proof": {
                    "type": "string",
                    "description": "Account Owner's Identity Proof Document"
                },
                "owner_name": {
                    "type": "string",
                    "description": "Account Owner's Name"
                },
                "contact_info": {
                    "type": "string",
                    "description": "Account Owner's Contact Information"
                },
                "ticket_number": {
                    "type": "string",
                    "description": "Ticket Number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "type": "string",
                    "description": "Identity Verification Status"
                },
                "identity_number": {
                    "type": "string",
                    "description": "User Identity Card Number"
                }
            }
        }
    },
    {
        "name": "validate_user_identity",
        "description": "Verify if the user identity is valid",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "The user ID to be verified for identity"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "validation_status": {
                    "type": "string",
                    "description": "The status of whether the user identity verification was successful"
                }
            }
        }
    },
    {
        "name": "search_repair_provider",
        "description": "Search for repair service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Service address"
                },
                "time": {
                    "type": "string",
                    "description": "Appointment time for the service"
                },
                "area": {
                    "type": "string",
                    "description": "Service area"
                },
                "appliance_type": {
                    "type": "string",
                    "description": "Type of appliance"
                },
                "appliance_brand": {
                    "type": "string",
                    "description": "Appliance brand"
                },
                "appliance_model": {
                    "type": "string",
                    "description": "Appliance model"
                },
                "issue_description": {
                    "type": "string",
                    "description": "Description of the issue"
                },
                "service_type": {
                    "type": "string",
                    "description": "Type of service"
                },
                "multi_brand_compatibility": {
                    "type": "string",
                    "description": "Compatibility with multiple brands"
                },
                "min_rating": {
                    "type": "string",
                    "description": "Minimum rating requirement"
                },
                "brand_authorization": {
                    "type": "string",
                    "description": "Appliance brand authorization information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": "Information of the repair provider"
                },
                "service_providers": {
                    "type": "array",
                    "description": "List of found service providers"
                },
                "search_status": {
                    "type": "string",
                    "description": "Search status"
                }
            }
        }
    },
    {
        "name": "search_appliance_repair_providers",
        "description": "Search for service providers offering appliance repair in a specific area",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Service area"
                },
                "applianceType": {
                    "type": "string",
                    "description": "Appliance type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "providers_list": {
                    "type": "array",
                    "description": "List of repair service providers"
                }
            }
        }
    },
    {
        "name": "check_meeting_room_availability",
        "description": "Check the availability of the meeting room for a specified time period",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Reservation date"
                },
                "start_time": {
                    "type": "string",
                    "description": "Reservation start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Reservation end time"
                },
                "room_number": {
                    "type": "string",
                    "description": "Meeting room number"
                },
                "location": {
                    "type": "string",
                    "description": "Location of the meeting room"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether the meeting room is available"
                },
                "availability_status": {
                    "type": "string",
                    "description": "Status of the meeting room availability"
                }
            }
        }
    },
    {
        "name": "check_service_availability",
        "description": "Check maintenance service availability",
        "arguments": {
            "type": "object",
            "properties": {
                "service_id": {
                    "type": "string",
                    "description": "Maintenance service point ID"
                },
                "area": {
                    "type": "string",
                    "description": "Service area"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "string",
                    "description": "Availability of the service point"
                }
            }
        }
    },
    {
        "name": "hotel_availability_check",
        "description": "Check the availability of a hotel for a given date",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel Name"
                },
                "location": {
                    "type": "string",
                    "description": "Hotel Location"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in Date",
                    "format": "date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out Date",
                    "format": "date"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room Type"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of Rooms"
                },
                "brand": {
                    "type": "string",
                    "description": "Hotel Brand"
                },
                "hotel_level": {
                    "type": "string",
                    "description": "Hotel Level"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Room Availability Status"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel Identifier ID"
                },
                "room_types": {
                    "type": "array",
                    "description": "List of Available Room Types",
                    "items": {
                        "type": "string"
                    }
                },
                "availability": {
                    "type": "boolean",
                    "description": "Whether the Hotel is Bookable"
                }
            }
        }
    },
    {
        "name": "hotel_compare_and_book",
        "description": "Compare customer reviews and prices of hotels in the same region and level, and book the hotel with the best value for money",
        "arguments": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string",
                    "description": "Customer Name"
                },
                "hotel_name": {
                    "type": "string",
                    "description": "Target Hotel Name"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in Date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out Date"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room Type"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of Rooms to Book"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking Confirmation Number"
                },
                "selected_hotel": {
                    "type": "string",
                    "description": "Booked Hotel Name"
                },
                "booking_status": {
                    "type": "string",
                    "description": "Booking Status"
                }
            }
        }
    },
    {
        "name": "find_and_book_meeting_room",
        "description": "Find and book a meeting room that meets specific capacity and timing requirements",
        "arguments": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "string",
                    "description": "Meeting room capacity requirements"
                },
                "start_time": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Meeting end time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Meeting room booking status"
                },
                "room_number": {
                    "type": "string",
                    "description": "Booked meeting room number"
                }
            }
        }
    },
    {
        "name": "search_available_rooms",
        "description": "Search for available rooms or meeting spaces",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The city where the meeting room is located"
                },
                "start_time": {
                    "type": "string",
                    "description": "Meeting start time (date+time)"
                },
                "end_time": {
                    "type": "string",
                    "description": "Meeting end time (date+time)"
                },
                "attendees": {
                    "type": "string",
                    "description": "Number of participants"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identification ID"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "capacity": {
                    "type": "string",
                    "description": "Minimum capacity"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "available_rooms": {
                    "type": "array",
                    "description": "List of available meeting rooms that meet the criteria"
                },
                "availability": {
                    "type": "boolean",
                    "description": "Availability"
                },
                "price": {
                    "type": "number",
                    "description": "Price"
                }
            }
        }
    },
    {
        "name": "search_and_confirm_room_availability",
        "description": "Search for meeting rooms based on specified location and capacity, and confirm their availability on a given date and time",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Meeting room location"
                },
                "capacity": {
                    "type": "string",
                    "description": "Meeting room capacity"
                },
                "date": {
                    "type": "string",
                    "description": "Meeting date"
                },
                "start_time": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Meeting end time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Meeting room availability status"
                }
            }
        }
    },
    {
        "name": "select_best_available_room",
        "description": "Select the most suitable available conference room from a given list of bookings for a specific number of people",
        "arguments": {
            "type": "object",
            "properties": {
                "conference_room_list": {
                    "type": "string",
                    "description": "List of conference room booking status"
                },
                "required_capacity": {
                    "type": "number",
                    "description": "Number of people the conference room needs to accommodate"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "roomID": {
                    "type": "string",
                    "description": "Selected conference room ID"
                },
                "selection_status": {
                    "type": "string",
                    "description": "Conference room selection status"
                }
            }
        }
    },
    {
        "name": "filter_available_room_types",
        "description": "Filter the available room types of a specified hotel within a certain date range",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel Name"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in Date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out Date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "available_room_types": {
                    "type": "array",
                    "description": "List of available room types"
                }
            }
        }
    },
    {
        "name": "search_accommodation",
        "description": "Search for accommodations within a specified location and date range",
        "arguments": {
            "type": "object",
            "properties": {
                "scenicSpotName": {
                    "type": "string",
                    "description": "Name of the scenic spot"
                },
                "visitDate": {
                    "type": "string",
                    "description": "Date of accommodation"
                },
                "location": {
                    "type": "string",
                    "description": "Accommodation location"
                },
                "check_in_date": {
                    "type": "string",
                    "description": "Check-in date",
                    "format": "date"
                },
                "check_out_date": {
                    "type": "string",
                    "description": "Check-out date",
                    "format": "date"
                },
                "budget": {
                    "type": "string",
                    "description": "Budget"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "accommodations": {
                    "description": "List of accommodation information",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "get_repair_appointment_details",
        "description": "Get detailed information about the repair appointment, including technician information and estimated arrival time",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Repair request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "technician_info": {
                    "type": "string",
                    "description": "Technician information"
                },
                "estimated_arrival_time": {
                    "type": "string",
                    "description": "Estimated arrival time"
                }
            }
        }
    },
    {
        "name": "open_document",
        "description": "Open the document file at the specified path",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The full path of the document"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "open_status": {
                    "type": "string",
                    "description": "Document open status"
                }
            }
        }
    },
    {
        "name": "file_read_verify",
        "description": "Read file content and verify if it matches the expected content",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                },
                "expected_content": {
                    "type": "string",
                    "description": "Expected file content"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verify_status": {
                    "description": "Whether the content matches the expectation",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "check_room_facility",
        "description": "Confirm whether a specified room type in a designated hotel includes certain facilities",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel Identifier ID"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room Type"
                },
                "facility": {
                    "type": "string",
                    "description": "Facility Name"
                },
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel Name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "facility_status": {
                    "type": "string",
                    "description": "Status of the facility availability"
                }
            }
        }
    },
    {
        "name": "set_reminder",
        "description": "Set Reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Reminder Time"
                },
                "content": {
                    "type": "string",
                    "description": "Reminder Content"
                },
                "reminder_title": {
                    "type": "string",
                    "description": "Reminder Title"
                },
                "agenda_id": {
                    "type": "string",
                    "description": "Agenda ID"
                },
                "recipient": {
                    "type": "string",
                    "description": "Recipient of Reminder"
                },
                "reminder_date": {
                    "type": "string",
                    "description": "Reminder Date"
                },
                "action": {
                    "type": "string",
                    "description": "Action to perform after reminder"
                },
                "contactInformation": {
                    "type": "string",
                    "description": "User's Contact Information"
                },
                "frequency": {
                    "description": "Frequency of reminder setting, options: once, daily, weekly Monday to Sunday, default is once",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Reminder Setting Status"
                },
                "reminder_set": {
                    "description": "Whether the reminder was set successfully",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "get_flight_weather",
        "description": "Get real-time weather forecast for a specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "weather_info": {
                    "type": "string",
                    "description": "Weather information"
                }
            }
        }
    },
    {
        "name": "get_current_date_time",
        "description": "Get the current date and time",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "current_date_time": {
                    "description": "The current date and time",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "airline_policy_query",
        "description": "Query the ticket change policy of a specified airline",
        "arguments": {
            "type": "object",
            "properties": {
                "airline": {
                    "type": "string",
                    "description": "Airline name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_policy": {
                    "type": "string",
                    "description": "Details of the ticket change policy"
                }
            }
        }
    },
    {
        "name": "set_manual_reminder",
        "description": "Set a personal reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Time of the reminder"
                },
                "message": {
                    "type": "string",
                    "description": "Content of the reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Reminder setup status"
                }
            }
        }
    },
    {
        "name": "set_new_alarm",
        "description": "Set a new alarm",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Alarm time"
                },
                "frequency": {
                    "type": "string",
                    "description": "Alarm frequency"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "clock_alarm_info": {
                    "description": "New alarm setting result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_alarm",
        "description": "Set alarm reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date the alarm is set for"
                },
                "time": {
                    "type": "string",
                    "description": "Reminder time"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the alarm, used to remind users of the purpose of the alarm"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the alarm is successfully set",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "batch_clock_alarm_cancel",
        "description": "Batch cancel alarms for specific times and frequencies over the next few weeks",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "The time of the alarm to be cancelled"
                },
                "frequency": {
                    "type": "string",
                    "description": "The frequency of the alarm to be cancelled"
                },
                "weeks": {
                    "type": "integer",
                    "description": "The number of weeks for which to cancel the alarm"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "clock_alarm_info": {
                    "type": "array",
                    "description": "List of results for alarms cancelled each week"
                }
            }
        }
    },
    {
        "name": "change_alarm_date_and_time",
        "description": "Change the alarm time for a specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "original_date": {
                    "type": "string",
                    "description": "The original date of the alarm to be changed"
                },
                "original_time": {
                    "type": "string",
                    "description": "The original time of the alarm to be changed"
                },
                "new_time": {
                    "type": "string",
                    "description": "The new time after the alarm is changed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "clock_alarm_info": {
                    "description": "Result of the alarm change",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "change_delivery_time",
        "description": "Change the delivery time of the order",
        "arguments": {
            "type": "object",
            "properties": {
                "orderId": {
                    "type": "string",
                    "description": "Order ID"
                },
                "currentDeliveryTime": {
                    "type": "string",
                    "description": "Current delivery time"
                },
                "newDeliveryTime": {
                    "type": "string",
                    "description": "Expected new delivery time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "changeStatus": {
                    "type": "string",
                    "description": "Status of whether the change of delivery time was successful"
                },
                "newDeliveryTime": {
                    "type": "string",
                    "description": "The new delivery time after change"
                }
            }
        }
    },
    {
        "name": "close_alarms_before",
        "description": "Close all alarms before the specified time",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Specified time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "clock_alarms_info": {
                    "type": "string",
                    "description": "Result of alarms being closed"
                }
            }
        }
    },
    {
        "name": "cancel_listed_alarms",
        "description": "Cancel all alarms in the list",
        "arguments": {
            "type": "object",
            "properties": {
                "alarms_list": {
                    "type": "array",
                    "description": "List of alarms to be cancelled"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cancel_status": {
                    "type": "array",
                    "description": "Cancellation status for each alarm"
                }
            }
        }
    },
    {
        "name": "cancel_alarms_on_holidays",
        "description": "Cancel alarms on specific public holidays",
        "arguments": {
            "type": "object",
            "properties": {
                "holidays": {
                    "type": "array",
                    "description": "List of public holidays on which to cancel alarms, each element is a date string"
                },
                "time": {
                    "type": "string",
                    "description": "The time at which to cancel the alarms"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cancel_status": {
                    "type": "array",
                    "description": "The result of cancelling the alarm for each holiday, each element is a boolean value"
                }
            }
        }
    },
    {
        "name": "set_single_alarm",
        "description": "Set a one-time alarm reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Alarm setting time"
                },
                "date": {
                    "type": "string",
                    "description": "Specific date for setting the alarm"
                },
                "frequency": {
                    "type": "string",
                    "description": "Alarm setting frequency, single occurrence here"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "clock_alarm_info": {
                    "description": "Alarm setting result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "add_advance_reminder_to_alarm",
        "description": "Add an advance reminder to the alarm for the specified time",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "The time of the alarm"
                },
                "advance_time": {
                    "type": "string",
                    "description": "The time for the advance reminder, for example '10 minutes'"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "The result of the advance reminder setting"
                }
            }
        }
    },
    {
        "name": "get_alarms_in_time_range",
        "description": "Retrieve all alarm information within a specified time range",
        "arguments": {
            "type": "object",
            "properties": {
                "start_time": {
                    "type": "string",
                    "description": "The start time of the time range"
                },
                "end_time": {
                    "type": "string",
                    "description": "The end time of the time range"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "alarms_info": {
                    "type": "array",
                    "description": "All alarm information within the specified time range"
                }
            }
        }
    },
    {
        "name": "check_alarm_for_week",
        "description": "Check if the alarm is set for the specified time every day for the coming week",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "The alarm time to check"
                },
                "frequency": {
                    "type": "string",
                    "description": "The frequency of the alarm setting, should be 'daily'"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "check_result": {
                    "type": "string",
                    "description": "The result of the alarm check"
                }
            }
        }
    },
    {
        "name": "flight_search_with_rewards",
        "description": "Search for flights offering additional reward points",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "departureCity": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrivalCity": {
                    "type": "string",
                    "description": "Arrival city"
                },
                "cabinClass": {
                    "type": "string",
                    "description": "Cabin class"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flights": {
                    "type": "array",
                    "description": "List of eligible flights"
                }
            }
        }
    },
    {
        "name": "flight_ticket_changing",
        "description": "Flight Ticket Booking Modification Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "originalDepartureDate": {
                    "description": "The flight departure time that needs to be changed",
                    "type": "string"
                },
                "originalFlightNumber": {
                    "description": "The flight number that needs to be changed",
                    "type": "string"
                },
                "originalName": {
                    "description": "The name of the passenger whose ticket information needs to be changed",
                    "type": "string"
                },
                "newFlightNumber": {
                    "description": "The new flight number after change",
                    "type": "string"
                },
                "newDepartureDate": {
                    "description": "The new flight departure time after change",
                    "type": "string"
                },
                "newDepartureCity": {
                    "description": "The departure city after change",
                    "type": "string"
                },
                "newArrivalCity": {
                    "description": "The arrival city after change",
                    "type": "string"
                },
                "newName": {
                    "description": "The name of the new passenger",
                    "type": "string"
                },
                "newID": {
                    "description": "The ID number of the new passenger",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "The status of the flight ticket booking modification",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_flight_change_policy",
        "description": "Get the flight change policy information",
        "arguments": {
            "type": "object",
            "properties": {
                "airline": {
                    "type": "string",
                    "description": "Airline name"
                },
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "Flight change policy"
                }
            }
        }
    },
    {
        "name": "search_and_select_flights",
        "description": "Search and select flights that meet the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "departureCity": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrivalCity": {
                    "type": "string",
                    "description": "Arrival city"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "earliestDepartureTime": {
                    "type": "string",
                    "description": "Earliest departure time, if it is an outbound flight"
                },
                "latestArrivalTime": {
                    "type": "string",
                    "description": "Latest arrival time, if it is a return flight"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Selected flight number"
                },
                "flight_status": {
                    "type": "string",
                    "description": "Flight selection status"
                }
            }
        }
    },
    {
        "name": "travelgroup_flight_search",
        "description": "Travel Group Flight Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "groupSize": {
                    "description": "Number of people in the travel group",
                    "type": "integer"
                },
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "departureDate": {
                    "description": "Departure date",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flightDetails": {
                    "description": "Flight details",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "flight_detail_search",
        "description": "Flight Detail Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "description": "Flight Number",
                    "type": "string"
                },
                "date": {
                    "description": "Flight Date",
                    "type": "string"
                },
                "airport": {
                    "description": "Airport Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flight_detail": {
                    "description": "Flight Detailed Information",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "book_transportation",
        "description": "Book transportation",
        "arguments": {
            "type": "object",
            "properties": {
                "transport": {
                    "type": "string",
                    "description": "Mode of transportation"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "return_date": {
                    "type": "string",
                    "description": "Return date"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "confirmation_details": {
                    "type": "object",
                    "description": "Booking confirmation details"
                },
                "transportation_bookings": {
                    "type": "string",
                    "description": "Transportation booking information"
                },
                "booking_details": {
                    "type": "object",
                    "description": "Booking details"
                },
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                }
            }
        }
    },
    {
        "name": "flight_ticket_reserve",
        "description": "Flight Ticket Reservation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "description": "Departure Date",
                    "type": "string"
                },
                "flightNumber": {
                    "description": "Flight Number",
                    "type": "string"
                },
                "bookingName": {
                    "description": "Passenger Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Ticket Reservation Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "cruise_ship_booking",
        "description": "Cruise Ship Ticket Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Departure Date",
                    "type": "string"
                },
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "roomType": {
                    "description": "Room Type",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "available_tickets": {
                    "description": "Available Tickets",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "flight_search_and_select",
        "description": "Search for flights and select the appropriate one",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "type": "string",
                    "description": "Departure date and time"
                },
                "departureCity": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrivalCity": {
                    "type": "string",
                    "description": "Arrival city"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Selected flight number"
                }
            }
        }
    },
    {
        "name": "scenic_spot_ticket_search",
        "description": "Scenic Spot Ticket Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "scenicSpotName": {
                    "description": "Scenic Spot Name",
                    "type": "string"
                },
                "visitDate": {
                    "description": "Visit Date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ticket_price": {
                    "description": "Ticket Price",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "search_and_filter_flights",
        "description": "Search for flights and filter out those with free baggage allowance",
        "arguments": {
            "type": "object",
            "properties": {
                "departureCity": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrivalCity": {
                    "type": "string",
                    "description": "Arrival city"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "preferred_time": {
                    "type": "string",
                    "description": "Preferred time period"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_flights": {
                    "type": "string",
                    "description": "List of filtered flights"
                }
            }
        }
    },
    {
        "name": "select_and_book_flight",
        "description": "Select and book a flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_options": {
                    "type": "string",
                    "description": "List of flight options found"
                },
                "name": {
                    "type": "string",
                    "description": "Passenger's name"
                },
                "identityNumber": {
                    "type": "string",
                    "description": "Passenger's ID number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date",
                    "format": "date-time"
                },
                "departureCity": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrivalCity": {
                    "type": "string",
                    "description": "Arrival city"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Flight booking status"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Booked flight number"
                }
            }
        }
    },
    {
        "name": "book_vehicle",
        "description": "Book vehicle service and confirm itinerary",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Reservation date"
                },
                "time": {
                    "type": "string",
                    "description": "Reservation time"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "vehicle_type": {
                    "type": "string",
                    "description": "Vehicle type"
                },
                "departure": {
                    "type": "string",
                    "description": "Departure location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "vehicle_booked": {
                    "type": "boolean",
                    "description": "Whether the vehicle is booked successfully"
                },
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                }
            }
        }
    },
    {
        "name": "book_best_flight",
        "description": "Book the best round-trip flight tickets based on the user's travel date, number of travelers, preferences, and budget range",
        "arguments": {
            "type": "object",
            "properties": {
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "return_date": {
                    "type": "string",
                    "description": "Return date"
                },
                "travelers": {
                    "type": "integer",
                    "description": "Number of travelers"
                },
                "preferences": {
                    "type": "string",
                    "description": "User preferences"
                },
                "budget": {
                    "type": "integer",
                    "description": "Budget range"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "flight_details": {
                    "type": "string",
                    "description": "Flight details"
                }
            }
        }
    },
    {
        "name": "book_tour_guide",
        "description": "Book tour guide service",
        "arguments": {
            "type": "object",
            "properties": {
                "guide_info": {
                    "type": "string",
                    "description": "Selected guide information"
                },
                "service_date": {
                    "type": "string",
                    "description": "Service date"
                },
                "personal_info": {
                    "type": "object",
                    "description": "Personal information"
                },
                "service_requirements": {
                    "type": "object",
                    "description": "Service requirements"
                },
                "language": {
                    "type": "string",
                    "description": "Guide language"
                },
                "location": {
                    "type": "string",
                    "description": "Travel location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Tour guide service booking status"
                },
                "payment_status": {
                    "type": "string",
                    "description": "Payment status"
                },
                "booking_details": {
                    "type": "string",
                    "description": "Booking details"
                },
                "confirmation_voucher": {
                    "type": "string",
                    "description": "Service confirmation voucher"
                }
            }
        }
    },
    {
        "name": "book_lunch",
        "description": "Lunch reservation service",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant": {
                    "type": "string",
                    "description": "Selected restaurant"
                },
                "time": {
                    "type": "string",
                    "description": "Reserved time"
                },
                "date": {
                    "type": "string",
                    "description": "Reservation date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Reservation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "book_earliest_flight",
        "description": "Book the earliest available flight that meets the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "departure": {
                    "type": "string",
                    "description": "Departure location"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Name of the person booking"
                },
                "latestDepartureTime": {
                    "type": "string",
                    "description": "Latest departure time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "flight_details": {
                    "type": "string",
                    "description": "Flight details"
                },
                "departureTime": {
                    "type": "string",
                    "description": "Actual departure time"
                }
            }
        }
    },
    {
        "name": "search_flights_after_time",
        "description": "Search for flights after a specified departure time",
        "arguments": {
            "type": "object",
            "properties": {
                "departure_city": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrival_city": {
                    "type": "string",
                    "description": "Arrival city"
                },
                "original_departure_time": {
                    "type": "string",
                    "description": "Original departure time"
                },
                "time_offset": {
                    "type": "string",
                    "description": "Time delay after the original departure time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flights": {
                    "type": "array",
                    "description": "List of flights that meet the criteria"
                }
            }
        }
    },
    {
        "name": "select_flight_by_time",
        "description": "Select a flight based on the provided time",
        "arguments": {
            "type": "object",
            "properties": {
                "flights_list": {
                    "type": "string",
                    "description": "List of flights found"
                },
                "desired_time": {
                    "type": "string",
                    "description": "Expected flight departure time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_flight": {
                    "description": "Information of the selected flight",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "book_flight_inquiry",
        "description": "Flight Booking Inquiry Service",
        "arguments": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "User Name"
                },
                "contact": {
                    "type": "string",
                    "description": "User Contact Information"
                },
                "time": {
                    "type": "string",
                    "description": "Inquiry Time"
                },
                "location": {
                    "type": "string",
                    "description": "Inquiry Location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Status of the Booking Success"
                }
            }
        }
    },
    {
        "name": "flight_selection_and_booking",
        "description": "Select and book flights that meet the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "departureCity": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrivalCity": {
                    "type": "string",
                    "description": "Destination city"
                },
                "arrivalDateBefore": {
                    "type": "string",
                    "description": "Required arrival time at the destination before"
                },
                "passengerName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "identityNumber": {
                    "type": "string",
                    "description": "Passenger ID number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "flight_details": {
                    "type": "string",
                    "description": "Details of the booked flight"
                }
            }
        }
    },
    {
        "name": "sort_tickets_by_price_and_time",
        "description": "Sort the list of train tickets by price and departure time, and recommend the most suitable option",
        "arguments": {
            "type": "object",
            "properties": {
                "ticket_list": {
                    "type": "string",
                    "description": "The obtained list of train tickets"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recommended_ticket": {
                    "type": "string",
                    "description": "The recommended train ticket option"
                }
            }
        }
    },
    {
        "name": "send_change_confirmation",
        "description": "Send rebooking confirmation message to passenger",
        "arguments": {
            "type": "object",
            "properties": {
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "seatPreference": {
                    "type": "string",
                    "description": "Seat preference"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "confirm_repair_cost_and_payment",
        "description": "Confirm repair costs and payment method",
        "arguments": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "string",
                    "description": "Repair request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number",
                    "description": "Repair cost"
                },
                "payment_method": {
                    "type": "string",
                    "description": "Payment method"
                }
            }
        }
    },
    {
        "name": "confirm_reschedule_and_pay",
        "description": "Confirm rescheduling information and complete payment",
        "arguments": {
            "type": "object",
            "properties": {
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "newFlightNumber": {
                    "type": "string",
                    "description": "New flight number"
                },
                "newDepartureDate": {
                    "type": "string",
                    "description": "New flight departure time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reschedule_status": {
                    "type": "string",
                    "description": "Rescheduling status"
                },
                "payment_status": {
                    "type": "string",
                    "description": "Payment status"
                }
            }
        }
    },
    {
        "name": "confirm_and_pay_fee",
        "description": "Confirm the visa application information is correct and complete the payment",
        "arguments": {
            "type": "object",
            "properties": {
                "applicantName": {
                    "type": "string",
                    "description": "Applicant's name"
                },
                "passportNumber": {
                    "type": "string",
                    "description": "Passport number"
                },
                "country": {
                    "type": "string",
                    "description": "Destination country for visa"
                },
                "applicationDate": {
                    "type": "string",
                    "description": "Application date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "paymentStatus": {
                    "type": "string",
                    "description": "Payment status"
                }
            }
        }
    },
    {
        "name": "flight_seat_selection",
        "description": "Flight Seat Selection Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight Number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure Date"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Passenger Name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "seat_number": {
                    "description": "Selected Seat Number",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_ticket_refundable",
        "description": "Check if the train ticket is within the refundable time range",
        "arguments": {
            "type": "object",
            "properties": {
                "ticketID": {
                    "type": "string",
                    "description": "Train ticket number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "refundable": {
                    "type": "boolean",
                    "description": "Whether it is refundable"
                }
            }
        }
    },
    {
        "name": "get_flight_seat_availability",
        "description": "Get the seat availability information for a specific flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "seats_available": {
                    "type": "integer",
                    "description": "Seat availability of the flight"
                }
            }
        }
    },
    {
        "name": "check_flight_availability",
        "description": "Check the seat availability of a specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date and time"
                },
                "flight": {
                    "type": "object",
                    "description": "Selected flight"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether seats are available"
                },
                "policy": {
                    "type": "string",
                    "description": "Details of the rebooking policy"
                }
            }
        }
    },
    {
        "name": "confirm_ticket_change",
        "description": "Confirm the change of ticket information and complete the payment",
        "arguments": {
            "type": "object",
            "properties": {
                "identityNumber": {
                    "type": "string",
                    "description": "Identity card number of the ticket purchaser"
                },
                "selectedTrainID": {
                    "type": "string",
                    "description": "Train ID selected for ticket change"
                },
                "originalDepartureDate": {
                    "type": "string",
                    "description": "Original departure date"
                },
                "newFlightNumber": {
                    "type": "string",
                    "description": "New flight number"
                },
                "newDepartureDate": {
                    "type": "string",
                    "description": "New departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_confirmation_status": {
                    "type": "string",
                    "description": "Ticket change confirmation status"
                },
                "confirmation": {
                    "type": "boolean",
                    "description": "Whether the ticket change is confirmed"
                },
                "cost": {
                    "type": "number",
                    "description": "Ticket change fee"
                }
            }
        }
    },
    {
        "name": "retrieve_changed_ticket_info",
        "description": "Retrieve information of the changed e-ticket",
        "arguments": {
            "type": "object",
            "properties": {
                "original_flight_number": {
                    "type": "string",
                    "description": "Original flight number"
                },
                "new_flight_number": {
                    "type": "string",
                    "description": "New flight number"
                },
                "name": {
                    "type": "string",
                    "description": "Passenger name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ticket_info": {
                    "type": "string",
                    "description": "E-ticket information"
                }
            }
        }
    },
    {
        "name": "get_ticket_cancellation_time",
        "description": "Get the latest cancellation time for each train ticket option",
        "arguments": {
            "type": "object",
            "properties": {
                "ticket_list": {
                    "type": "string",
                    "description": "The list of train tickets for which to query the cancellation time"
                },
                "identityNumber": {
                    "type": "string",
                    "description": "The identity card number of the person purchasing the ticket"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cancellation_times": {
                    "type": "string",
                    "description": "The list of the latest cancellation times for each train ticket option"
                }
            }
        }
    },
    {
        "name": "check_weather",
        "description": "Check the weather forecast for a specified date and location",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Specified date"
                },
                "location": {
                    "type": "string",
                    "description": "Weather query location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "weather_status": {
                    "type": "string",
                    "description": "Weather condition"
                },
                "temperature": {
                    "type": "string",
                    "description": "Temperature"
                },
                "precipitation": {
                    "type": "string",
                    "description": "Probability of precipitation"
                },
                "weather_info": {
                    "type": "string",
                    "description": "Weather forecast information"
                },
                "suggestions": {
                    "type": "string",
                    "description": "Suggestions based on weather conditions"
                }
            }
        }
    },
    {
        "name": "set_agenda_reminder",
        "description": "Set a reminder for a specified agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_title": {
                    "type": "string",
                    "description": "Title of the agenda"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "How much time in advance to remind"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Reminder setup status"
                }
            }
        }
    },
    {
        "name": "set_task_reminder",
        "description": "Set task reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Reminder time"
                },
                "content": {
                    "type": "string",
                    "description": "Reminder content"
                },
                "taskType": {
                    "type": "string",
                    "description": "Task type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Status of whether the reminder was set successfully"
                }
            }
        }
    },
    {
        "name": "send_weather_info",
        "description": "Send weather information to the user's email",
        "arguments": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User's email address"
                },
                "weather_info": {
                    "type": "string",
                    "description": "Weather information to be sent"
                },
                "report_format": {
                    "type": "string",
                    "description": "Format of the report, such as table, list, etc."
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Status of the information sent"
                }
            }
        }
    },
    {
        "name": "hourly_weather_forecast",
        "description": "Obtain hourly weather forecast for a specified location and date range",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location to query"
                },
                "date_range": {
                    "type": "string",
                    "description": "The date range to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "forecast_status": {
                    "type": "string",
                    "description": "Status of the weather forecast retrieval"
                },
                "hourly_data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date_time": {
                                "type": "string",
                                "description": "The date and time of the forecast"
                            },
                            "temperature": {
                                "type": "number",
                                "description": "Temperature"
                            },
                            "precipitation_probability": {
                                "type": "number",
                                "description": "Probability of precipitation"
                            },
                            "wind_speed": {
                                "type": "number",
                                "description": "Wind speed"
                            },
                            "wind_direction": {
                                "type": "string",
                                "description": "Wind direction"
                            },
                            "aqi": {
                                "type": "number",
                                "description": "Air Quality Index"
                            }
                        }
                    },
                    "description": "Hourly weather data"
                }
            }
        }
    },
    {
        "name": "check_agenda_for_date",
        "description": "Check the meeting schedule for a specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "The ID of the schedule"
                },
                "date": {
                    "type": "string",
                    "description": "The specified date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the schedule check was successful",
                    "type": "string"
                },
                "agenda": {
                    "description": "The meeting schedule for the specified date",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_other_conference_room_facilities",
        "description": "Check if other facilities in the conference room are complete",
        "arguments": {
            "type": "object",
            "properties": {
                "roomID": {
                    "type": "string",
                    "description": "Conference room number"
                },
                "city": {
                    "type": "string",
                    "description": "City where the conference room is located"
                },
                "required_facilities": {
                    "type": "string",
                    "description": "List of other required facilities"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "facilities_status": {
                    "type": "string",
                    "description": "Whether other facilities are complete"
                }
            }
        }
    },
    {
        "name": "confirm_meeting_room_booking",
        "description": "Confirm the reservation of the specified meeting room",
        "arguments": {
            "type": "object",
            "properties": {
                "room": {
                    "type": "string",
                    "description": "The meeting room to be reserved"
                },
                "start_time": {
                    "type": "string",
                    "description": "Reservation start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Reservation end time"
                },
                "attendees": {
                    "type": "number",
                    "description": "Number of attendees"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Meeting room booking status"
                }
            }
        }
    },
    {
        "name": "check_first_class_availability",
        "description": "Check the availability of first class for the specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Whether first class has available seats"
                }
            }
        }
    },
    {
        "name": "confirm_repair_capability",
        "description": "Confirm whether the service center can handle the specified appliance fault issue",
        "arguments": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string",
                    "description": "Contact information of the repair service center"
                },
                "issue": {
                    "type": "string",
                    "description": "Description of the appliance fault"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "capability_status": {
                    "type": "string",
                    "description": "Status of whether the fault can be handled"
                }
            }
        }
    },
    {
        "name": "earliest_flight_query",
        "description": "Query the earliest flight information",
        "arguments": {
            "type": "object",
            "properties": {
                "departure_city": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrival_city": {
                    "type": "string",
                    "description": "Destination city"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flight_info": {
                    "type": "string",
                    "description": "Information of the earliest departing flight"
                }
            }
        }
    },
    {
        "name": "conference_room_selection",
        "description": "Select the most suitable conference room from the queried list of conference rooms",
        "arguments": {
            "type": "object",
            "properties": {
                "conference_room_list": {
                    "type": "string",
                    "description": "The queried list of conference rooms"
                },
                "criteria": {
                    "type": "object",
                    "properties": {
                        "size": {
                            "type": "string",
                            "description": "The required size of the conference room"
                        },
                        "location": {
                            "type": "string",
                            "description": "The desired location of the conference room"
                        },
                        "facilities": {
                            "type": "string",
                            "description": "The required facilities of the conference room"
                        },
                        "price": {
                            "type": "string",
                            "description": "The acceptable price range for the conference room"
                        }
                    },
                    "required": []
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_room": {
                    "type": "string",
                    "description": "The selected conference room number"
                }
            }
        }
    },
    {
        "name": "book_and_confirm_room",
        "description": "Book a meeting room and confirm the reservation details",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The ID of the meeting"
                },
                "agenda_title": {
                    "type": "string",
                    "description": "The name of the meeting"
                },
                "location_name": {
                    "type": "string",
                    "description": "The location of the meeting room"
                },
                "date": {
                    "type": "string",
                    "description": "The date of the meeting"
                },
                "start_time": {
                    "type": "string",
                    "description": "The start time of the meeting"
                },
                "end_time": {
                    "type": "string",
                    "description": "The end time of the meeting"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_confirmation": {
                    "type": "string",
                    "description": "Booking confirmation details"
                }
            }
        }
    },
    {
        "name": "search_and_book_meeting_room",
        "description": "Search and book a meeting room that meets the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "people_count": {
                    "type": "string",
                    "description": "Estimated number of participants"
                },
                "facilities": {
                    "type": "string",
                    "description": "Required facilities"
                },
                "date": {
                    "type": "string",
                    "description": "Meeting reservation date"
                },
                "start_time": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Meeting end time"
                },
                "capacity": {
                    "type": "string",
                    "description": "Meeting room capacity requirements"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Meeting room booking status"
                },
                "room_name": {
                    "type": "string",
                    "description": "Name of the reserved meeting room"
                },
                "room_number": {
                    "type": "string",
                    "description": "Number of the reserved meeting room"
                }
            }
        }
    },
    {
        "name": "search_and_book_conference_room",
        "description": "Search and book a conference room",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The city where the conference room is located"
                },
                "startTime": {
                    "type": "string",
                    "description": "Conference start time (date+time)"
                },
                "endTime": {
                    "type": "string",
                    "description": "Conference end time (date+time)"
                },
                "min_capacity": {
                    "type": "string",
                    "description": "Minimum capacity"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Conference room booking status"
                },
                "roomID": {
                    "type": "string",
                    "description": "Booked conference room ID"
                }
            }
        }
    },
    {
        "name": "check_flight_change_policy",
        "description": "Inquire about flight change policy and possible fees",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "The flight number for which to query the change policy"
                },
                "departureDate": {
                    "type": "string",
                    "description": "The departure date of the flight"
                },
                "originalDepartureDate": {
                    "type": "string",
                    "description": "The original departure time of the flight"
                },
                "bookingName": {
                    "type": "string",
                    "description": "The name of the person who booked the ticket"
                },
                "new_flight_number": {
                    "type": "string",
                    "description": "New flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_policy": {
                    "type": "string",
                    "description": "The flight's rebooking policy"
                },
                "change_conditions": {
                    "type": "string",
                    "description": "The flight's rebooking conditions"
                },
                "change_fee": {
                    "type": "string",
                    "description": "Possible fees that may be incurred"
                }
            }
        }
    },
    {
        "name": "flight_punctuality_record",
        "description": "Query the historical punctuality record of a specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "punctuality_rate": {
                    "type": "string",
                    "description": "The historical punctuality rate of the flight"
                }
            }
        }
    },
    {
        "name": "get_flight_destination",
        "description": "Get the destination information of a specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Flight destination station"
                }
            }
        }
    },
    {
        "name": "flight_status_check",
        "description": "A tool for checking flight status",
        "arguments": {
            "type": "object",
            "properties": {
                "airportCode": {
                    "description": "Airport code",
                    "type": "string"
                },
                "flightNumber": {
                    "description": "Flight number",
                    "type": "string"
                },
                "departureDate": {
                    "description": "Departure date and time",
                    "type": "string"
                },
                "airlineName": {
                    "description": "Name of the airline",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flightStatus": {
                    "description": "Current status of the flight",
                    "type": "string"
                },
                "estimated_departure": {
                    "description": "Estimated departure time",
                    "type": "string"
                },
                "estimated_arrival": {
                    "description": "Estimated arrival time",
                    "type": "string"
                },
                "delay_record": {
                    "description": "Historical delay records of the flight",
                    "type": "string"
                },
                "special_notice": {
                    "description": "Special notices regarding the flight",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "query_flight_details",
        "description": "Query the aircraft type and current passenger load factor",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "aircraft_type": {
                    "type": "string",
                    "description": "Aircraft type"
                },
                "load_factor": {
                    "type": "string",
                    "description": "Passenger load factor"
                }
            }
        }
    },
    {
        "name": "check_change_policy",
        "description": "Check the airline's change policy, including time restrictions and fees",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "policy_status": {
                    "type": "string",
                    "description": "Change policy status"
                },
                "time_limit": {
                    "type": "string",
                    "description": "Change time restrictions"
                },
                "change_fee": {
                    "type": "string",
                    "description": "Change fee"
                }
            }
        }
    },
    {
        "name": "book_new_flight",
        "description": "Book a new flight ticket",
        "arguments": {
            "type": "object",
            "properties": {
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "newFlightNumber": {
                    "type": "string",
                    "description": "New flight number"
                },
                "newDepartureDate": {
                    "type": "string",
                    "description": "New departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "New flight ticket booking status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "flight_selection",
        "description": "Select flights that meet the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_options": {
                    "type": "array",
                    "description": "List of flight options"
                },
                "priority": {
                    "type": "object",
                    "properties": {
                        "price": {
                            "type": "string",
                            "description": "Price priority"
                        },
                        "airline": {
                            "type": "string",
                            "description": "Airline priority"
                        },
                        "flightTime": {
                            "type": "string",
                            "description": "Flight time priority"
                        }
                    },
                    "required": [
                        "price",
                        "airline",
                        "flightTime"
                    ]
                },
                "flights": {
                    "type": "array",
                    "description": "List of available flights"
                },
                "criteria": {
                    "type": "object",
                    "description": "Criteria for selecting flights, such as price and duration"
                },
                "latest_arrival_time": {
                    "type": "string",
                    "description": "Latest arrival time"
                },
                "seat_preference": {
                    "type": "string",
                    "description": "Seat preference"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_flight": {
                    "type": "object",
                    "description": "Information of the selected flight"
                }
            }
        }
    },
    {
        "name": "send_flight_info",
        "description": "Send flight information via the communication method specified by the user",
        "arguments": {
            "type": "object",
            "properties": {
                "passenger_name": {
                    "type": "string",
                    "description": "Passenger's name"
                },
                "flight_number": {
                    "type": "string",
                    "description": "New flight number"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "communication_method": {
                    "type": "string",
                    "description": "User's preferred communication method"
                },
                "flight_info": {
                    "type": "string",
                    "description": "Flight information to be sent"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Status of the information sent"
                }
            }
        }
    },
    {
        "name": "send_ticket",
        "description": "Send ticketing information to the user",
        "arguments": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User's email address"
                },
                "eTicket": {
                    "type": "string",
                    "description": "The electronic ticket to be sent"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Passenger's name"
                },
                "ticketID": {
                    "type": "string",
                    "description": "Ticket number"
                },
                "identityNumber": {
                    "type": "string",
                    "description": "Identity card number of the person purchasing the ticket"
                },
                "ticket_info": {
                    "type": "string",
                    "description": "Electronic flight ticket information"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Status of the electronic ticket being sent"
                }
            }
        }
    },
    {
        "name": "recommend_seat_type",
        "description": "Recommend the appropriate seat type based on the queried train ticket information",
        "arguments": {
            "type": "object",
            "properties": {
                "ticket_info": {
                    "type": "string",
                    "description": "The train ticket information queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recommended_seat_type": {
                    "type": "string",
                    "description": "The recommended seat type"
                }
            }
        }
    },
    {
        "name": "train_ticket_query",
        "description": "Train Ticket Booking Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "description": "Departure Time",
                    "type": "string"
                },
                "startStation": {
                    "description": "Departure Station",
                    "type": "string"
                },
                "endStation": {
                    "description": "Arrival Station",
                    "type": "string"
                },
                "confirmation_number": {
                    "description": "Booking Confirmation Number",
                    "type": "string"
                },
                "trainID": {
                    "description": "Train Number",
                    "type": "string"
                },
                "seatType": {
                    "description": "Seat Type",
                    "type": "string"
                },
                "ticketID": {
                    "description": "Train Ticket Number",
                    "type": "string"
                },
                "identityNumber": {
                    "description": "Passenger's ID Number",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ticket_status": {
                    "description": "Train Ticket Booking List",
                    "type": "string"
                },
                "order_details": {
                    "description": "Booking Order Details",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "select_best_ticket",
        "description": "Select the best train ticket from the list of tickets",
        "arguments": {
            "type": "object",
            "properties": {
                "ticket_options": {
                    "type": "string",
                    "description": "List of train ticket options queried"
                },
                "preferences": {
                    "type": "object",
                    "properties": {
                        "sleeper_type": {
                            "type": "string",
                            "description": "Preferred type of sleeper berth (upper, middle, lower)"
                        },
                        "power_socket": {
                            "type": "boolean",
                            "description": "Whether a power socket is needed"
                        },
                        "wifi": {
                            "type": "boolean",
                            "description": "Whether Wi-Fi service is needed"
                        }
                    },
                    "required": [
                        "sleeper_type"
                    ]
                },
                "criteria": {
                    "type": "string",
                    "description": "Selection criteria, such as price, time, etc."
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_ticket": {
                    "type": "string",
                    "description": "The selected best train ticket"
                },
                "sleeper_type": {
                    "type": "string",
                    "description": "The sleeper type of the selected ticket"
                },
                "power_socket": {
                    "type": "boolean",
                    "description": "Whether the selected ticket has a power socket"
                },
                "wifi": {
                    "type": "boolean",
                    "description": "Whether the selected ticket offers Wi-Fi service"
                }
            }
        }
    },
    {
        "name": "search_transfer_options",
        "description": "Search and provide transfer options back to the city center",
        "arguments": {
            "type": "object",
            "properties": {
                "preferences": {
                    "type": "object",
                    "description": "User's preference settings, such as car type, price range, etc"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "options": {
                    "type": "array",
                    "description": "A list of transfer options back to the city center"
                }
            }
        }
    },
    {
        "name": "find_next_train_time",
        "description": "Filter out the time of the next train after the specified train",
        "arguments": {
            "type": "object",
            "properties": {
                "train_times": {
                    "type": "string",
                    "description": "List of all train times"
                },
                "current_train_id": {
                    "type": "string",
                    "description": "The ID of the current train"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "next_train_time": {
                    "type": "string",
                    "description": "The time of the next train"
                }
            }
        }
    },
    {
        "name": "search_for_ticket_order",
        "description": "Search for train ticket order by ticket number",
        "arguments": {
            "type": "object",
            "properties": {
                "ticketID": {
                    "type": "string",
                    "description": "Train ticket number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_status": {
                    "type": "string",
                    "description": "Search status"
                },
                "order_details": {
                    "type": "string",
                    "description": "Order details"
                }
            }
        }
    },
    {
        "name": "online_search_tool",
        "description": "Online search tool for finding specific service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "search_query": {
                    "type": "string",
                    "description": "Search query statement"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_results": {
                    "type": "string",
                    "description": "Search results"
                }
            }
        }
    },
    {
        "name": "train_ticket_reschedule_info",
        "description": "Provides train ticket rescheduling information tool",
        "arguments": {
            "type": "object",
            "properties": {
                "newTrainID": {
                    "description": "Train number after change",
                    "type": "string"
                },
                "newDepartureTime": {
                    "description": "Departure time after change",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reschedule_steps": {
                    "description": "Description of rescheduling steps",
                    "type": "string"
                },
                "reschedule_costs": {
                    "description": "Potential costs and conditions for rescheduling",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "find_ticket_by_train_number",
        "description": "Find the train ticket ID by train number and ID number",
        "arguments": {
            "type": "object",
            "properties": {
                "trainNumber": {
                    "type": "string",
                    "description": "Train number"
                },
                "identityNumber": {
                    "type": "string",
                    "description": "Identity number of the ticket purchaser"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ticketID": {
                    "type": "string",
                    "description": "Train ticket ID"
                },
                "find_status": {
                    "type": "string",
                    "description": "Find status"
                }
            }
        }
    },
    {
        "name": "search_book",
        "description": "Search for books and return whether they are in stock",
        "arguments": {
            "type": "object",
            "properties": {
                "book_name": {
                    "type": "string",
                    "description": "The name of the book to search for"
                },
                "keyword": {
                    "type": "string",
                    "description": "Keywords for searching books"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "string",
                    "description": "Whether the book is available for borrowing"
                },
                "search_results": {
                    "description": "List of books found",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "ticket_info_query",
        "description": "Query for flight and train ticket information",
        "arguments": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Passenger's name"
                },
                "reference_number": {
                    "type": "string",
                    "description": "Booking reference number"
                },
                "identityNumber": {
                    "type": "string",
                    "description": "Ticket purchaser's ID number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "query_status": {
                    "type": "string",
                    "description": "Query status"
                },
                "ticket_level": {
                    "type": "string",
                    "description": "Flight ticket class"
                },
                "seat_info": {
                    "type": "string",
                    "description": "Seat information"
                }
            }
        }
    },
    {
        "name": "train_travel_time_query",
        "description": "Query the travel time required for a train journey",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "type": "string",
                    "description": "Departure date and time"
                },
                "startStation": {
                    "type": "string",
                    "description": "Departure station"
                },
                "endStation": {
                    "type": "string",
                    "description": "Arrival station"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "travel_time": {
                    "type": "string",
                    "description": "Estimated travel time from the departure station to the arrival station"
                }
            }
        }
    },
    {
        "name": "train_ticket_changing",
        "description": "Train Ticket Rescheduling Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "originalTicketID": {
                    "type": "string",
                    "description": "The train ticket number that needs to be rescheduled"
                },
                "identityNumber": {
                    "type": "string",
                    "description": "The identity card number of the ticket purchaser"
                },
                "newDepartureDate": {
                    "type": "string",
                    "description": "The new departure date after changing"
                },
                "newTrainID": {
                    "type": "string",
                    "description": "The new train number after changing"
                },
                "newStartStation": {
                    "type": "string",
                    "description": "The new departure station after changing"
                },
                "newEndStation": {
                    "type": "string",
                    "description": "The new arrival station after changing"
                },
                "newSeatType": {
                    "type": "string",
                    "description": "The new seat type after changing"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_status": {
                    "type": "string",
                    "description": "Train ticket rescheduling status"
                }
            }
        }
    },
    {
        "name": "ticket_change_confirmation",
        "description": "Confirm train ticket change and complete payment",
        "arguments": {
            "type": "object",
            "properties": {
                "identityNumber": {
                    "type": "string",
                    "description": "Ticket purchaser's ID number"
                },
                "originalTicketID": {
                    "type": "string",
                    "description": "Original train ticket ID"
                },
                "newTrainID": {
                    "type": "string",
                    "description": "New train ticket ID"
                },
                "newDepartureDate": {
                    "type": "string",
                    "description": "New departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Change confirmation status"
                },
                "payment_status": {
                    "type": "string",
                    "description": "Payment status"
                },
                "new_ticket_info": {
                    "type": "string",
                    "description": "New train ticket information"
                }
            }
        }
    },
    {
        "name": "get_seat_type_by_ticket_number",
        "description": "Query seat type by train ticket number",
        "arguments": {
            "type": "object",
            "properties": {
                "ticket_number": {
                    "type": "string",
                    "description": "User's train ticket number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "seat_type": {
                    "type": "string",
                    "description": "Seat type of the train ticket"
                }
            }
        }
    },
    {
        "name": "select_and_change_ticket",
        "description": "Select the appropriate train schedule and perform the change ticket operation",
        "arguments": {
            "type": "object",
            "properties": {
                "identityNumber": {
                    "type": "string",
                    "description": "Identity card number of the ticket purchaser"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "startStation": {
                    "type": "string",
                    "description": "Departure station"
                },
                "endStation": {
                    "type": "string",
                    "description": "Arrival station"
                },
                "seatType": {
                    "type": "string",
                    "description": "Seat type (such as hard seat, soft seat, sleeper)"
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "change_status": {
                        "type": "string",
                        "description": "Train ticket change status"
                    }
                }
            }
        }
    },
    {
        "name": "confirm_payment_difference",
        "description": "Confirm and pay the difference for the train ticket change",
        "arguments": {
            "type": "object",
            "properties": {
                "identityNumber": {
                    "type": "string",
                    "description": "Identity card number of the ticket purchaser"
                },
                "originalTicketID": {
                    "type": "string",
                    "description": "Original train ticket number"
                },
                "newDepartureDate": {
                    "type": "string",
                    "description": "New departure date"
                },
                "newSeatType": {
                    "type": "string",
                    "description": "New seat type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_status": {
                    "type": "string",
                    "description": "Status of the payment difference"
                }
            }
        }
    },
    {
        "name": "search_information",
        "description": "Search for information on a specific topic",
        "arguments": {
            "type": "object",
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "The topic being searched"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_status": {
                    "description": "Whether the search was successful",
                    "type": "string"
                },
                "information": {
                    "description": "The content of the information obtained",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "select_ticket",
        "description": "Select train tickets that meet the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "tickets": {
                    "type": "string",
                    "description": "List of queried train tickets"
                },
                "seatType": {
                    "type": "string",
                    "description": "Required seat type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_ticket": {
                    "type": "string",
                    "description": "Filtered train ticket information"
                },
                "seat_type": {
                    "description": "Selected seat type",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "train_ticket_change_confirmation",
        "description": "Confirm train ticket change information and fees",
        "arguments": {
            "type": "object",
            "properties": {
                "originalTicketID": {
                    "type": "string",
                    "description": "Original ticket number"
                },
                "newDepartureDate": {
                    "type": "string",
                    "description": "New departure date"
                },
                "newTrainID": {
                    "type": "string",
                    "description": "New train number"
                },
                "newSeatType": {
                    "type": "string",
                    "description": "New seat type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Change confirmation status"
                },
                "fee": {
                    "type": "number",
                    "description": "Change fee"
                }
            }
        }
    },
    {
        "name": "airline_ticket_search",
        "description": "Flight Ticket Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination City",
                    "type": "string"
                },
                "origin": {
                    "description": "Departure City",
                    "type": "string"
                },
                "departureDate": {
                    "description": "Departure Date and Time",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "description": "Flight Number",
                    "type": "string"
                },
                "airline": {
                    "description": "Airline",
                    "type": "string"
                },
                "price": {
                    "description": "Ticket Price",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "filter_trains_by_time",
        "description": "Filter train schedules based on a specified time range",
        "arguments": {
            "type": "object",
            "properties": {
                "start_time": {
                    "type": "string",
                    "description": "Start time for filtering"
                },
                "end_time": {
                    "type": "string",
                    "description": "End time for filtering"
                },
                "trains_list": {
                    "type": "string",
                    "description": "List of train numbers to be filtered"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_trains": {
                    "type": "string",
                    "description": "List of filtered train schedules"
                }
            }
        }
    },
    {
        "name": "get_ticket_details",
        "description": "Get detailed information of the flight ticket, including seat number, boarding time, boarding gate, etc",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status of the flight ticket"
                },
                "seat_number": {
                    "type": "string",
                    "description": "Seat number"
                },
                "boarding_time": {
                    "type": "string",
                    "description": "Boarding time"
                },
                "boarding_gate": {
                    "type": "string",
                    "description": "Boarding gate"
                }
            }
        }
    },
    {
        "name": "book_train_ticket",
        "description": "Book train tickets according to the provided passenger information and train ticket details",
        "arguments": {
            "type": "object",
            "properties": {
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "from_city": {
                    "type": "string",
                    "description": "Departure city"
                },
                "to_city": {
                    "type": "string",
                    "description": "Destination city"
                },
                "passenger_name": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "passenger_id": {
                    "type": "string",
                    "description": "Passenger ID number"
                },
                "train_ticket": {
                    "type": "string",
                    "description": "Selected train ticket"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                }
            }
        }
    },
    {
        "name": "set_calendar_event_reminder",
        "description": "Set calendar event reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Reminder date"
                },
                "start_time": {
                    "type": "string",
                    "description": "Event start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Event end time"
                },
                "event_id": {
                    "type": "string",
                    "description": "Event ID"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "Reminder time"
                },
                "event_name": {
                    "type": "string",
                    "description": "Event name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "event_creation_status": {
                    "type": "string",
                    "description": "Event creation status"
                },
                "outcome": {
                    "description": "Whether the reminder was successfully set",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_flight_details",
        "description": "Check the remaining seat availability and user ratings of the flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_list": {
                    "type": "string",
                    "description": "List of flights to be checked"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "details_status": {
                    "type": "string",
                    "description": "Status of the flight details check"
                }
            }
        }
    },
    {
        "name": "seat_availability_check",
        "description": "Check the availability of specific seat types for a designated train",
        "arguments": {
            "type": "object",
            "properties": {
                "trainID": {
                    "type": "string",
                    "description": "Train number"
                },
                "startStation": {
                    "type": "string",
                    "description": "Departure station"
                },
                "endStation": {
                    "type": "string",
                    "description": "Arrival station"
                },
                "seatType": {
                    "type": "string",
                    "description": "Seat type"
                },
                "maxDistanceFromDiningCar": {
                    "type": "integer",
                    "description": "Maximum number of carriages away from the dining car"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Availability status"
                }
            }
        }
    },
    {
        "name": "tourist_souvenir_search",
        "description": "A tool for querying tourist souvenirs",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Tourist destination",
                    "type": "string"
                },
                "tourist": {
                    "description": "Tourist's name",
                    "type": "string"
                },
                "visit_date": {
                    "description": "Visit date",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "souvenir": {
                    "description": "Recommended tourist souvenir",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "business_travel_standard_search",
        "description": "Business Travel Standard Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "department_or_level": {
                    "description": "Department or Level",
                    "type": "string"
                },
                "destination_city": {
                    "description": "Destination City",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "accommodation_standard": {
                    "description": "Accommodation Standard",
                    "type": "number"
                },
                "meal_subsidy_standard": {
                    "description": "Meal Subsidy Standard",
                    "type": "number"
                },
                "transportation_standard": {
                    "description": "Transportation Standard",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "tour_group_search",
        "description": "Search for tour groups based on destination, departure date, and budget range",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "departure_date": {
                    "description": "Departure Date",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                },
                "return_date": {
                    "description": "Return Date",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                },
                "budget": {
                    "description": "Budget",
                    "type": "integer"
                },
                "agencyName": {
                    "description": "Travel Agency Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "tour_groups": {
                    "description": "List of tour groups that meet the criteria",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "price": {
                                "type": "integer"
                            },
                            "duration": {
                                "type": "integer"
                            },
                            "description": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "travel_assistant",
        "description": "Provides practical information for users traveling in different countries or regions, including weather forecasts, local languages, currency exchange rates, and recommended itineraries",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination of the trip",
                    "type": "string",
                    "example": "Paris"
                },
                "departure_date": {
                    "description": "Departure date",
                    "type": "string",
                    "format": "date",
                    "example": "2022-07-01"
                },
                "return_date": {
                    "description": "Return date",
                    "type": "string",
                    "format": "date",
                    "example": "2022-07-10"
                },
                "language": {
                    "description": "Language used",
                    "type": "string",
                    "enum": [
                        "Chinese",
                        "English",
                        "French",
                        "Japanese"
                    ]
                },
                "currency": {
                    "description": "Currency used",
                    "type": "string",
                    "enum": [
                        "CNY",
                        "USD",
                        "EUR",
                        "JPY"
                    ]
                },
                "itinerary": {
                    "description": "Itinerary arrangement",
                    "type": "boolean"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "weather_forecast": {
                    "description": "Weather forecast",
                    "type": "string"
                },
                "local_language": {
                    "description": "Local language",
                    "type": "string"
                },
                "currency_exchange_rate": {
                    "description": "Currency exchange rate",
                    "type": "string"
                },
                "recommended_itinerary": {
                    "description": "Recommended itinerary",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "travel_route_search",
        "description": "Independent Travel Route Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "departureDate": {
                    "description": "Departure Date",
                    "type": "string",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$"
                },
                "returnDate": {
                    "description": "Return Date",
                    "type": "string",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "travel_route": {
                    "description": "Travel Route",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "tour_guide_service",
        "description": "Professional Tour Guide Service Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "date": {
                    "description": "Travel Date",
                    "type": "string",
                    "format": "date-time"
                },
                "language": {
                    "description": "Required Guide Language",
                    "type": "string"
                },
                "duration": {
                    "description": "Required Guide Duration",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "guide_info": {
                    "description": "Guide Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "book_banquet_hall",
        "description": "Book a banquet hall",
        "arguments": {
            "type": "object",
            "properties": {
                "hall_name": {
                    "type": "string",
                    "description": "Banquet hall name"
                },
                "date": {
                    "type": "string",
                    "description": "Reservation date"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time"
                },
                "number_of_people": {
                    "type": "integer",
                    "description": "Number of people"
                },
                "coordinates": {
                    "type": "string",
                    "description": "Geographic coordinates"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                }
            }
        }
    },
    {
        "name": "confirm_inclusion",
        "description": "Confirm the items included in the service quotation",
        "arguments": {
            "type": "object",
            "properties": {
                "inclusions": {
                    "type": "array",
                    "description": "List of included items to be confirmed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation": {
                    "type": "array",
                    "description": "Confirmation results for whether each item is included in the service quotation"
                }
            }
        }
    },
    {
        "name": "outward_reception_approval",
        "description": "External Reception Approval Process Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "appointment_time": {
                    "description": "Appointment Time",
                    "type": "string",
                    "format": "date-time"
                },
                "visitors": {
                    "description": "Visitors",
                    "type": "string"
                },
                "visitor_unit": {
                    "description": "Visitor's Unit",
                    "type": "string"
                },
                "visited_person": {
                    "description": "Visited Person",
                    "type": "string"
                },
                "visited_department": {
                    "description": "Visited Department",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "approval_status": {
                    "description": "Approval Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "travel_agency_search",
        "description": "Travel Agency Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "departureDate": {
                    "description": "Departure Date",
                    "type": "string"
                },
                "returnDate": {
                    "description": "Return Date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "agency_info": {
                    "description": "Travel Agency Information",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "business_trip_ticket_reservation",
        "description": "For business trip flight booking",
        "arguments": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the person on the business trip",
                    "type": "string"
                },
                "identityNumber": {
                    "description": "Identity card number of the person on the business trip",
                    "type": "string"
                },
                "departureTime": {
                    "description": "Scheduled departure time",
                    "type": "string"
                },
                "departureLocation": {
                    "description": "Departure location",
                    "type": "string"
                },
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "class": {
                    "description": "Cabin class",
                    "type": "string"
                },
                "flightNumber": {
                    "description": "Flight number",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ticket_reservation_status": {
                    "description": "Ticket reservation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "search_tour_groups",
        "description": "Search for tour groups going to a specified destination based on a provided list of dates",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Travel destination"
                },
                "weekend_dates": {
                    "type": "array",
                    "description": "List of weekend dates",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "tour_groups": {
                    "description": "List of tour groups that meet the criteria",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "groupID": {
                                "type": "string",
                                "description": "Tour group ID"
                            },
                            "departureDate": {
                                "type": "string",
                                "description": "Departure date"
                            },
                            "returnDate": {
                                "type": "string",
                                "description": "Return date"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "search_tour_options",
        "description": "Search for local tour projects that meet specific criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "date": {
                    "type": "string",
                    "description": "Travel Date"
                },
                "budget": {
                    "type": "integer",
                    "description": "Budget Range"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room Type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "options": {
                    "type": "array",
                    "description": "List of local tour projects that meet the criteria"
                }
            }
        }
    },
    {
        "name": "submit_booking_request",
        "description": "Submit travel booking request",
        "arguments": {
            "type": "object",
            "properties": {
                "guide_info": {
                    "type": "string",
                    "description": "Selected guide information"
                },
                "user_name": {
                    "type": "string",
                    "description": "User's name"
                },
                "contact": {
                    "type": "string",
                    "description": "User's contact information"
                },
                "start_time": {
                    "type": "string",
                    "description": "Service start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Service end time"
                },
                "user_info": {
                    "type": "object",
                    "description": "User's personal information",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "id_number": {
                            "type": "string"
                        },
                        "contact": {
                            "type": "string"
                        }
                    }
                },
                "preferences": {
                    "type": "object",
                    "description": "User's travel preferences",
                    "properties": {
                        "seat_preference": {
                            "type": "string"
                        },
                        "meal_preference": {
                            "type": "string"
                        }
                    }
                },
                "package_details": {
                    "type": "string",
                    "description": "Travel package details"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_info": {
                    "description": "Return information of the booking request",
                    "type": "string"
                },
                "booking_status": {
                    "type": "string",
                    "description": "Status of the booking request"
                }
            }
        }
    },
    {
        "name": "travel_insurance_search",
        "description": "Travel Insurance Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "duration": {
                    "description": "Number of Travel Days",
                    "type": "integer"
                },
                "age": {
                    "description": "Traveler's Age",
                    "type": "integer"
                },
                "start_date": {
                    "description": "Departure Date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "insurance_plan": {
                    "description": "Recommended Travel Insurance Plan",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "tour_guide",
        "description": "Tour Guide Service Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "duration": {
                    "description": "Duration of the Trip",
                    "type": "string"
                },
                "language": {
                    "description": "Guide Language",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "guide_info": {
                    "description": "Guide Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_tour_group_details_by_name",
        "description": "Get the detailed itinerary of a tour group by its name",
        "arguments": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string",
                    "description": "The name of the tour group"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "The detailed itinerary of the tour group",
                    "type": "string"
                },
                "contact": {
                    "description": "The contact information of the tour group",
                    "type": "string"
                },
                "booking_guide": {
                    "description": "The booking guide for the tour group",
                    "type": "string"
                }
            },
            "required": [
                "details",
                "contact",
                "booking_guide"
            ]
        }
    },
    {
        "name": "travel_backpack_planner",
        "description": "Travel Backpack Planning Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "duration": {
                    "description": "Duration of the trip, in days",
                    "type": "integer"
                },
                "season": {
                    "description": "Travel Season",
                    "type": "string",
                    "enum": [
                        "Spring",
                        "Summer",
                        "Autumn",
                        "Winter"
                    ]
                },
                "activities": {
                    "description": "Planned activities, such as hiking, camping, photography, etc.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "backpack_items": {
                    "description": "Recommended backpack item list based on travel destination, duration, season, and activities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "travel_plan_maker",
        "description": "Travel Itinerary Planning Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "start_date": {
                    "type": "string",
                    "description": "Travel Start Date"
                },
                "end_date": {
                    "type": "string",
                    "description": "Travel End Date"
                },
                "destination": {
                    "type": "string",
                    "description": "Travel Destination"
                },
                "weather_forecast": {
                    "type": "array",
                    "description": "Weather Forecast Data",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date": {
                                "type": "string",
                                "format": "date"
                            },
                            "weather": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "date",
                            "weather"
                        ]
                    }
                },
                "preferences": {
                    "type": "object",
                    "properties": {
                        "indoor_activities": {
                            "type": "array",
                            "description": "List of Indoor Activities",
                            "items": {
                                "type": "string"
                            }
                        },
                        "outdoor_activities": {
                            "type": "array",
                            "description": "List of Outdoor Activities",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "required": [
                        "indoor_activities",
                        "outdoor_activities"
                    ]
                },
                "budget": {
                    "description": "Budget Amount",
                    "type": "integer"
                },
                "interests": {
                    "description": "Travel Interests, such as gourmet food, historical sites, natural scenery, etc.",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "itinerary": {
                    "description": "Detailed Travel Itinerary",
                    "type": "string"
                },
                "travel_plan": {
                    "description": "Generated Travel Plan",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "submit_insurance_application",
        "description": "Submit travel insurance application form",
        "arguments": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "User name"
                },
                "id_number": {
                    "type": "string",
                    "description": "User ID number"
                },
                "insurance_plan": {
                    "type": "string",
                    "description": "Selected insurance plan"
                },
                "start_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "destination": {
                    "type": "string",
                    "description": "Travel destination"
                },
                "duration": {
                    "type": "integer",
                    "description": "Insurance duration"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "application_status": {
                    "type": "string",
                    "description": "Whether the application was successfully submitted"
                }
            }
        }
    },
    {
        "name": "check_insurance_coverage",
        "description": "Check if the insurance in the car rental order covers the entire rental period",
        "arguments": {
            "type": "object",
            "properties": {
                "order_details": {
                    "type": "string",
                    "description": "Car rental order details"
                },
                "start_date": {
                    "type": "string",
                    "description": "Car rental start date (date+time)"
                },
                "end_date": {
                    "type": "string",
                    "description": "Car rental end date (date+time)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "coverage_status": {
                    "type": "string",
                    "description": "Insurance coverage status"
                }
            }
        }
    },
    {
        "name": "travel_camera_info",
        "description": "Travel Camera Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "cameraBrand": {
                    "description": "Camera Brand",
                    "type": "string"
                },
                "model": {
                    "description": "Model",
                    "type": "string"
                },
                "location": {
                    "description": "Travel Location",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "camera_info": {
                    "description": "Detailed Camera Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "execute_sell",
        "description": "Execute sell operation",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "User account ID",
                    "type": "string"
                },
                "amount": {
                    "description": "Sell amount",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sell_status": {
                    "description": "Whether the sell operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "transportation_booking",
        "description": "Arrange and book transportation",
        "arguments": {
            "type": "object",
            "properties": {
                "departure_city": {
                    "type": "string",
                    "description": "Departure city"
                },
                "destination_city": {
                    "type": "string",
                    "description": "Destination city"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "return_date": {
                    "type": "string",
                    "description": "Return date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_confirmation": {
                    "type": "string",
                    "description": "Transportation booking confirmation"
                },
                "booking_details": {
                    "type": "array",
                    "description": "Booking details"
                },
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                }
            }
        }
    },
    {
        "name": "execute_event_on_day",
        "description": "Execute on the day of the event",
        "arguments": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string",
                    "description": "Event type"
                },
                "location": {
                    "type": "string",
                    "description": "Event location"
                },
                "date": {
                    "type": "string",
                    "description": "Event date",
                    "format": "date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "execution_status": {
                    "type": "string",
                    "description": "Event execution status"
                }
            }
        }
    },
    {
        "name": "route_planning",
        "description": "Traffic Route Planning Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "start": {
                    "type": "string",
                    "description": "Starting Point Name"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination Name"
                },
                "travel_mode": {
                    "type": "string",
                    "description": "Mode of Travel"
                },
                "startPoint": {
                    "description": "Starting point, must be valid latitude and longitude coordinates",
                    "type": "string",
                    "format": "coordinate",
                    "example": "39.9042,116.4074"
                },
                "endPoint": {
                    "description": "End point, must be valid latitude and longitude coordinates",
                    "type": "string",
                    "format": "coordinate",
                    "example": "31.2304,121.4737"
                },
                "departureTime": {
                    "description": "Departure time, must be a valid date and in the future",
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-05-31T13:00:00Z"
                },
                "avoidHighways": {
                    "description": "Whether to avoid highways, can only be true or false",
                    "type": "boolean",
                    "example": false
                },
                "avoidTolls": {
                    "description": "Whether to avoid toll roads, can only be true or false",
                    "type": "boolean"
                },
                "preferGreenTravel": {
                    "description": "Whether to prefer environmentally friendly modes of travel, can only be true or false",
                    "type": "boolean"
                },
                "safety_distance": {
                    "type": "string",
                    "description": "Safety distance, in meters"
                },
                "speed": {
                    "type": "string",
                    "description": "Estimated speed, in km/h"
                },
                "weather": {
                    "type": "string",
                    "description": "Weather conditions"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "route": {
                    "type": "string",
                    "description": "Route Guidance"
                },
                "status": {
                    "type": "string",
                    "description": "Route Planning Status"
                }
            }
        }
    },
    {
        "name": "car_rental_booking",
        "description": "Car Rental Booking Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "carType": {
                    "description": "Vehicle Type",
                    "type": "string"
                },
                "rentalPeriod": {
                    "description": "Rental Period",
                    "type": "integer"
                },
                "pickupDate": {
                    "description": "Pick-up Date",
                    "type": "string"
                },
                "location": {
                    "description": "Pick-up Location",
                    "type": "string"
                },
                "startDate": {
                    "description": "Start Date of Car Rental (Date + Time)",
                    "type": "string"
                },
                "endDate": {
                    "description": "End Date of Car Rental (Date + Time)",
                    "type": "string"
                },
                "carID": {
                    "description": "Car ID",
                    "type": "string"
                },
                "city": {
                    "description": "Pick-up City",
                    "type": "string"
                },
                "dropOffCity": {
                    "description": "Drop-off City",
                    "type": "string"
                },
                "contactInfo": {
                    "description": "Customer Contact Information",
                    "type": "string"
                },
                "customerName": {
                    "description": "Customer Name",
                    "type": "string"
                },
                "contact": {
                    "description": "Customer Contact Method",
                    "type": "string"
                },
                "driverLicense": {
                    "description": "Customer Driver's License Information",
                    "type": "string"
                },
                "carModel": {
                    "description": "Car Model",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "totalCost": {
                    "description": "Total Rental Cost",
                    "type": "number"
                },
                "booking_status": {
                    "description": "Car Rental Booking Status",
                    "type": "string"
                },
                "price": {
                    "description": "Car Rental Price",
                    "type": "string"
                },
                "confirmation_status": {
                    "description": "Booking Confirmation Status",
                    "type": "string"
                },
                "contract": {
                    "description": "Rental Contract Information",
                    "type": "string"
                },
                "pickup_info": {
                    "description": "Vehicle Pickup Information",
                    "type": "string"
                },
                "rental_company": {
                    "description": "Car Rental Company Name",
                    "type": "string"
                },
                "car_model": {
                    "description": "Vehicle Model",
                    "type": "string"
                },
                "confirmation_info": {
                    "description": "Booking Confirmation Information",
                    "type": "string"
                },
                "rental_confirmation": {
                    "description": "Rental Confirmation",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "fill_date_sequence",
        "description": "Fill an increasing date sequence in a specific column of the designated worksheet starting from a specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "spreadsheet_path": {
                    "type": "string",
                    "description": "The path of the spreadsheet file"
                },
                "sheet_name": {
                    "type": "string",
                    "description": "The name of the worksheet to fill with the date sequence"
                },
                "column": {
                    "type": "string",
                    "description": "The column to fill with the date sequence"
                },
                "start_date": {
                    "type": "string",
                    "description": "The start date of the date sequence"
                },
                "duration_days": {
                    "type": "integer",
                    "description": "The number of days the date sequence lasts"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the date sequence filling operation was successful"
                }
            }
        }
    },
    {
        "name": "check_refund_status",
        "description": "Check the refund status after canceling the flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date and time"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "refund_status": {
                    "type": "string",
                    "description": "Refund status"
                },
                "refund_details": {
                    "type": "string",
                    "description": "Refund details"
                }
            }
        }
    },
    {
        "name": "search_and_compare_car_rental_services",
        "description": "Online search and compare prices and terms of different car rental services",
        "arguments": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "description": "Car Brand"
                },
                "model": {
                    "type": "string",
                    "description": "Car Model"
                },
                "city": {
                    "type": "string",
                    "description": "City"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_options": {
                    "type": "string",
                    "description": "Available car rental service options"
                }
            }
        }
    },
    {
        "name": "send_confirmation_message",
        "description": "Send appointment confirmation message to user",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "User's contact information"
                },
                "message": {
                    "type": "string",
                    "description": "Content of the confirmation message to be sent"
                },
                "user_id": {
                    "type": "string",
                    "description": "User's ID"
                },
                "user_name": {
                    "type": "string",
                    "description": "User's name"
                },
                "request_id": {
                    "type": "string",
                    "description": "Maintenance request number"
                },
                "method": {
                    "type": "string",
                    "description": "Method of sending confirmation message, such as SMS, email, or app notification"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Message sending status",
                    "type": "string"
                },
                "confirmation_status": {
                    "type": "boolean",
                    "description": "Whether the sending was successful"
                }
            }
        }
    },
    {
        "name": "filter_tour_groups_with_services",
        "description": "Filter out tour groups that include specific catering and other services",
        "arguments": {
            "type": "object",
            "properties": {
                "tour_groups": {
                    "type": "array",
                    "description": "List of tour groups to be filtered"
                },
                "services": {
                    "type": "string",
                    "description": "List of required services, separated by commas"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_tour_groups": {
                    "type": "array",
                    "description": "List of filtered tour groups"
                }
            }
        }
    },
    {
        "name": "combined_ticket_search",
        "description": "Query information on combined tickets or package tickets for multiple attractions",
        "arguments": {
            "type": "object",
            "properties": {
                "scenicSpotNames": {
                    "type": "array",
                    "description": "List of names of attractions to query",
                    "items": {
                        "type": "string"
                    }
                },
                "visitDate": {
                    "type": "string",
                    "description": "Visit date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "combined_ticket_info": {
                    "description": "Combined or package ticket information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "official_ticket_platform_search",
        "description": "Search for official ticketing platform and ticket purchase process guide link",
        "arguments": {
            "type": "object",
            "properties": {
                "scenicSpotName": {
                    "type": "string",
                    "description": "Scenic spot name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "platform_name": {
                    "type": "string",
                    "description": "Official ticketing platform name"
                },
                "guide_link": {
                    "type": "string",
                    "description": "Ticket purchase process guide link"
                }
            }
        }
    },
    {
        "name": "generate_train_ticket_booking_link",
        "description": "Generate official high-speed train ticket booking link",
        "arguments": {
            "type": "object",
            "properties": {
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "departure_time": {
                    "type": "string",
                    "description": "Departure time"
                },
                "departure_city": {
                    "type": "string",
                    "description": "Departure city"
                },
                "destination_city": {
                    "type": "string",
                    "description": "Destination city"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_link": {
                    "type": "string",
                    "description": "High-speed train ticket booking link"
                }
            }
        }
    },
    {
        "name": "cruise_ticket_search",
        "description": "Cruise Ticket Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "departure_date": {
                    "description": "Departure Date",
                    "type": "string"
                },
                "passenger_count": {
                    "description": "Number of Passengers",
                    "type": "integer"
                },
                "cruise_line": {
                    "description": "Cruise Line",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cruise_name": {
                    "description": "Name of the Cruise",
                    "type": "string"
                },
                "itinerary": {
                    "description": "Itinerary",
                    "type": "string"
                },
                "price": {
                    "description": "Price",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "theme_park_ticket_search",
        "description": "Theme Park Ticket Price Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Visit Date",
                    "type": "string"
                },
                "parkName": {
                    "description": "Name of the Theme Park",
                    "type": "string"
                },
                "visitorAge": {
                    "description": "Visitor's Age",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ticket_price": {
                    "description": "Theme Park Ticket Price",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "book_ticket",
        "description": "Complete the ticket booking process",
        "arguments": {
            "type": "object",
            "properties": {
                "attractions": {
                    "type": "string",
                    "description": "Attractions to book"
                },
                "visit_dates": {
                    "type": "string",
                    "description": "Visit dates"
                },
                "date": {
                    "type": "string",
                    "description": "Booking date"
                },
                "activity": {
                    "type": "string",
                    "description": "Activity name"
                },
                "visitor_name": {
                    "type": "string",
                    "description": "Visitor's name"
                },
                "contactInfo": {
                    "type": "string",
                    "description": "Customer contact information"
                },
                "ticketType": {
                    "type": "string",
                    "description": "Ticket type"
                },
                "travel_mode": {
                    "type": "string",
                    "description": "Mode of transportation"
                },
                "departure": {
                    "type": "string",
                    "description": "Place of departure"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "travel_date": {
                    "type": "string",
                    "description": "Travel date"
                },
                "customerInfo": {
                    "type": "object",
                    "description": "Booker's information",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Booker's name"
                        },
                        "phone": {
                            "type": "string",
                            "description": "Booker's phone number"
                        },
                        "email": {
                            "type": "string",
                            "description": "Booker's email address"
                        }
                    },
                    "required": [
                        "name",
                        "phone",
                        "email"
                    ]
                },
                "event": {
                    "type": "string",
                    "description": "Event name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Ticket booking status"
                },
                "booking_details": {
                    "type": "array",
                    "description": "Booking details"
                },
                "tickets_confirmation": {
                    "type": "string",
                    "description": "Tickets booking confirmation information"
                },
                "booking_reference": {
                    "type": "string",
                    "description": "Booking reference information"
                }
            }
        }
    },
    {
        "name": "souvenir_purchase",
        "description": "Tourist Souvenir Purchase Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "souvenir": {
                    "description": "Souvenir Name",
                    "type": "string"
                },
                "number": {
                    "description": "Purchase Quantity",
                    "type": "integer"
                },
                "date": {
                    "description": "Purchase Date",
                    "type": "string"
                },
                "location": {
                    "description": "Purchase Location",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "total_cost": {
                    "description": "Total Purchase Cost",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "souvenir_recommender",
        "description": "Travel Souvenir Recommendation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "theme": {
                    "description": "Travel Theme, such as history, culture, cuisine, etc.",
                    "type": "string"
                },
                "budget": {
                    "description": "Budget for Souvenir Purchases",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "souvenir": {
                    "description": "Recommended Souvenir Name",
                    "type": "string"
                },
                "price": {
                    "description": "Souvenir Price",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "schedule_delivery",
        "description": "Arrange courier delivery service for a specific date",
        "arguments": {
            "type": "object",
            "properties": {
                "souvenir": {
                    "type": "string",
                    "description": "Name of the souvenir to be delivered"
                },
                "delivery_date": {
                    "type": "string",
                    "description": "Delivery date"
                },
                "recipient_address": {
                    "type": "string",
                    "description": "Recipient's address"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "delivery_status": {
                    "type": "string",
                    "description": "Delivery service reservation status"
                }
            }
        }
    },
    {
        "name": "set_travel_reminder",
        "description": "Set travel reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Reminder title"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "Reminder time"
                },
                "reminder_content": {
                    "description": "Reminder content",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Reminder setting status"
                }
            }
        }
    },
    {
        "name": "travel_journal",
        "description": "Travel Journal Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "date": {
                    "description": "Travel Date",
                    "type": "string",
                    "format": "date-time"
                },
                "diary": {
                    "description": "Diary Content",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "journalId": {
                    "description": "Journal Unique Identifier",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "tourist_souvenir_creator",
        "description": "Tourist Souvenir Creation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "date_of_visit": {
                    "description": "Date of Visit",
                    "type": "string"
                },
                "photo": {
                    "description": "Travel Photo",
                    "type": "string",
                    "contentMediaType": "image/*"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "souvenir": {
                    "description": "Generated Travel Souvenir",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "compare_repairs",
        "description": "Compare the reviews and quotes of different repair service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "provider_list": {
                    "description": "List of home appliance repair service providers",
                    "type": "array"
                },
                "quote_data": {
                    "type": "array",
                    "description": "The repair quotes data to be compared"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sorted_provider_list": {
                    "description": "List of home appliance repair service providers after comparison",
                    "type": "array"
                },
                "quote_comparison": {
                    "type": "array",
                    "description": "Comparison results of repair quotes"
                },
                "selected_provider": {
                    "type": "object",
                    "description": "Information of the selected repair service provider"
                }
            }
        }
    },
    {
        "name": "car_inventory_check",
        "description": "Confirm the vehicle inventory status of a specific car model in a specific city within a designated date range",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "start_date": {
                    "type": "string",
                    "description": "Start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date"
                },
                "car_model": {
                    "type": "string",
                    "description": "Car model"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "inventory_status": {
                    "type": "string",
                    "description": "Inventory status"
                }
            }
        }
    },
    {
        "name": "car_rental_changing",
        "description": "Car Rental Reservation Modification Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "originalStartDate": {
                    "description": "The original car rental start date (date + time) that needs to be changed",
                    "type": "string"
                },
                "originalEndDate": {
                    "description": "The original car rental end date (date + time) that needs to be changed",
                    "type": "string"
                },
                "originalCarID": {
                    "description": "The car ID that needs to be changed",
                    "type": "string"
                },
                "originalCity": {
                    "description": "The city where the car was originally picked up that needs to be changed",
                    "type": "string"
                },
                "newStartDate": {
                    "description": "The new car rental start date (date + time) after change. If not provided, the original start date remains unchanged.",
                    "type": "string"
                },
                "newEndDate": {
                    "description": "The new car rental end date (date + time) after change. If not provided, the original end date remains unchanged.",
                    "type": "string"
                },
                "newCarID": {
                    "description": "The new car ID after change. If not provided, the original car ID remains unchanged.",
                    "type": "string"
                },
                "newCity": {
                    "description": "The city for picking up the car after change. If not provided, the original city remains unchanged.",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Car rental modification status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "car_rental_confirmation",
        "description": "Retrieve and send car rental booking confirmation information",
        "arguments": {
            "type": "object",
            "properties": {
                "booking_reference": {
                    "type": "string",
                    "description": "Booking reference number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Booking confirmation status"
                },
                "confirmation_details": {
                    "type": "string",
                    "description": "Booking confirmation details"
                }
            }
        }
    },
    {
        "name": "weather_forecast_collector",
        "description": "Collect and organize weather forecast information for a specified location and date range",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location for which to query the weather"
                },
                "start_date": {
                    "type": "string",
                    "description": "The start date for the weather forecast query"
                },
                "end_date": {
                    "type": "string",
                    "description": "The end date for the weather forecast query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "weather_data": {
                    "type": "array",
                    "description": "List of collected weather data"
                }
            }
        }
    },
    {
        "name": "search_car_rental_services",
        "description": "Search for specific types of car rental services in a designated city",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "car_model": {
                    "type": "string",
                    "description": "Car model"
                },
                "brand": {
                    "type": "string",
                    "description": "Vehicle brand"
                },
                "car_type": {
                    "type": "string",
                    "description": "Type of rental car"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_status": {
                    "type": "string",
                    "description": "Search status"
                },
                "options": {
                    "type": "array",
                    "description": "Available car rental service options"
                }
            }
        }
    },
    {
        "name": "train_delay_risk_query",
        "description": "Train Delay Risk Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "type": "string",
                    "description": "Departure date and time"
                },
                "startStation": {
                    "type": "string",
                    "description": "Departure station"
                },
                "endStation": {
                    "type": "string",
                    "description": "Arrival station"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "delay_risk": {
                    "type": "string",
                    "description": "Train delay risk information"
                }
            }
        }
    },
    {
        "name": "home_cleaning_cancelling",
        "description": "Home Cleaning Booking Cancellation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "cleaningDate": {
                    "description": "The cleaning date to be cancelled",
                    "type": "string"
                },
                "cleaningTime": {
                    "description": "The cleaning time to be cancelled",
                    "type": "string"
                },
                "address": {
                    "description": "The address of the house where cleaning is to be cancelled",
                    "type": "string"
                },
                "city": {
                    "description": "The city where the home to be cleaned is located",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cleaning_status": {
                    "description": "Home cleaning cancellation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "car_rental_query",
        "description": "Car Rental Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "startDate": {
                    "description": "Car rental start date (date+time)",
                    "type": "string"
                },
                "endDate": {
                    "description": "Car rental end date (date+time)",
                    "type": "string"
                },
                "carID": {
                    "description": "Car ID",
                    "type": "string"
                },
                "city": {
                    "description": "City of car pickup",
                    "type": "string"
                },
                "rental_location": {
                    "description": "Car rental location",
                    "type": "string"
                },
                "return_location": {
                    "description": "Car return location",
                    "type": "string"
                },
                "car_type": {
                    "description": "Car type",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "car_rental_status": {
                    "description": "List of car rental reservations that meet the search criteria",
                    "type": "string"
                },
                "available_cars": {
                    "description": "List of available cars",
                    "type": "array"
                },
                "rental_companies": {
                    "description": "List of rental companies",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "filter_on_site_repair_service",
        "description": "Filter out repair providers that offer on-site service",
        "arguments": {
            "type": "object",
            "properties": {
                "providers": {
                    "type": "array",
                    "description": "List of repair service providers"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_providers": {
                    "type": "array",
                    "description": "List of filtered repair providers"
                }
            }
        }
    },
    {
        "name": "travel_insurance_coverage",
        "description": "Travel Insurance Coverage Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "tripDuration": {
                    "description": "Number of Travel Days",
                    "type": "integer"
                },
                "travelerAge": {
                    "description": "Traveler's Age",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "insurance_coverage": {
                    "description": "Insurance Coverage Details",
                    "type": "string"
                },
                "insurance_price": {
                    "description": "Insurance Price",
                    "type": "number"
                },
                "insurance_company": {
                    "description": "Insurance Company",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "filter_insurance_with_emergency",
        "description": "Filter out insurance plans that include emergency rescue services",
        "arguments": {
            "type": "object",
            "properties": {
                "insurance_plans": {
                    "type": "array",
                    "description": "List of insurance plans to be filtered"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_plans": {
                    "type": "array",
                    "description": "List of filtered insurance plans"
                }
            }
        }
    },
    {
        "name": "book_online_meeting_room",
        "description": "Book online meeting room",
        "arguments": {
            "type": "object",
            "properties": {
                "service_provider": {
                    "type": "string",
                    "description": "Service provider"
                },
                "meeting_date": {
                    "type": "string",
                    "description": "Meeting date"
                },
                "meeting_time": {
                    "type": "string",
                    "description": "Meeting time"
                },
                "attendees": {
                    "type": "string",
                    "description": "Number of attendees"
                },
                "features": {
                    "type": "string",
                    "description": "Required meeting room features"
                },
                "min_participants": {
                    "type": "string",
                    "description": "Minimum number of remote participants"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "meeting_link": {
                    "type": "string",
                    "description": "Meeting room link"
                },
                "meeting_credentials": {
                    "type": "string",
                    "description": "Online meeting room login credentials"
                }
            }
        }
    },
    {
        "name": "plan_daily_itinerary",
        "description": "Develop daily itinerary plans based on the location and characteristics of attractions",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Travel destination information"
                },
                "start_date": {
                    "type": "string",
                    "description": "Travel start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "Travel end date"
                },
                "attractions": {
                    "type": "array",
                    "description": "List of attractions"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "itinerary": {
                    "type": "string",
                    "description": "Daily itinerary arrangements"
                }
            }
        }
    },
    {
        "name": "generate_travel_plan_report",
        "description": "Organize travel plans and insurance information into a report",
        "arguments": {
            "type": "object",
            "properties": {
                "itinerary": {
                    "type": "array",
                    "description": "Travel itinerary arrangements"
                },
                "insurance_details": {
                    "type": "object",
                    "description": "Insurance plan details"
                },
                "price_comparison": {
                    "type": "object",
                    "description": "Insurance price comparison results"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report": {
                    "type": "string",
                    "description": "Travel plan report"
                }
            }
        }
    },
    {
        "name": "asset_management_approval_process",
        "description": "Asset Management Approval Process Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "employeeID": {
                    "description": "Employee ID",
                    "type": "string"
                },
                "assetType": {
                    "description": "Type of asset",
                    "type": "string"
                },
                "assetID": {
                    "description": "Asset ID",
                    "type": "string"
                },
                "changeType": {
                    "description": "Type of change",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "approval_status": {
                    "description": "Approval status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "asset_checkout_approval",
        "description": "Asset checkout approval process tool for taking company assets off company premises",
        "arguments": {
            "type": "object",
            "properties": {
                "checkout_time": {
                    "description": "Checkout time",
                    "type": "string",
                    "format": "date-time"
                },
                "checkout_location": {
                    "description": "Checkout location",
                    "type": "string"
                },
                "personnel": {
                    "description": "Personnel",
                    "type": "string"
                },
                "asset_id": {
                    "description": "Asset ID",
                    "type": "string"
                },
                "reason": {
                    "description": "Reason",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "approval_status": {
                    "description": "Approval status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "reserve_online_meeting",
        "description": "Reserve online meeting resources, including meeting type, estimated completion time, and meeting duration",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_type": {
                    "type": "string",
                    "description": "Meeting type"
                },
                "estimated_completion": {
                    "type": "string",
                    "description": "Estimated time to complete a stage"
                },
                "duration": {
                    "type": "integer",
                    "description": "Meeting duration in minutes"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_status": {
                    "type": "string",
                    "description": "Reservation status"
                }
            }
        }
    },
    {
        "name": "complete_ticket_purchase",
        "description": "Complete the ticket purchase process",
        "arguments": {
            "type": "object",
            "properties": {
                "ticketType": {
                    "type": "string",
                    "description": "Type of ticket"
                },
                "adultTickets": {
                    "type": "string",
                    "description": "Number of adult tickets"
                },
                "studentTickets": {
                    "type": "string",
                    "description": "Number of student tickets"
                },
                "visitDate": {
                    "type": "string",
                    "description": "Visit date"
                },
                "parkName": {
                    "type": "string",
                    "description": "Theme park name"
                },
                "visitorAge": {
                    "type": "integer",
                    "description": "Visitor's age"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchase_status": {
                    "type": "string",
                    "description": "Purchase status"
                },
                "booking_details": {
                    "type": "string",
                    "description": "Booking details"
                }
            }
        }
    },
    {
        "name": "encrypt_ticket_info",
        "description": "Encrypt ticket information with the specified key",
        "arguments": {
            "type": "object",
            "properties": {
                "ticket_info": {
                    "type": "string",
                    "description": "Ticket information to be encrypted"
                },
                "encryption_key": {
                    "type": "string",
                    "description": "The key for encryption, which is the ID card number here"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "encrypted_ticket_info": {
                    "type": "string",
                    "description": "Encrypted ticket information"
                }
            }
        }
    },
    {
        "name": "provide_cancellation_info",
        "description": "A tool that provides detailed steps and conditions for cancelling an appointment",
        "arguments": {
            "type": "object",
            "properties": {
                "brand": {
                    "description": "Brand name",
                    "type": "string"
                },
                "requestID": {
                    "description": "Maintenance request number",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cancellation_steps": {
                    "description": "Cancellation steps",
                    "type": "string"
                },
                "cancellation_conditions": {
                    "description": "Cancellation conditions",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "repeat_booking",
        "description": "Set up repeat booking",
        "arguments": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "type": "string",
                    "description": "The ID of the booking"
                },
                "title": {
                    "type": "string",
                    "description": "The name of the event being booked"
                },
                "start_time": {
                    "type": "string",
                    "description": "The start time of the booking"
                },
                "end_time": {
                    "type": "string",
                    "description": "The end time of the booking"
                },
                "frequency": {
                    "type": "string",
                    "description": "The frequency of the booking repetition (e.g., daily, weekly, monthly, etc.)"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the booking"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the booking was successfully set",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "train_service_level_query",
        "description": "Query train service level",
        "arguments": {
            "type": "object",
            "properties": {
                "trainID": {
                    "description": "The train number for which the service level is to be queried",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_level": {
                    "description": "The service level of the train",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "add_to_cart",
        "description": "Add the selected product to the shopping cart",
        "arguments": {
            "type": "object",
            "properties": {
                "product": {
                    "description": "Selected product",
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "description": "Quantity to purchase"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cart_status": {
                    "description": "Shopping cart status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "internal_purchase",
        "description": "Internal procurement of materials and tools",
        "arguments": {
            "type": "object",
            "properties": {
                "employeeNameOrId": {
                    "description": "Employee name or ID",
                    "type": "string"
                },
                "occurrenceTime": {
                    "description": "Occurrence time",
                    "type": "string",
                    "format": "date-time"
                },
                "expense": {
                    "description": "Expense",
                    "type": "number"
                },
                "currency": {
                    "description": "Currency",
                    "type": "string"
                },
                "purchasedItem": {
                    "description": "Purchased item",
                    "type": "string"
                },
                "settlementItem": {
                    "description": "Settlement item",
                    "type": "string"
                },
                "details": {
                    "description": "Detailed information",
                    "type": "object"
                },
                "approver": {
                    "description": "Approver",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchase_status": {
                    "description": "Purchase status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "submit_subsidy_application",
        "description": "Submit travel subsidy application",
        "arguments": {
            "type": "object",
            "properties": {
                "meal_subsidy": {
                    "type": "number",
                    "description": "Standard for daily meal allowance"
                },
                "transportation_subsidy": {
                    "type": "number",
                    "description": "Standard for daily transportation allowance"
                },
                "days": {
                    "type": "number",
                    "description": "Number of business travel days"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "application_status": {
                    "type": "string",
                    "description": "Subsidy application submission status"
                }
            }
        }
    },
    {
        "name": "check_car_equipment",
        "description": "Check if the specified vehicle is equipped with certain equipment and confirm its functionality",
        "arguments": {
            "type": "object",
            "properties": {
                "carID": {
                    "type": "string",
                    "description": "Car ID"
                },
                "equipment": {
                    "type": "string",
                    "description": "Name of the equipment to be checked"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "equipment_status": {
                    "description": "Equipment provision and functional status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "ingredient_delivery_tool",
        "description": "Ingredient delivery tool, capable of delivering up to 10 types of ingredients within the same city, with available cities being 'Beijing', 'Shanghai', 'Tianjin', 'Guangzhou'.",
        "arguments": {
            "type": "object",
            "properties": {
                "deliveryCity": {
                    "type": "string",
                    "description": "The city for delivery, available options are 'Beijing', 'Shanghai', 'Tianjin', 'Guangzhou'",
                    "enum": [
                        "\u5317\u4eac",
                        "\u4e0a\u6d77",
                        "\u5929\u6d25",
                        "\u5e7f\u5dde"
                    ],
                    "example": "\u5317\u4eac"
                },
                "ingredientList": {
                    "type": "array",
                    "description": "The list of ingredients to be delivered, up to 10 types, each ingredient is an object containing the name and quantity of the ingredient",
                    "items": {
                        "type": "object",
                        "properties": {
                            "ingredientName": {
                                "type": "string",
                                "description": "Ingredient name"
                            },
                            "ingredientAmount": {
                                "type": "number",
                                "description": "Ingredient quantity"
                            }
                        }
                    },
                    "minItems": 1,
                    "maxItems": 10
                },
                "deliveryAddress": {
                    "type": "string",
                    "description": "The detailed address for delivery",
                    "example": "XX district XX street No.XX"
                },
                "recipientPhone": {
                    "type": "string",
                    "description": "Recipient's phone number, must comply with mobile phone number format",
                    "format": "mobile",
                    "example": "13900001111"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation": {
                    "type": "string",
                    "description": "Delivery confirmation information, including delivery number and estimated arrival time"
                }
            }
        }
    },
    {
        "name": "add_alarm_ringtone",
        "description": "Add a ringtone for an alarm with specified time and frequency",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Alarm set time"
                },
                "frequency": {
                    "type": "string",
                    "description": "Alarm set frequency, options: once, daily, Monday to Sunday, default is once"
                },
                "ringtone": {
                    "type": "string",
                    "description": "Name of the alarm ringtone to set"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ringtone_info": {
                    "description": "Ringtone setting result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "ride_hailing_service",
        "description": "Taxi service inquiry tool",
        "arguments": {
            "type": "object",
            "properties": {
                "user_name": {
                    "description": "User full name is recommended for more accurate inquiry",
                    "type": "string"
                },
                "location": {
                    "description": "User's location, must enter the specific city name",
                    "type": "string",
                    "enum": [
                        "Beijing",
                        "Shanghai",
                        "Guangzhou",
                        "Shenzhen"
                    ]
                },
                "destination": {
                    "description": "Destination, specific address information is required",
                    "type": "string"
                },
                "ride_type": {
                    "description": "Type of ride, such as Economy, Comfort, etc.",
                    "type": "string",
                    "enum": [
                        "Economy",
                        "Comfort",
                        "Luxury"
                    ]
                },
                "time": {
                    "description": "Estimated departure time:ss",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-01 08:30:00"
                },
                "coupon": {
                    "description": "Coupon code, if available",
                    "type": "string"
                },
                "seat_num": {
                    "description": "Number of seats required, must not exceed the actual number of seats in the vehicle",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 7
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ride_info": {
                    "description": "Ride information",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "find_fastest_route",
        "description": "Find the fastest transportation route from the starting point to the destination",
        "arguments": {
            "type": "object",
            "properties": {
                "start_location": {
                    "type": "string",
                    "description": "Starting point"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "route_info": {
                    "type": "string",
                    "description": "Transportation route information"
                },
                "estimated_time": {
                    "type": "integer",
                    "description": "Estimated time required (minutes)"
                }
            }
        }
    },
    {
        "name": "special_promotion_finder",
        "description": "Search for special promotions on specific dates and locations, and filter out events within the budget range",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "travelDate": {
                    "type": "string",
                    "description": "Travel Date"
                },
                "budget": {
                    "type": "integer",
                    "description": "Budget Range"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "promotion_code": {
                    "type": "string",
                    "description": "Promotion Code"
                },
                "discount_amount": {
                    "type": "integer",
                    "description": "Discount Amount"
                }
            }
        }
    },
    {
        "name": "transportation_advice",
        "description": "Provide transportation advice from the starting point to the destination",
        "arguments": {
            "type": "object",
            "properties": {
                "start_location": {
                    "type": "string",
                    "description": "Starting point"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "visitDate": {
                    "type": "string",
                    "description": "Visit date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "arrival_time": {
                    "type": "string",
                    "description": "Recommended arrival time"
                },
                "transportation": {
                    "type": "string",
                    "description": "Recommended mode of transportation"
                }
            }
        }
    },
    {
        "name": "book_palace_ticket",
        "description": "Used for online booking of the Forbidden City tickets",
        "arguments": {
            "type": "object",
            "properties": {
                "visitor_name": {
                    "type": "string",
                    "description": "Visitor's name"
                },
                "visitor_id": {
                    "type": "string",
                    "description": "Visitor's ID number"
                },
                "visit_date": {
                    "type": "string",
                    "description": "Visit date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "ticket_info": {
                    "type": "string",
                    "description": "Ticket information"
                }
            }
        }
    },
    {
        "name": "taxi_booking",
        "description": "Taxi booking service",
        "arguments": {
            "type": "object",
            "properties": {
                "pickup_address": {
                    "type": "string",
                    "description": "Passenger's pickup address"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination address"
                },
                "pickup_time": {
                    "type": "string",
                    "description": "Scheduled pickup time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Taxi booking status"
                }
            }
        }
    },
    {
        "name": "travel_itinerary_planner",
        "description": "Travel Itinerary Planning Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "departure_date": {
                    "description": "Departure Date",
                    "type": "string"
                },
                "return_date": {
                    "description": "Return Date",
                    "type": "string"
                },
                "interests": {
                    "description": "Points of Interest",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "itinerary": {
                    "description": "Travel Itinerary",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "day": {
                                "description": "Date",
                                "type": "string"
                            },
                            "activities": {
                                "description": "Activities",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "generate_palace_museum_ticket_booking_link",
        "description": "Generate the official booking link for the Palace Museum tickets",
        "arguments": {
            "type": "object",
            "properties": {
                "visit_date": {
                    "type": "string",
                    "description": "Visit date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_link": {
                    "type": "string",
                    "description": "Palace Museum ticket booking link"
                }
            }
        }
    },
    {
        "name": "insurance_service_selection",
        "description": "Select the appropriate insurance services based on user needs and complete the purchase",
        "arguments": {
            "type": "object",
            "properties": {
                "insurance_types": {
                    "type": "array",
                    "description": "List of required insurance types",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchase_status": {
                    "description": "Insurance purchase status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "purchase_travel_insurance",
        "description": "Purchase Travel Insurance",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "identityNumber": {
                    "type": "string",
                    "description": "Purchaser's ID Number"
                },
                "name": {
                    "type": "string",
                    "description": "Purchaser's Name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "insurance_purchase_status": {
                    "type": "string",
                    "description": "Insurance Purchase Status"
                }
            }
        }
    },
    {
        "name": "get_insurance_product_details",
        "description": "Get the detailed coverage of the specified insurance product",
        "arguments": {
            "type": "object",
            "properties": {
                "productName": {
                    "type": "string",
                    "description": "Product Name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "coverageDetails": {
                    "type": "string",
                    "description": "Details of the product coverage"
                }
            }
        }
    },
    {
        "name": "search_travel_packages",
        "description": "Search for travel packages that meet the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Travel destination"
                },
                "start_date": {
                    "type": "string",
                    "description": "Travel start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "Travel end date"
                },
                "budget": {
                    "type": "integer",
                    "description": "Budget ceiling"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "packages": {
                    "type": "array",
                    "description": "List of travel packages that meet the criteria"
                }
            }
        }
    },
    {
        "name": "travel_coupon_finder",
        "description": "Travel Coupon Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "bookingDate": {
                    "description": "Booking Date",
                    "type": "string"
                },
                "duration": {
                    "description": "Duration of Travel",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 30
                },
                "travelDate": {
                    "description": "Travel Date",
                    "type": "string"
                },
                "budget": {
                    "description": "Budget Range",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "discount": {
                    "description": "Coupon Discount",
                    "type": "number"
                },
                "coupon_code": {
                    "description": "Coupon Code",
                    "type": "string"
                },
                "discount_amount": {
                    "description": "Discount Amount",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "select_additional_coupon",
        "description": "Select additional travel coupons suitable for the user",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "user_id": {
                    "type": "string",
                    "description": "User ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "additional_coupon_code": {
                    "type": "string",
                    "description": "Additional coupon code"
                }
            }
        }
    },
    {
        "name": "travel_backpack_generator",
        "description": "Travel Backpack Generator Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "duration": {
                    "description": "Travel duration in days",
                    "type": "integer"
                },
                "destination": {
                    "description": "Climate type of the travel destination, options include \"cold\", \"warm\", \"humid\", \"dry\"",
                    "type": "string"
                },
                "activities": {
                    "description": "Types of travel activities, options include \"photography\", \"hiking\", \"skiing\", \"diving\"",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "backpack_contents": {
                    "description": "Contents of the travel backpack, including required clothing, equipment, essentials, etc.",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "purchase_missing_items",
        "description": "Purchase missing travel essentials",
        "arguments": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "description": "List of items to be purchased",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchase_status": {
                    "type": "array",
                    "description": "Purchase status of each item",
                    "items": {
                        "type": "object",
                        "properties": {
                            "item": {
                                "type": "string",
                                "description": "Item name"
                            },
                            "status": {
                                "type": "boolean",
                                "description": "Whether the purchase was successful"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "extract_action_items",
        "description": "Extract action items from meeting minutes document",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "Path to the meeting minutes document"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "action_items": {
                    "type": "array",
                    "description": "List of extracted action items"
                }
            }
        }
    },
    {
        "name": "travel_backpack_checker",
        "description": "Travel Backpack Checker Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "List of items in the backpack",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "weight_limit": {
                    "description": "Backpack weight limit",
                    "type": "integer"
                },
                "trip_type": {
                    "description": "Type of trip",
                    "type": "string",
                    "enum": [
                        "hiking",
                        "business",
                        "leisure"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "suitable": {
                    "description": "Whether the backpack meets the travel requirements",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "travel_backpack_inventory",
        "description": "Travel Backpack Management Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "backpackCapacity": {
                    "description": "The capacity of the backpack, in liters",
                    "type": "integer"
                },
                "items": {
                    "description": "Items to be placed in the backpack, represented as an array",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "item": {
                                "description": "Item name",
                                "type": "string"
                            },
                            "volume": {
                                "description": "Volume occupied by the item, in liters",
                                "type": "integer"
                            },
                            "quantity": {
                                "description": "Quantity of the item",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "item",
                            "volume",
                            "quantity"
                        ]
                    }
                },
                "tripLength": {
                    "description": "The length of the trip, in days",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "packableItems": {
                    "description": "List of items that can be packed into the backpack",
                    "type": "array"
                },
                "remainingVolume": {
                    "description": "Remaining volume of the backpack",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "souvenir_purchase_process",
        "description": "Tourist Souvenir Purchase Process Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "souvenir": {
                    "type": "string",
                    "description": "Souvenir Name"
                },
                "number": {
                    "type": "integer",
                    "description": "Purchase Quantity"
                },
                "channel": {
                    "type": "string",
                    "description": "Purchase Channel, such as online, offline"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchase_status": {
                    "type": "string",
                    "description": "Purchase Status, such as successful, failed"
                },
                "order_details": {
                    "type": "string",
                    "description": "Order Details"
                },
                "shipping_info": {
                    "type": "string",
                    "description": "Shipping Information"
                }
            }
        }
    },
    {
        "name": "get_confirmation_info",
        "description": "Get appointment confirmation information",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_details": {
                    "type": "object",
                    "description": "Detailed information of the appointment confirmation"
                },
                "confirmation_status": {
                    "description": "Status of the confirmation information retrieval",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "train_status_query",
        "description": "Query the real-time running status of a specified train",
        "arguments": {
            "type": "object",
            "properties": {
                "trainID": {
                    "type": "string",
                    "description": "Train number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The real-time running status of the train"
                }
            }
        }
    },
    {
        "name": "send_email",
        "description": "Email notification sending tool",
        "arguments": {
            "type": "object",
            "properties": {
                "recipient_list": {
                    "type": "array",
                    "description": "Recipient email list"
                },
                "document": {
                    "type": "string",
                    "description": "Email attachment content"
                },
                "send_time": {
                    "type": "string",
                    "description": "Email sending time"
                },
                "subject": {
                    "type": "string",
                    "description": "Email subject"
                },
                "body": {
                    "type": "string",
                    "description": "Email body content"
                },
                "attachment": {
                    "type": "string",
                    "description": "Email attachment"
                },
                "sender": {
                    "type": "string",
                    "description": "Sender email address"
                },
                "attachment_path": {
                    "type": "string",
                    "description": "Attachment file path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Email sending status",
                    "type": "string"
                },
                "email_sent": {
                    "type": "boolean",
                    "description": "Confirmation whether the email has been sent"
                }
            }
        }
    },
    {
        "name": "send_sms_reminder",
        "description": "SMS Reminder Sending Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "phone_number": {
                    "type": "string",
                    "description": "The mobile phone number to receive the SMS"
                },
                "message_content": {
                    "type": "string",
                    "description": "Content of the SMS"
                },
                "send_time": {
                    "type": "string",
                    "description": "SMS sending time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sms_status": {
                    "type": "string",
                    "description": "SMS sending status"
                }
            }
        }
    },
    {
        "name": "configure_email_reminder",
        "description": "A tool to configure email reminders to be sent at specific times",
        "arguments": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string",
                    "description": "The email address to receive reminders"
                },
                "email_content": {
                    "type": "string",
                    "description": "The content of the email"
                },
                "send_time": {
                    "type": "string",
                    "description": "The time when the email is sent"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "email_reminder_status": {
                    "type": "string",
                    "description": "The result of the email reminder setup"
                }
            }
        }
    },
    {
        "name": "send_booking_email",
        "description": "Used to send booking information to the user's email",
        "arguments": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string",
                    "description": "User email address"
                },
                "booking_details": {
                    "type": "string",
                    "description": "Booking details"
                },
                "airline_name": {
                    "type": "string",
                    "description": "Airline name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "email_status": {
                    "type": "string",
                    "description": "Email sending status"
                }
            }
        }
    },
    {
        "name": "compose_rental_details_email",
        "description": "Compose an email content for car rental booking details",
        "arguments": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User's email address"
                },
                "startDate": {
                    "type": "string",
                    "description": "Car rental start date and time"
                },
                "endDate": {
                    "type": "string",
                    "description": "Car rental end date and time"
                },
                "city": {
                    "type": "string",
                    "description": "City for car pickup"
                },
                "dropOffCity": {
                    "type": "string",
                    "description": "City for car drop-off"
                },
                "carID": {
                    "type": "string",
                    "description": "Car identification number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "email_content": {
                    "type": "string",
                    "description": "Email content of the booking details"
                }
            }
        }
    },
    {
        "name": "airport_pickup",
        "description": "Airport transfer reservation tool",
        "arguments": {
            "type": "object",
            "properties": {
                "pickup_time": {
                    "description": "Pick-up time",
                    "type": "string",
                    "format": "date-time"
                },
                "flight_number": {
                    "description": "Flight number",
                    "type": "string"
                },
                "pickup_location": {
                    "description": "Pick-up location",
                    "type": "string"
                },
                "airport_name": {
                    "description": "Airport name",
                    "type": "string"
                },
                "numberOfPassengers": {
                    "description": "Number of passengers",
                    "type": "integer"
                },
                "luggageCount": {
                    "description": "Number of luggage items",
                    "type": "integer"
                },
                "user_name": {
                    "type": "string",
                    "description": "User name"
                },
                "contact_info": {
                    "type": "string",
                    "description": "User contact information"
                },
                "destination": {
                    "description": "Destination",
                    "type": "string"
                },
                "arrival_time": {
                    "description": "Landing time",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "pickup_status": {
                    "description": "Pick-up reservation status",
                    "type": "string"
                },
                "pickup_service_information": {
                    "description": "Pick-up service information",
                    "type": "string"
                },
                "confirmationNumber": {
                    "description": "Reservation confirmation number",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_flight_origin",
        "description": "Get the departure information of a specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "origin_status": {
                    "type": "string",
                    "description": "Acquisition status"
                },
                "flight_origin": {
                    "type": "string",
                    "description": "Flight departure location"
                }
            }
        }
    },
    {
        "name": "select_earliest_flight",
        "description": "Query and select the earliest flight on a specified date and route",
        "arguments": {
            "type": "object",
            "properties": {
                "departureCity": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrivalCity": {
                    "type": "string",
                    "description": "Arrival city"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number of the earliest flight"
                },
                "booking_status": {
                    "type": "string",
                    "description": "Query status"
                }
            }
        }
    },
    {
        "name": "flight_schedule_lookup",
        "description": "Query the departure time of a specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "The flight number to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flight_time": {
                    "type": "string",
                    "description": "The departure time of the flight"
                }
            }
        }
    },
    {
        "name": "theme_park_attractions_search",
        "description": "Theme Park Facilities Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "parkName": {
                    "description": "Theme Park Name",
                    "type": "string"
                },
                "attractionType": {
                    "description": "Attraction Type (e.g., Rides, Shows, Dining Spots)",
                    "type": "string"
                },
                "visitDate": {
                    "description": "Visit Date",
                    "type": "string"
                },
                "visitorAge": {
                    "description": "Visitor's Age",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "attraction_list": {
                    "description": "List of Attractions that Meet the Criteria",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "attractionName": {
                                "description": "Attraction Name",
                                "type": "string"
                            },
                            "operationalStatus": {
                                "description": "Attraction Operational Status",
                                "type": "string"
                            },
                            "waitTime": {
                                "description": "Estimated Waiting Time",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "attractionName",
                            "operationalStatus"
                        ]
                    }
                },
                "opening_hours": {
                    "description": "Theme Park's Operating Hours",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "legal_regulation_search",
        "description": "Legal Regulation Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "jurisdiction": {
                    "description": "Legal Jurisdiction Area",
                    "type": "string"
                },
                "issueDate": {
                    "description": "Issue Date",
                    "type": "string",
                    "format": "date-time"
                },
                "keyword": {
                    "description": "Regulation Keyword",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "regulation_details": {
                    "description": "Specific Regulation Content",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "theme_park_info_search",
        "description": "Theme Park Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "parkName": {
                    "description": "Name of the theme park",
                    "type": "string"
                },
                "visitDate": {
                    "description": "Visit date",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "openHours": {
                    "description": "Opening hours",
                    "type": "string"
                },
                "ticketPrice": {
                    "description": "Ticket price",
                    "type": "number"
                },
                "location": {
                    "description": "Location",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "book_park_area",
        "description": "Reserve a designated area in the park",
        "arguments": {
            "type": "object",
            "properties": {
                "park_name": {
                    "type": "string",
                    "description": "Park name"
                },
                "start_time": {
                    "type": "string",
                    "description": "Reservation start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Reservation end time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Area reservation status"
                }
            }
        }
    },
    {
        "name": "clothing_advice_based_on_weather",
        "description": "Provide clothing advice based on weather forecast",
        "arguments": {
            "type": "object",
            "properties": {
                "weather": {
                    "type": "array",
                    "description": "Weather forecast information"
                },
                "temperature": {
                    "type": "string",
                    "description": "Temperature"
                },
                "precipitation_probability": {
                    "type": "string",
                    "description": "Precipitation probability"
                },
                "wind_strength": {
                    "type": "string",
                    "description": "Wind strength"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "clothing_recommendations": {
                    "type": "array",
                    "description": "Clothing recommendations list"
                }
            }
        }
    },
    {
        "name": "confirm_rental_terms",
        "description": "Confirm car rental price and terms",
        "arguments": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string",
                    "description": "Car rental company name"
                },
                "car_plate": {
                    "type": "string",
                    "description": "Car license plate number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "terms_status": {
                    "type": "string",
                    "description": "Car rental terms confirmation status"
                }
            }
        }
    },
    {
        "name": "apply_for_job_tool",
        "description": "Submit job application",
        "arguments": {
            "type": "object",
            "properties": {
                "resume": {
                    "type": "string",
                    "description": "Resume file path"
                },
                "cover_letter": {
                    "type": "string",
                    "description": "Cover letter file path"
                },
                "job_id": {
                    "type": "string",
                    "description": "Job ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "application_status": {
                    "type": "boolean",
                    "description": "Whether the application was successfully submitted"
                }
            }
        }
    },
    {
        "name": "attraction_recommendation",
        "description": "Evaluate amusement facilities based on given criteria and compile a recommendation list",
        "arguments": {
            "type": "object",
            "properties": {
                "attractions_list": {
                    "type": "array",
                    "description": "List of amusement facilities"
                },
                "criteria": {
                    "type": "array",
                    "description": "Evaluation criteria, such as interactivity, safety, and entertainment value",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recommended_attractions": {
                    "type": "array",
                    "description": "List of recommended amusement facilities based on evaluation criteria"
                }
            }
        }
    },
    {
        "name": "locate_purchase",
        "description": "Locate purchase record based on user account ID and purchase date",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "purchase_date": {
                    "type": "string",
                    "description": "Purchase date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the location"
                },
                "order_id": {
                    "type": "string",
                    "description": "Located order ID"
                }
            }
        }
    },
    {
        "name": "get_meeting_details",
        "description": "Get the detailed information of a specified meeting",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_id": {
                    "type": "string",
                    "description": "The ID of the meeting"
                },
                "start_time": {
                    "type": "string",
                    "description": "The start time of the meeting"
                },
                "end_time": {
                    "type": "string",
                    "description": "The end time of the meeting"
                },
                "time_zone": {
                    "type": "string",
                    "description": "The time zone to be displayed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "details_status": {
                    "type": "string",
                    "description": "The status of obtaining meeting details"
                },
                "meeting_details": {
                    "type": "string",
                    "description": "The detailed information of the meeting"
                },
                "required_materials": {
                    "type": "string",
                    "description": "The list of materials required for the meeting"
                }
            }
        }
    },
    {
        "name": "check_all_meetings_cancelled",
        "description": "Check if all meetings for the user have been cancelled",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "User ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether all meetings have been cancelled",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "confirm_no_cancellation_fee",
        "description": "Communicate with the meeting room management to confirm that there is no fee for cancelling the reservation",
        "arguments": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "type": "string",
                    "description": "Contact information of the meeting room management"
                },
                "booking_info": {
                    "type": "string",
                    "description": "Booking information of the user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Status of the confirmation that there is no fee for cancellation"
                }
            }
        }
    },
    {
        "name": "search_and_confirm_available_room",
        "description": "Search and confirm available meeting rooms under specified conditions",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Reservation date"
                },
                "start_time": {
                    "type": "string",
                    "description": "Reservation start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Reservation end time"
                },
                "capacity": {
                    "type": "string",
                    "description": "Meeting room capacity"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Meeting room availability status"
                },
                "room_number": {
                    "type": "string",
                    "description": "Confirmed meeting room number"
                }
            }
        }
    },
    {
        "name": "search_conference_rooms",
        "description": "Search for conference rooms that meet the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Location of the conference room"
                },
                "date": {
                    "type": "string",
                    "description": "Conference room reservation date"
                },
                "time": {
                    "type": "string",
                    "description": "Conference room reservation time"
                },
                "capacity": {
                    "type": "string",
                    "description": "Capacity requirements of the conference room"
                },
                "facilities": {
                    "type": "string",
                    "description": "Facilities requirements of the conference room"
                },
                "city": {
                    "type": "string",
                    "description": "City where the conference room is located"
                },
                "startTime": {
                    "type": "string",
                    "description": "Start time of the meeting (date + time)"
                },
                "endTime": {
                    "type": "string",
                    "description": "End time of the meeting (date + time)"
                },
                "equipment": {
                    "type": "string",
                    "description": "Equipment of the conference room"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_results": {
                    "type": "string",
                    "description": "Search results for conference rooms"
                },
                "search_status": {
                    "description": "Search status",
                    "type": "string"
                },
                "available_rooms": {
                    "description": "List of available conference rooms",
                    "type": "array"
                },
                "roomID": {
                    "type": "string",
                    "description": "ID of the conference room that meets the criteria"
                }
            }
        }
    },
    {
        "name": "book_online_meeting",
        "description": "Book an online meeting and send invitations",
        "arguments": {
            "type": "object",
            "properties": {
                "platform": {
                    "type": "string",
                    "description": "Meeting platform"
                },
                "start_time": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Meeting end time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Booking status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "book_meeting_room",
        "description": "Complete meeting room reservation",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Reservation date"
                },
                "start_time": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "duration": {
                    "type": "string",
                    "description": "Meeting duration, in hours"
                },
                "capacity": {
                    "type": "string",
                    "description": "Meeting room capacity"
                },
                "room_id": {
                    "type": "string",
                    "description": "Meeting room ID"
                },
                "city": {
                    "type": "string",
                    "description": "City where the meeting room is located"
                },
                "equipment": {
                    "type": "array",
                    "description": "Meeting room equipment requirements",
                    "items": {
                        "type": "string"
                    }
                },
                "meeting_name": {
                    "type": "string",
                    "description": "Meeting name"
                },
                "location": {
                    "type": "string",
                    "description": "Meeting room location"
                },
                "department": {
                    "type": "string",
                    "description": "Department name"
                },
                "room_type": {
                    "type": "string",
                    "description": "Meeting room type"
                },
                "recurrence_pattern": {
                    "type": "string",
                    "description": "Event recurrence pattern"
                },
                "end_recurrence": {
                    "type": "string",
                    "description": "End date of recurrence"
                },
                "user_name": {
                    "type": "string",
                    "description": "User name"
                },
                "contact": {
                    "type": "string",
                    "description": "User contact information"
                },
                "room": {
                    "type": "string",
                    "description": "Meeting room name"
                },
                "booker_info": {
                    "type": "string",
                    "description": "Booker information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Meeting room booking status"
                },
                "room_id": {
                    "type": "string",
                    "description": "Booked meeting room ID"
                },
                "notification_status": {
                    "type": "string",
                    "description": "Meeting notification sending status"
                },
                "outcome": {
                    "description": "Whether the reservation was successful",
                    "type": "string"
                },
                "meeting_id": {
                    "description": "Meeting ID of the successful reservation",
                    "type": "string"
                },
                "confirmation_info": {
                    "type": "string",
                    "description": "Reservation confirmation information"
                }
            }
        }
    },
    {
        "name": "create_daily_reminders",
        "description": "Create a reminder that repeats daily within a specified date range",
        "arguments": {
            "type": "object",
            "properties": {
                "event_title": {
                    "type": "string",
                    "description": "Event name"
                },
                "start_reminder_time": {
                    "type": "string",
                    "description": "Start reminder time"
                },
                "end_reminder_time": {
                    "type": "string",
                    "description": "End reminder time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the reminder was successfully created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_reminder",
        "description": "Create reminder event",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_title": {
                    "type": "string",
                    "description": "Title of the reminder"
                },
                "schedule_date": {
                    "type": "string",
                    "description": "Date of the reminder"
                },
                "schedule_location": {
                    "type": "string",
                    "description": "Geographical location of the reminder"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "Reminder time"
                },
                "reminder_content": {
                    "type": "string",
                    "description": "Content of the reminder"
                },
                "recipients": {
                    "type": "array",
                    "description": "List of recipients for the reminder",
                    "items": {
                        "type": "string"
                    }
                },
                "event_name": {
                    "type": "string",
                    "description": "Name of the event"
                },
                "event_date": {
                    "type": "string",
                    "description": "Date of the event",
                    "format": "date"
                },
                "event_time": {
                    "type": "string",
                    "description": "Time of the event",
                    "format": "time"
                },
                "device_os": {
                    "type": "string",
                    "description": "Operating system of the user's mobile phone"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the reminder was successfully created",
                    "type": "string"
                },
                "reminder_creation_status": {
                    "type": "string",
                    "description": "Status of the reminder creation"
                }
            }
        }
    },
    {
        "name": "create_event_reminder",
        "description": "Create event reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "event_name": {
                    "type": "string",
                    "description": "Event name"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "Reminder time"
                },
                "event_title": {
                    "type": "string",
                    "description": "Event title"
                },
                "email": {
                    "type": "string",
                    "description": "Email address to receive reminder"
                },
                "event": {
                    "type": "string",
                    "description": "Event description"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the reminder was successfully created",
                    "type": "string"
                },
                "reminder_status": {
                    "type": "string",
                    "description": "Reminder setup status"
                }
            }
        }
    },
    {
        "name": "create_schedule_reminder",
        "description": "Create and set a schedule reminder, associated with a specific tag",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_title": {
                    "type": "string",
                    "description": "Name of the schedule"
                },
                "schedule_date": {
                    "type": "string",
                    "description": "Date of the schedule"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time of the schedule"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration of the schedule"
                },
                "tag_name": {
                    "type": "string",
                    "description": "Name of the associated tag"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "creation_status": {
                    "description": "Whether the schedule reminder was successfully created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "search_reminder",
        "description": "Reminder event for searching specific titles",
        "arguments": {
            "type": "object",
            "properties": {
                "reminder_title": {
                    "type": "string",
                    "description": "The title of the reminder event to search for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_id": {
                    "description": "The ID of the found reminder event",
                    "type": "string"
                },
                "status": {
                    "description": "Whether the search was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_meeting_conflict",
        "description": "Check if there is a meeting conflict on a specific date and time",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date to check"
                },
                "time": {
                    "type": "string",
                    "description": "The time to check"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "conflict_status": {
                    "type": "string",
                    "description": "Meeting conflict status"
                }
            }
        }
    },
    {
        "name": "meeting_room_facilities_check",
        "description": "Check if the facilities of the specified meeting room meet the requirements",
        "arguments": {
            "type": "object",
            "properties": {
                "roomID": {
                    "type": "string",
                    "description": "Meeting room number"
                },
                "city": {
                    "type": "string",
                    "description": "City where the meeting room is located"
                },
                "facilities": {
                    "type": "array",
                    "description": "List of required meeting room facilities"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "check_status": {
                    "type": "string",
                    "description": "Facility check result"
                },
                "missing_facilities": {
                    "type": "array",
                    "description": "List of missing facilities"
                }
            }
        }
    },
    {
        "name": "extract_meeting_notes",
        "description": "Extract key information from meeting records",
        "arguments": {
            "type": "object",
            "properties": {
                "record_type": {
                    "type": "string",
                    "description": "The type of meeting record, such as audio or text"
                },
                "project_progress": {
                    "type": "boolean",
                    "description": "Whether to extract project progress updates"
                },
                "sales_goals": {
                    "type": "boolean",
                    "description": "Whether to extract discussion on sales targets"
                },
                "next_meeting_date": {
                    "type": "string",
                    "description": "The date of the next meeting"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the extraction operation was successful"
                },
                "content": {
                    "type": "string",
                    "description": "The extracted content of the meeting notes"
                }
            }
        }
    },
    {
        "name": "retrieve_meetings",
        "description": "Retrieve information of specified meetings",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_name": {
                    "type": "string",
                    "description": "Meeting name"
                },
                "date": {
                    "type": "string",
                    "description": "The date of the meeting to retrieve"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "agenda": {
                    "type": "string",
                    "description": "Meeting agenda"
                },
                "records": {
                    "type": "string",
                    "description": "Meeting minutes or audio"
                }
            }
        }
    },
    {
        "name": "set_reminder_for_meetings",
        "description": "Set reminders at a specific time in advance for a series of meetings",
        "arguments": {
            "type": "object",
            "properties": {
                "meetings": {
                    "type": "array",
                    "description": "List of meeting times for which to set reminders"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "How much time in advance to set the reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "set_status": {
                    "type": "array",
                    "description": "List of statuses indicating whether the reminder was successfully set for each meeting"
                }
            }
        }
    },
    {
        "name": "set_meeting_sharing_permissions",
        "description": "Set sharing permissions for a meeting event",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_name": {
                    "type": "string",
                    "description": "The name of the meeting"
                },
                "user_ids": {
                    "type": "array",
                    "description": "List of user IDs to share permissions with",
                    "items": {
                        "type": "string"
                    }
                },
                "permission_level": {
                    "type": "string",
                    "description": "The level of sharing permissions"
                },
                "expiration_time": {
                    "type": "string",
                    "description": "Expiration time of the permissions"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sharing_status": {
                    "description": "Whether the permission sharing was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "schedule_meeting",
        "description": "Arrange a meeting and send invitations",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Meeting date"
                },
                "time": {
                    "type": "string",
                    "description": "Meeting time"
                },
                "participants": {
                    "type": "array",
                    "description": "List of participants"
                },
                "meeting_room": {
                    "type": "string",
                    "description": "Meeting room number"
                },
                "meeting_topic": {
                    "type": "string",
                    "description": "Meeting topic"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "meeting_scheduled": {
                    "type": "boolean",
                    "description": "Whether the meeting was successfully arranged"
                }
            }
        }
    },
    {
        "name": "set_meeting_reminder",
        "description": "Set meeting reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "reminder_time": {
                    "type": "string",
                    "description": "Reminder time"
                },
                "reminder_content": {
                    "type": "string",
                    "description": "Reminder content"
                },
                "meeting_title": {
                    "type": "string",
                    "description": "Meeting title"
                },
                "agenda_id": {
                    "type": "string",
                    "description": "Agenda ID"
                },
                "meeting_date": {
                    "type": "string",
                    "description": "Meeting date"
                },
                "start_time": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Meeting end time"
                },
                "meeting_topic": {
                    "type": "string",
                    "description": "Meeting topic"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Reminder setup status"
                }
            }
        }
    },
    {
        "name": "create_and_invite_video_meeting",
        "description": "Create an online video meeting and send invitations to participants",
        "arguments": {
            "type": "object",
            "properties": {
                "participants": {
                    "type": "string",
                    "description": "List of participants, separated by commas"
                },
                "platform": {
                    "type": "string",
                    "description": "Video conferencing platform"
                },
                "meeting_time": {
                    "type": "string",
                    "description": "Meeting time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "creation_status": {
                    "type": "string",
                    "description": "Meeting creation status"
                },
                "invitation_status": {
                    "type": "string",
                    "description": "Invitation sending status"
                }
            }
        }
    },
    {
        "name": "send_meeting_invitations",
        "description": "Send meeting invitations",
        "arguments": {
            "type": "object",
            "properties": {
                "email_list": {
                    "type": "array",
                    "description": "List of attendees' emails",
                    "items": {
                        "type": "string"
                    }
                },
                "invitation_content": {
                    "type": "string",
                    "description": "Content of the invitation letter"
                },
                "event_name": {
                    "type": "string",
                    "description": "Event name"
                },
                "start_time": {
                    "type": "string",
                    "description": "Event start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Event end time"
                },
                "location": {
                    "type": "string",
                    "description": "Event location"
                },
                "agenda_title": {
                    "type": "string",
                    "description": "Agenda title"
                },
                "organizer": {
                    "type": "string",
                    "description": "Organizer's name"
                },
                "meeting_topic": {
                    "type": "string",
                    "description": "Meeting topic"
                },
                "meeting_location": {
                    "type": "string",
                    "description": "Meeting location"
                },
                "organizer_name": {
                    "type": "string",
                    "description": "Meeting initiator's name"
                },
                "organizer_email": {
                    "type": "string",
                    "description": "Meeting initiator's email"
                },
                "content": {
                    "type": "string",
                    "description": "Meeting content"
                },
                "meeting_name": {
                    "type": "string",
                    "description": "Meeting name"
                },
                "meeting_id": {
                    "type": "string",
                    "description": "Meeting ID"
                },
                "meeting_link": {
                    "type": "string",
                    "description": "Online meeting link"
                },
                "meeting_end_time": {
                    "type": "string",
                    "description": "Meeting end time"
                },
                "email_content": {
                    "type": "string",
                    "description": "Content of the meeting notification email"
                },
                "meeting_time": {
                    "type": "string",
                    "description": "Meeting time"
                },
                "account_info": {
                    "type": "string",
                    "description": "Online meeting tool account information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Status of the invitation sent"
                },
                "outcome": {
                    "description": "Whether the invitation was successfully sent",
                    "type": "string"
                },
                "sending_status": {
                    "description": "Whether the invitation was successfully sent",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "conference_room_changing",
        "description": "Conference Room Reservation Change Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "originalStartTime": {
                    "description": "The original meeting start time (date + time) that needs to be changed",
                    "type": "string"
                },
                "originalEndTime": {
                    "description": "The original meeting end time (date + time) that needs to be changed",
                    "type": "string"
                },
                "originalRoomID": {
                    "description": "The conference room ID that needs to be changed",
                    "type": "string"
                },
                "originalCity": {
                    "description": "The city where the conference room to be changed is located",
                    "type": "string"
                },
                "newStartTime": {
                    "description": "The new meeting start time (date + time). If not provided, the default is that the start time remains unchanged.",
                    "type": "string"
                },
                "newEndTime": {
                    "description": "The new meeting end time (date + time). If not provided, the default is that the end time remains unchanged.",
                    "type": "string"
                },
                "newRoomID": {
                    "description": "The new conference room ID. If not provided, the default is that the room ID remains unchanged.",
                    "type": "string"
                },
                "newCity": {
                    "description": "The city where the new conference room is located. If not provided, the default is that the city remains unchanged.",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "The status of the conference room change",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "setup_meeting",
        "description": "Create and set up meeting information in the meeting software",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_time": {
                    "type": "string",
                    "description": "Meeting time"
                },
                "participants": {
                    "type": "string",
                    "description": "List of participants, separated by commas"
                },
                "location": {
                    "type": "string",
                    "description": "Meeting location"
                },
                "meeting_id": {
                    "type": "string",
                    "description": "Meeting ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the meeting was successfully set up",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_meeting_notification",
        "description": "Send meeting notification",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_details": {
                    "type": "string",
                    "description": "Meeting details, including time, location, topics, etc."
                },
                "attendee_list": {
                    "type": "string",
                    "description": "List of attendees"
                },
                "date": {
                    "type": "string",
                    "description": "Meeting date"
                },
                "time": {
                    "type": "string",
                    "description": "Meeting time"
                },
                "location": {
                    "type": "string",
                    "description": "Meeting location"
                },
                "topic": {
                    "type": "string",
                    "description": "Meeting topic"
                },
                "agenda": {
                    "type": "string",
                    "description": "Meeting agenda"
                },
                "method": {
                    "type": "string",
                    "description": "Notification sending method, such as email or SMS"
                },
                "email_addresses": {
                    "type": "array",
                    "description": "List of team members' email addresses",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "create_virtual_meeting",
        "description": "Create an online meeting room and obtain the meeting link and access credentials",
        "arguments": {
            "type": "object",
            "properties": {
                "start_time": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Meeting end time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Online meeting room booking status"
                },
                "meeting_link": {
                    "type": "string",
                    "description": "Online meeting link"
                },
                "access_credentials": {
                    "type": "string",
                    "description": "Access credentials"
                }
            }
        }
    },
    {
        "name": "create_meeting_minutes",
        "description": "Create meeting minutes document",
        "arguments": {
            "type": "object",
            "properties": {
                "document_format": {
                    "type": "string",
                    "description": "Document format"
                },
                "content_items": {
                    "type": "string",
                    "description": "Contents required for meeting minutes"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "document_creation_status": {
                    "type": "string",
                    "description": "Meeting minutes document creation status"
                }
            }
        }
    },
    {
        "name": "check_internet_connection",
        "description": "Check the internet connection status of a specified meeting room",
        "arguments": {
            "type": "object",
            "properties": {
                "roomID": {
                    "type": "string",
                    "description": "Meeting room ID"
                },
                "city": {
                    "type": "string",
                    "description": "City where the meeting room is located"
                },
                "connection_type": {
                    "type": "string",
                    "description": "Type of internet connection"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "internet_status": {
                    "type": "string",
                    "description": "Internet connection status"
                }
            }
        }
    },
    {
        "name": "check_booking_confirmation",
        "description": "Check booking confirmation information",
        "arguments": {
            "type": "object",
            "properties": {
                "communication_method": {
                    "type": "string",
                    "description": "Notification method, such as email or SMS"
                },
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                },
                "customer_name": {
                    "type": "string",
                    "description": "Customer name"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Booking confirmation status"
                },
                "details": {
                    "type": "string",
                    "description": "Booking details"
                }
            }
        }
    },
    {
        "name": "assign_staff_to_meeting_room",
        "description": "Assign staff to the meeting room",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_room_address": {
                    "type": "string",
                    "description": "Meeting room address"
                },
                "entry_method": {
                    "type": "string",
                    "description": "Entry method"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "assignment_status": {
                    "type": "string",
                    "description": "Staff assignment status"
                }
            }
        }
    },
    {
        "name": "arrange_technical_staff",
        "description": "Arrange technical staff to prepare the required meeting facilities based on the meeting room number, city, and meeting time",
        "arguments": {
            "type": "object",
            "properties": {
                "equipment_list": {
                    "type": "string",
                    "description": "List of meeting facilities to be prepared"
                },
                "roomID": {
                    "type": "string",
                    "description": "Meeting room number"
                },
                "city": {
                    "type": "string",
                    "description": "City where the meeting room is located"
                },
                "startTime": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "endTime": {
                    "type": "string",
                    "description": "Meeting end time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "arrangement_status": {
                    "type": "string",
                    "description": "Status of the facility preparation and testing"
                }
            }
        }
    },
    {
        "name": "select_meeting_location",
        "description": "Select an appropriate meeting venue based on location, time, and budget",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Meeting location"
                },
                "date_time": {
                    "type": "string",
                    "description": "Meeting date and time"
                },
                "budget": {
                    "type": "integer",
                    "description": "Budget"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_location": {
                    "type": "string",
                    "description": "Selected meeting venue"
                }
            }
        }
    },
    {
        "name": "book_and_pay_for_meeting_room",
        "description": "Enter reservation information and complete payment for the meeting room",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_room_details": {
                    "type": "string",
                    "description": "Meeting room details"
                },
                "meeting_time": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "duration": {
                    "type": "string",
                    "description": "Meeting duration"
                },
                "number_of_people": {
                    "type": "string",
                    "description": "Number of participants"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Meeting room booking status"
                }
            }
        }
    },
    {
        "name": "write_on_whiteboard",
        "description": "Assign staff to write on the whiteboard in the meeting room",
        "arguments": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The content to be written on the whiteboard"
                },
                "staff": {
                    "type": "string",
                    "description": "The assigned staff member"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "writing_status": {
                    "type": "string",
                    "description": "Whiteboard writing status"
                }
            }
        }
    },
    {
        "name": "share_document",
        "description": "Used to share a document to a specified entity through a specified method",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The path of the document to be shared"
                },
                "recipient": {
                    "type": "string",
                    "description": "Recipient's email or sharing platform account"
                },
                "document_type": {
                    "type": "string",
                    "description": "Type of the document"
                },
                "share_method": {
                    "type": "string",
                    "description": "Method of sharing"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the sharing operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "create_document",
        "description": "Create a new document report",
        "arguments": {
            "type": "object",
            "properties": {
                "document_name": {
                    "type": "string",
                    "description": "The name of the document"
                },
                "content": {
                    "type": "string",
                    "description": "The content of the document"
                },
                "template": {
                    "type": "string",
                    "description": "The name of the document template"
                },
                "document_type": {
                    "type": "string",
                    "description": "The type of the document"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "The creation status of the document",
                    "type": "boolean"
                },
                "session_id": {
                    "description": "The ID of the document editing session",
                    "type": "string"
                },
                "document_id": {
                    "description": "The ID of the newly created document",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_appointment_reminder",
        "description": "Set a reminder on the user's phone or electronic calendar for the day before the appointment",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "User contact information"
                },
                "time": {
                    "type": "string",
                    "description": "Time to set the reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Reminder setup status"
                }
            }
        }
    },
    {
        "name": "send_document",
        "description": "Send the document to the specified email address",
        "arguments": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string",
                    "description": "Document transmission method"
                },
                "document": {
                    "type": "string",
                    "description": "The content of the document to be sent"
                },
                "recipient": {
                    "type": "string",
                    "description": "Recipient email address"
                },
                "user_id": {
                    "type": "string",
                    "description": "User ID"
                },
                "document_id": {
                    "type": "string",
                    "description": "Document ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Document sending status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_and_book_room",
        "description": "Check and book a meeting room",
        "arguments": {
            "type": "object",
            "properties": {
                "room_number": {
                    "type": "string",
                    "description": "Meeting room number"
                },
                "meeting_date": {
                    "type": "string",
                    "description": "Meeting date"
                },
                "schedule_title": {
                    "type": "string",
                    "description": "Schedule title"
                },
                "schedule_time": {
                    "type": "string",
                    "description": "Schedule start time"
                },
                "schedule_duration": {
                    "type": "integer",
                    "description": "Schedule duration (minutes)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Meeting room booking status"
                }
            }
        }
    },
    {
        "name": "meeting_room_availability_check",
        "description": "Check the availability of meeting rooms for a given address and time",
        "arguments": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Meeting room address"
                },
                "date": {
                    "type": "string",
                    "description": "Date of inquiry"
                },
                "time": {
                    "type": "string",
                    "description": "Time period of inquiry"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "string",
                    "description": "Whether the meeting room is available"
                }
            }
        }
    },
    {
        "name": "create_todo",
        "description": "Set as to-do",
        "arguments": {
            "type": "object",
            "properties": {
                "todo_id": {
                    "type": "string",
                    "description": "The id of the to-do"
                },
                "task_title": {
                    "type": "string",
                    "description": "Task title"
                },
                "deadline": {
                    "type": "string",
                    "description": "Deadline"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority, the higher the value, the higher the priority"
                },
                "status": {
                    "type": "string",
                    "description": "Task status, such as not started, in progress, completed, etc."
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the to-do was successfully created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_spreadsheet",
        "description": "Create a new spreadsheet file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The save path for the new spreadsheet file"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the file creation operation was successful"
                }
            }
        }
    },
    {
        "name": "set_daily_reminder",
        "description": "Set a daily recurring reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Reminder date"
                },
                "reminder": {
                    "type": "string",
                    "description": "Reminder content"
                },
                "time": {
                    "type": "string",
                    "description": "Reminder time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Reminder setting status"
                }
            }
        }
    },
    {
        "name": "send_reminder",
        "description": "Send maintenance reminder to user",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "User contact information"
                },
                "repairDate": {
                    "type": "string",
                    "description": "Maintenance date"
                },
                "repairTime": {
                    "type": "string",
                    "description": "Maintenance time"
                },
                "message": {
                    "type": "string",
                    "description": "Reminder message to be sent"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "description": "Reminder sending status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "add_meeting_reminder",
        "description": "Set a reminder for a specified meeting",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_time": {
                    "type": "string",
                    "description": "The time of the meeting"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "The time of the reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "The status of whether the reminder was set successfully"
                }
            }
        }
    },
    {
        "name": "add_reminder",
        "description": "Add reminder event",
        "arguments": {
            "type": "object",
            "properties": {
                "reminder_id": {
                    "type": "string",
                    "description": "ID of the reminder"
                },
                "event_title": {
                    "type": "string",
                    "description": "Event title"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "Time of the reminder"
                },
                "reminder_location": {
                    "type": "string",
                    "description": "Location of the reminder"
                },
                "reminder_frequency": {
                    "type": "integer",
                    "description": "Frequency of the reminder (days)"
                },
                "reminder_name": {
                    "type": "string",
                    "description": "Name of the reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the reminder was successfully added",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_and_set_reminder",
        "description": "Create and set a reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Reminder content"
                },
                "time": {
                    "type": "string",
                    "description": "Reminder set time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Reminder set status"
                }
            }
        }
    },
    {
        "name": "add_calendar_event",
        "description": "Add an event to the calendar and set a reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "event_title": {
                    "type": "string",
                    "description": "Event title"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "Reminder time"
                },
                "eventDetails": {
                    "type": "string",
                    "description": "Detailed information of the event"
                },
                "eventTime": {
                    "type": "string",
                    "description": "Event time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "add_status": {
                    "type": "string",
                    "description": "Event addition status"
                }
            }
        }
    },
    {
        "name": "set_single_reminder",
        "description": "Set a one-time reminder event",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Reminder date"
                },
                "time": {
                    "type": "string",
                    "description": "Reminder time"
                },
                "content": {
                    "type": "string",
                    "description": "Reminder content"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Status of whether the reminder was set successfully"
                }
            }
        }
    },
    {
        "name": "share_schedule",
        "description": "Share schedule permissions",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "The ID of the schedule"
                },
                "user_id": {
                    "type": "string",
                    "description": "The ID of the user"
                },
                "permission_level": {
                    "type": "string",
                    "description": "Permission level"
                },
                "share_time": {
                    "type": "string",
                    "description": "Share time"
                },
                "expiry_time": {
                    "type": "string",
                    "description": "Expiry time of the share"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the schedule was shared successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "update_schedule",
        "description": "Update user's schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "string",
                    "description": "Event name"
                },
                "start_time": {
                    "type": "string",
                    "description": "Event start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Event end time"
                },
                "studentName": {
                    "type": "string",
                    "description": "Student's name"
                },
                "studentClass": {
                    "type": "string",
                    "description": "Student's class name"
                },
                "newCourses": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "dayOfWeek": {
                                "type": "integer",
                                "description": "Day of the week for the class, corresponding to 1 to 5 for Monday to Friday",
                                "minimum": 1,
                                "maximum": 5
                            },
                            "timeSlot": {
                                "type": "string",
                                "description": "Class time slot"
                            },
                            "courseName": {
                                "type": "string",
                                "description": "Course name"
                            },
                            "classroom": {
                                "type": "string",
                                "description": "Classroom"
                            }
                        },
                        "required": [
                            "dayOfWeek",
                            "timeSlot",
                            "courseName",
                            "classroom"
                        ]
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "type": "string",
                    "description": "Schedule update status"
                }
            }
        }
    },
    {
        "name": "add_to_agenda",
        "description": "Add booking information to the user's agenda management tool",
        "arguments": {
            "type": "object",
            "properties": {
                "booking_date": {
                    "type": "string",
                    "description": "The date of the booking"
                },
                "booking_time": {
                    "type": "string",
                    "description": "The time of the booking"
                },
                "address": {
                    "type": "string",
                    "description": "The address of the booked service"
                },
                "city": {
                    "type": "string",
                    "description": "The city of the booked service"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "add_status": {
                    "type": "string",
                    "description": "The status of the addition to the agenda"
                }
            }
        }
    },
    {
        "name": "import_schedule",
        "description": "Import schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "ID of the schedule"
                },
                "event_name": {
                    "type": "string",
                    "description": "Name of the event"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "End time"
                },
                "location": {
                    "type": "string",
                    "description": "Location of the event"
                },
                "reminders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Reminder settings (e.g., '10 minutes before', '1 hour before')"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the schedule was successfully imported",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "share_agenda",
        "description": "Share Agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "ID of the agenda"
                },
                "shared_user_id": {
                    "type": "string",
                    "description": "User ID of the sharee"
                },
                "permission_level": {
                    "type": "string",
                    "description": "Sharing permission level"
                },
                "sharing_time": {
                    "type": "string",
                    "description": "Time of sharing"
                },
                "expiration_time": {
                    "type": "string",
                    "description": "Expiration time of the share"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the agenda was shared successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "arrange_activities",
        "description": "Arrange activity schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Destination"
                },
                "start_date": {
                    "type": "string",
                    "description": "Start Date"
                },
                "end_date": {
                    "type": "string",
                    "description": "End Date"
                },
                "preferences": {
                    "type": "string",
                    "description": "User Preferences"
                },
                "activities": {
                    "type": "string",
                    "description": "Activities"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "activity_schedule": {
                    "type": "string",
                    "description": "Activity Schedule"
                }
            }
        }
    },
    {
        "name": "set_agenda_location",
        "description": "Set agenda location",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The ID of the agenda"
                },
                "agenda_title": {
                    "type": "string",
                    "description": "The name of the agenda"
                },
                "location_name": {
                    "type": "string",
                    "description": "The name of the location"
                },
                "location_address": {
                    "type": "string",
                    "description": "The detailed address of the location"
                },
                "location_coordinates": {
                    "type": "string",
                    "description": "The latitude and longitude coordinates of the location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the agenda location was successfully set",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "search_agenda",
        "description": "Search Agenda Schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "ID of the agenda"
                },
                "agenda_keyword": {
                    "type": "string",
                    "description": "Keyword to search for"
                },
                "search_start_time": {
                    "type": "string",
                    "description": "Start time of the search"
                },
                "search_end_time": {
                    "type": "string",
                    "description": "End time of the search"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_results": {
                    "description": "Search Results",
                    "type": "string"
                },
                "agenda_conflicts": {
                    "type": "array",
                    "description": "List of agendas conflicting with the specified time"
                }
            }
        }
    },
    {
        "name": "send_email_draft",
        "description": "Send the created email draft",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Email sending status"
                }
            }
        }
    },
    {
        "name": "schedule_email_review",
        "description": "Arrange time to review emails according to schedule availability",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "The schedule id for viewing"
                },
                "user_id": {
                    "type": "string",
                    "description": "The user's id"
                },
                "date": {
                    "type": "string",
                    "description": "The date you want to view"
                },
                "time_range": {
                    "type": "string",
                    "description": "The time range you want to view"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "review_time": {
                    "description": "The arranged time for email review",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "compose_email",
        "description": "Compose an email",
        "arguments": {
            "type": "object",
            "properties": {
                "subject": {
                    "type": "string",
                    "description": "Email subject"
                },
                "body": {
                    "type": "string",
                    "description": "Email body"
                },
                "recipient": {
                    "type": "string",
                    "description": "Recipient's email address"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the email was successfully composed",
                    "type": "string"
                },
                "email_id": {
                    "description": "The ID of the successfully composed email",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "read_agenda",
        "description": "Read agenda information",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The ID of the agenda"
                },
                "time_zone": {
                    "type": "string",
                    "description": "The time zone for the query"
                },
                "date": {
                    "type": "string",
                    "description": "The date being queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the read was successful",
                    "type": "string"
                },
                "agenda": {
                    "description": "Details of the agenda",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "schedule_email",
        "description": "Schedule to send an email at a specified time",
        "arguments": {
            "type": "object",
            "properties": {
                "sender": {
                    "type": "string",
                    "description": "Sender's email address"
                },
                "receiver": {
                    "type": "string",
                    "description": "Receiver's email address"
                },
                "subject": {
                    "type": "string",
                    "description": "Email subject"
                },
                "content": {
                    "type": "string",
                    "description": "Email content"
                },
                "send_time": {
                    "type": "string",
                    "description": "Email sending time"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "email"
                    },
                    "description": "List of recipient email addresses"
                },
                "attachment_path": {
                    "type": "string",
                    "description": "Path of the attachment file"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_status": {
                    "type": "string",
                    "description": "Email scheduling status"
                }
            }
        }
    },
    {
        "name": "agenda_sorting",
        "description": "Sort the agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The ID of the agenda"
                },
                "agenda_title": {
                    "type": "string",
                    "description": "The name of the agenda"
                },
                "start_time": {
                    "type": "string",
                    "description": "The start time of the agenda"
                },
                "end_time": {
                    "type": "string",
                    "description": "The end time of the agenda"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the agenda"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the agenda was successfully sorted",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "conference_query",
        "description": "Query the conference schedule in a specific city within a designated date range",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "start_date": {
                    "type": "string",
                    "description": "Start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "conference_list": {
                    "type": "string",
                    "description": "Conference list"
                }
            }
        }
    },
    {
        "name": "video_conference_tool",
        "description": "Video conference tool that allows setting meeting time, participants, and whether a password is required",
        "arguments": {
            "type": "object",
            "properties": {
                "meetingTitle": {
                    "type": "string",
                    "description": "Meeting subject, no more than 50 characters",
                    "maxLength": 50,
                    "example": "Weekly Meeting"
                },
                "meetingTime": {
                    "type": "string",
                    "description": "Meeting start time",
                    "format": "date-time",
                    "example": "2022/12/25 11:00"
                },
                "meetingDuration": {
                    "type": "integer",
                    "description": "Meeting duration in minutes",
                    "minimum": 15,
                    "maximum": 240,
                    "example": 60
                },
                "participants": {
                    "type": "array",
                    "description": "List of participant email addresses",
                    "items": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "needPassword": {
                    "type": "boolean",
                    "description": "Whether a meeting password is needed"
                },
                "password": {
                    "type": "string",
                    "description": "Meeting password, required when needPassword is true, length 6-12 characters",
                    "minLength": 6,
                    "maxLength": 12
                }
            },
            "dependencies": {
                "password": [
                    "needPassword"
                ]
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "meetingLink": {
                    "description": "Meeting link",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "law_reference_tool",
        "description": "Regulation Reference Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "law_category": {
                    "description": "Legal Classification",
                    "type": "string"
                },
                "law_issue_date": {
                    "description": "Regulation Issue Date",
                    "type": "string"
                },
                "law_keywords": {
                    "description": "Regulation Related Keywords",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "law_details": {
                    "description": "Regulation Detailed Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "select_schedule",
        "description": "Find and select a schedule based on schedule name and original time",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_name": {
                    "type": "string",
                    "description": "Schedule name"
                },
                "original_time": {
                    "type": "string",
                    "description": "Original time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "description": "Selected schedule ID",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "advanced_programming_lesson_planner",
        "description": "A course planning tool for advanced programming learners, providing input parameters such as programming language, total study duration, and study topics",
        "arguments": {
            "type": "object",
            "properties": {
                "programming_language": {
                    "description": "Programming language",
                    "type": "string",
                    "enum": [
                        "Python",
                        "Java",
                        "C++",
                        "JavaScript",
                        "Rust"
                    ]
                },
                "total_study_hours": {
                    "description": "Total study duration in hours",
                    "type": "number",
                    "minimum": 10,
                    "maximum": 500
                },
                "study_topics": {
                    "description": "Array of study topics, options include 'algorithms', 'machine_learning', 'web_development', 'game_development', 'data_science'",
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 3,
                    "items": {
                        "type": "string",
                        "enum": [
                            "algorithms",
                            "machine_learning",
                            "web_development",
                            "game_development",
                            "data_science"
                        ]
                    }
                },
                "extend_material_resource": {
                    "description": "Whether to provide extended material resources, boolean value true or false",
                    "type": "boolean"
                },
                "interactive_tutorials": {
                    "description": "Whether to include interactive tutorials, boolean value true or false",
                    "type": "boolean"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "lesson_plan": {
                    "description": "Lesson plan",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "schedule_tool",
        "description": "Timetable generation tool, which only supports specific time arrangements within a week (Monday to Friday), and requires details to each class's course name, classroom, etc.",
        "arguments": {
            "type": "object",
            "properties": {
                "studentName": {
                    "type": "string",
                    "description": "Student name"
                },
                "studentClass": {
                    "type": "string",
                    "description": "Student class name",
                    "example": "Grade 7 Class 5"
                },
                "courses": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "dayOfWeek": {
                                "type": "integer",
                                "description": "Day of class, Monday to Friday correspond to 1 to 5",
                                "minimum": 1,
                                "maximum": 5
                            },
                            "timeSlot": {
                                "type": "string",
                                "description": "Class time slot, specific to morning, afternoon, or evening, such as 'morning', 'afternoon', 'evening'",
                                "enum": [
                                    "morning",
                                    "afternoon",
                                    "evening"
                                ]
                            },
                            "courseName": {
                                "type": "string",
                                "description": "Course name"
                            },
                            "classroom": {
                                "type": "string",
                                "description": "Classroom"
                            }
                        },
                        "required": [
                            "dayOfWeek",
                            "timeSlot",
                            "courseName",
                            "classroom"
                        ]
                    }
                },
                "teacherName": {
                    "type": "string",
                    "description": "Instructor's name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule": {
                    "type": "array",
                    "description": "Generated weekly timetable",
                    "items": {
                        "type": "object",
                        "properties": {
                            "dayOfWeek": {
                                "type": "integer",
                                "description": "Day of class, Monday to Friday correspond to 1 to 5"
                            },
                            "timeSlot": {
                                "type": "string",
                                "description": "Class time slot"
                            },
                            "courseName": {
                                "type": "string",
                                "description": "Course name"
                            },
                            "classroom": {
                                "type": "string",
                                "description": "Classroom"
                            },
                            "teacherName": {
                                "type": "string",
                                "description": "Instructor's name"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "create_schedule_tag",
        "description": "Create a new schedule tag and set its time range",
        "arguments": {
            "type": "object",
            "properties": {
                "tag_id": {
                    "type": "string",
                    "description": "The id of the tag"
                },
                "schedule_title": {
                    "type": "string",
                    "description": "Schedule title"
                },
                "tag_color": {
                    "type": "string",
                    "description": "Tag color"
                },
                "tag_start_date": {
                    "type": "string",
                    "description": "Tag start date"
                },
                "tag_end_date": {
                    "type": "string",
                    "description": "Tag end date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the tag was successfully created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "edit_agenda",
        "description": "Edit Agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "ID of the agenda"
                },
                "new_agenda_title": {
                    "type": "string",
                    "description": "New title of the agenda"
                },
                "new_agenda_time": {
                    "type": "string",
                    "description": "New time of the agenda"
                },
                "new_agenda_location": {
                    "type": "string",
                    "description": "New geographical location of the agenda"
                },
                "new_agenda_duration": {
                    "type": "integer",
                    "description": "New duration of the agenda (minutes)"
                },
                "schedule_description": {
                    "type": "string",
                    "description": "Detailed description of the agenda"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the agenda was successfully edited",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_agenda_label",
        "description": "Create agenda label",
        "arguments": {
            "type": "object",
            "properties": {
                "label_id": {
                    "type": "string",
                    "description": "ID of the label"
                },
                "label_description": {
                    "type": "string",
                    "description": "Description related to the label"
                },
                "agenda_id": {
                    "type": "string",
                    "description": "ID of the agenda"
                },
                "label_name": {
                    "type": "string",
                    "description": "Name of the label"
                },
                "label_color": {
                    "type": "string",
                    "description": "Color of the label"
                },
                "label_creation_time": {
                    "type": "string",
                    "description": "Creation time of the label"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the label was successfully created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_schedule_label",
        "description": "Create a new schedule label",
        "arguments": {
            "type": "object",
            "properties": {
                "label_id": {
                    "type": "string",
                    "description": "The id of the label"
                },
                "schedule_title": {
                    "type": "string",
                    "description": "The title of the schedule"
                },
                "label_date": {
                    "type": "string",
                    "description": "The date of the label"
                },
                "label_color": {
                    "type": "string",
                    "description": "The color of the label"
                },
                "label_priority": {
                    "type": "integer",
                    "description": "The priority of the label (from 1 to 5)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the label was successfully created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_agenda",
        "description": "Create a new agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The ID of the agenda"
                },
                "agenda_title": {
                    "type": "string",
                    "description": "The title of the agenda"
                },
                "start_time": {
                    "type": "string",
                    "description": "The start time of the agenda"
                },
                "end_time": {
                    "type": "string",
                    "description": "The end time of the agenda"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the agenda"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the participants"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the agenda was successfully created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "schedule_manager",
        "description": "Manage schedules and plans",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "The id of the schedule"
                },
                "task_title": {
                    "type": "string",
                    "description": "Task name"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "End time"
                },
                "task_priority": {
                    "type": "integer",
                    "description": "Task priority (1-5)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the task was successfully added to the schedule",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_schedule",
        "description": "Create a new schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "ID of the schedule"
                },
                "task": {
                    "type": "string",
                    "description": "Task description"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "End time"
                },
                "location": {
                    "type": "string",
                    "description": "Task location"
                },
                "schedule_title": {
                    "type": "string",
                    "description": "Schedule title"
                },
                "schedule_date": {
                    "type": "string",
                    "description": "Schedule date"
                },
                "schedule_description": {
                    "type": "string",
                    "description": "Description of the schedule"
                },
                "tag_id": {
                    "type": "string",
                    "description": "ID of the associated tag"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the schedule was created successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "backup_file",
        "description": "Create a backup copy of the specified file",
        "arguments": {
            "type": "object",
            "properties": {
                "original_file_path": {
                    "type": "string",
                    "description": "The path of the original file"
                },
                "backup_location": {
                    "type": "string",
                    "description": "The location where the backup file is stored"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the backup operation was successful",
                    "type": "boolean"
                },
                "backup_path": {
                    "description": "The file path of the backup copy",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "save_agenda_changes",
        "description": "Save changes to the agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The name of the agenda"
                },
                "date": {
                    "type": "string",
                    "description": "The date of the agenda"
                },
                "schedule_id": {
                    "type": "string",
                    "description": "The ID of the agenda"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "save_status": {
                    "description": "Whether the changes were successfully saved",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "view_schedule",
        "description": "View existing schedules",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "The schedule id for viewing"
                },
                "user_id": {
                    "type": "string",
                    "description": "The user's id"
                },
                "date": {
                    "type": "string",
                    "description": "The date to view"
                },
                "time_range": {
                    "type": "string",
                    "description": "The time range to view"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_details": {
                    "description": "The returned schedule details",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "backup_agenda",
        "description": "Backup Schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "backup_id": {
                    "type": "string",
                    "description": "ID of the backup"
                },
                "agenda_id": {
                    "type": "string",
                    "description": "ID of the agenda"
                },
                "backup_time": {
                    "type": "string",
                    "description": "Time of the backup"
                },
                "backup_location": {
                    "type": "string",
                    "description": "Geographical location of the backup storage"
                },
                "agenda_content": {
                    "type": "string",
                    "description": "Detailed description of the agenda content"
                },
                "schedule_title": {
                    "type": "string",
                    "description": "Title of the schedule"
                },
                "schedule_time": {
                    "type": "string",
                    "description": "Time of the schedule"
                },
                "schedule_duration": {
                    "type": "integer",
                    "description": "Duration of the schedule (minutes)"
                },
                "schedule_description": {
                    "type": "string",
                    "description": "Details of the schedule"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the backup was successfully completed",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_agenda_summary",
        "description": "Create an agenda summary and back it up to the cloud server",
        "arguments": {
            "type": "object",
            "properties": {
                "backup_id": {
                    "type": "string",
                    "description": "The id of the backup"
                },
                "agenda_items": {
                    "type": "array",
                    "description": "Array of agenda items to be summarized",
                    "items": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string",
                                "description": "Agenda title"
                            },
                            "time": {
                                "type": "string",
                                "description": "Agenda time"
                            },
                            "duration": {
                                "type": "integer",
                                "description": "Duration of the agenda (minutes)"
                            },
                            "description": {
                                "type": "string",
                                "description": "Details of the agenda"
                            }
                        }
                    }
                },
                "backup_location": {
                    "type": "string",
                    "description": "Geographical location of the backup storage"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the backup was successfully created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "schedule_sms",
        "description": "Used for scheduling SMS services",
        "arguments": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Content of the SMS",
                    "type": "string"
                },
                "send_time": {
                    "description": "Scheduled time for sending the SMS",
                    "type": "string"
                },
                "phone_number": {
                    "type": "string",
                    "description": "The recipient's mobile phone number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_status": {
                    "description": "SMS scheduling status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_schedule_tag",
        "description": "Set a tag for the schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "tag_id": {
                    "type": "string",
                    "description": "The ID of the tag"
                },
                "schedule_title": {
                    "type": "string",
                    "description": "The title of the schedule"
                },
                "tag_name": {
                    "type": "string",
                    "description": "The name of the tag"
                },
                "tag_color": {
                    "type": "string",
                    "description": "The color of the tag"
                },
                "tag_description": {
                    "type": "string",
                    "description": "The description of the tag"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the tag was successfully set",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "schedule_planner",
        "description": "Arrange and manage personal schedules",
        "arguments": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string",
                    "description": "The id of the event"
                },
                "task_name": {
                    "type": "string",
                    "description": "Task name"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "End time"
                },
                "location": {
                    "type": "string",
                    "description": "The geographical location of the event"
                },
                "priority": {
                    "type": "string",
                    "description": "The priority of the task (low, medium, high)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the schedule is successfully arranged",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "adjust_conflicting_schedule",
        "description": "Make necessary adjustments to the detected conflicting schedules",
        "arguments": {
            "type": "object",
            "properties": {
                "conflicts_info": {
                    "type": "string",
                    "description": "Information about the conflicting schedules that need to be adjusted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "adjustment_status": {
                    "type": "string",
                    "description": "Status of the schedule adjustment"
                }
            }
        }
    },
    {
        "name": "restore_agenda",
        "description": "Restore schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "ID of the agenda"
                },
                "agenda_name": {
                    "type": "string",
                    "description": "Name of the agenda"
                },
                "startDate": {
                    "type": "string",
                    "description": "Start date of the restoration"
                },
                "endDate": {
                    "type": "string",
                    "description": "End date of the restoration"
                },
                "location": {
                    "type": "string",
                    "description": "Geographical location of the agenda"
                },
                "duration": {
                    "type": "integer",
                    "description": "Duration of the agenda (minutes)"
                },
                "schedule_id": {
                    "type": "string",
                    "description": "ID of the schedule to be restored"
                },
                "previous_state": {
                    "type": "string",
                    "description": "State of the agenda before restoration"
                },
                "current_state": {
                    "type": "string",
                    "description": "State of the agenda after restoration"
                },
                "restored_time": {
                    "type": "string",
                    "description": "Time of the agenda restoration"
                },
                "restored_duration": {
                    "type": "integer",
                    "description": "Duration of the agenda restoration (minutes)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the schedule was successfully restored",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "repeat_event_scheduler",
        "description": "Schedule Repeated Events",
        "arguments": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string",
                    "description": "Event ID"
                },
                "event_title": {
                    "type": "string",
                    "description": "Event Title"
                },
                "start_date": {
                    "type": "string",
                    "description": "Start Date"
                },
                "end_date": {
                    "type": "string",
                    "description": "End Date"
                },
                "event_intervals": {
                    "type": "integer",
                    "description": "Event Interval Days"
                },
                "event_location": {
                    "type": "string",
                    "description": "Event Geographic Location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the event was successfully scheduled",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "add_agenda_reminder",
        "description": "Add a new reminder in the schedule management tool",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date of the schedule reminder"
                },
                "topic": {
                    "type": "string",
                    "description": "The topic of the schedule reminder"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "Reminder time, format as 'Every Week XHH:MM'"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the schedule"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Status of the schedule reminder addition"
                }
            }
        }
    },
    {
        "name": "adjust_schedule",
        "description": "Adjust schedule timing",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "ID of the schedule"
                },
                "new_start_time": {
                    "type": "string",
                    "description": "New start time"
                },
                "new_end_time": {
                    "type": "string",
                    "description": "New end time"
                },
                "adjust_reason": {
                    "type": "string",
                    "description": "Reason for adjustment"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the schedule was successfully adjusted",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "reschedule_conflicting_events",
        "description": "Reschedule or cancel events that conflict with the booking time",
        "arguments": {
            "type": "object",
            "properties": {
                "booking_date": {
                    "type": "string",
                    "description": "The date of the booking"
                },
                "booking_time": {
                    "type": "string",
                    "description": "The time of the booking"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reschedule_status": {
                    "type": "string",
                    "description": "The status of the rescheduled events"
                }
            }
        }
    },
    {
        "name": "import_agenda",
        "description": "Import agenda tool",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The ID of the agenda"
                },
                "agenda_title": {
                    "type": "string",
                    "description": "The title of the agenda"
                },
                "agenda_start_time": {
                    "type": "string",
                    "description": "The start time of the agenda"
                },
                "agenda_end_time": {
                    "type": "string",
                    "description": "The end time of the agenda"
                },
                "agenda_participants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The participants of the agenda"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the agenda was successfully imported",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_schedule_date_range",
        "description": "Set the start and end dates of the schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_title": {
                    "type": "string",
                    "description": "Title of the schedule"
                },
                "start_date": {
                    "type": "string",
                    "description": "Start date of the schedule"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date of the schedule"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "date_range_status": {
                    "description": "Whether the date range was successfully set",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "daily_schedule_manager",
        "description": "Schedule Management Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "event_name": {
                    "description": "Event name, must be 1 to 40 characters",
                    "type": "string"
                },
                "event_start": {
                    "description": "Event start time:ss",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-07-12 14:30:00"
                },
                "event_end": {
                    "description": "Event end time:ss",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-07-12 16:30:00"
                },
                "event_location": {
                    "description": "Event location",
                    "type": "string"
                },
                "category": {
                    "description": "Event category, can be 'Work', 'Personal', 'Leisure', 'Other'",
                    "type": "string",
                    "enum": [
                        "Work",
                        "Personal",
                        "Leisure",
                        "Other"
                    ]
                },
                "importance": {
                    "description": "Event importance level, ranging from 1 to 5, where 1 is the most important",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5
                },
                "note": {
                    "description": "Note",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_info": {
                    "description": "Schedule information",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "set_specific_ringtone",
        "description": "Set a specific ringtone for an alarm at a specific time and frequency",
        "arguments": {
            "type": "object",
            "properties": {
                "alarm_time": {
                    "type": "string",
                    "description": "Alarm time"
                },
                "alarm_frequency": {
                    "type": "string",
                    "description": "Alarm frequency"
                },
                "ringtone": {
                    "type": "string",
                    "description": "Name of the ringtone to set"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Result of the ringtone setting"
                }
            }
        }
    },
    {
        "name": "update_user_schedule_status",
        "description": "Update the user's schedule status",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "The user ID for which the schedule status needs to be updated"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "updated": {
                    "description": "Whether the user's schedule status has been updated",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "set_schedule_location",
        "description": "Set schedule location",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "Schedule ID"
                },
                "schedule_title": {
                    "type": "string",
                    "description": "Schedule title"
                },
                "schedule_date": {
                    "type": "string",
                    "description": "Schedule date"
                },
                "schedule_location": {
                    "type": "string",
                    "description": "Schedule location"
                },
                "schedule_time": {
                    "type": "string",
                    "description": "Schedule start time"
                },
                "schedule_duration": {
                    "type": "integer",
                    "description": "Schedule duration (minutes)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the schedule location was successfully set",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_tomorrow_agenda_and_tasks",
        "description": "Get the important agenda and to-do list for the next day",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "agenda_info": {
                    "description": "The agenda for the next day",
                    "type": "string"
                },
                "tasks": {
                    "description": "To-do list",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "order_flowers",
        "description": "Reserve specific types and quantities of fresh flowers, and arrange delivery",
        "arguments": {
            "type": "object",
            "properties": {
                "supplier": {
                    "type": "string",
                    "description": "Supplier"
                },
                "flower_type": {
                    "type": "string",
                    "description": "Type of flower"
                },
                "quantity": {
                    "type": "string",
                    "description": "Quantity of flowers"
                },
                "delivery_time": {
                    "type": "string",
                    "description": "Flower delivery time"
                },
                "florist_info": {
                    "type": "string",
                    "description": "Selected florist information"
                },
                "days_before_event": {
                    "type": "integer",
                    "description": "Days to reserve in advance"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "order_status": {
                    "description": "Whether the reservation is successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "search_local_restaurants",
        "description": "Search for local restaurants with unique features and check the availability for reservation at noon",
        "arguments": {
            "type": "object",
            "properties": {
                "user_location": {
                    "type": "string",
                    "description": "The user's current location"
                },
                "time": {
                    "type": "string",
                    "description": "Reservation time"
                },
                "date": {
                    "type": "string",
                    "description": "Reservation date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "restaurants_list": {
                    "description": "List of restaurants that meet the criteria",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "schedule_sorter",
        "description": "Schedule Sorting Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string",
                    "description": "ID of the event"
                },
                "event_name": {
                    "type": "string",
                    "description": "Name of the event"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time of the event"
                },
                "end_time": {
                    "type": "string",
                    "description": "End time of the event"
                },
                "location": {
                    "type": "string",
                    "description": "Geographical location of the event"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority of the event"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sort_results": {
                    "description": "Sorted schedule",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "add_periodic_event",
        "description": "Add periodic event",
        "arguments": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string",
                    "description": "Event ID"
                },
                "event_name": {
                    "type": "string",
                    "description": "Event name"
                },
                "start_time": {
                    "type": "string",
                    "description": "Event start time"
                },
                "duration": {
                    "type": "string",
                    "description": "Event duration"
                },
                "end_time": {
                    "type": "string",
                    "description": "Event end time"
                },
                "start_date": {
                    "type": "string",
                    "description": "Event start date"
                },
                "location": {
                    "type": "string",
                    "description": "Event location"
                },
                "frequency": {
                    "type": "integer",
                    "description": "Event frequency (days)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the event was successfully added",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "schedule_flower_delivery",
        "description": "Arrange for flowers to be delivered at a specified time and address",
        "arguments": {
            "type": "object",
            "properties": {
                "delivery_time": {
                    "type": "string",
                    "description": "Delivery time"
                },
                "delivery_address": {
                    "type": "string",
                    "description": "Delivery address"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "delivery_status": {
                    "type": "string",
                    "description": "Whether the flower delivery was successful"
                }
            }
        }
    },
    {
        "name": "contact_restaurant",
        "description": "Contact the restaurant a specified number of days in advance to inquire about special family gathering meal packages or services, and to obtain a menu and price list",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_type": {
                    "type": "string",
                    "description": "Type of restaurant"
                },
                "days_before_event": {
                    "type": "integer",
                    "description": "Number of days to contact in advance"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contact_status": {
                    "type": "string",
                    "description": "Whether the restaurant was successfully contacted and information obtained"
                },
                "menu": {
                    "type": "string",
                    "description": "Menu information obtained"
                },
                "pricing": {
                    "type": "string",
                    "description": "Pricing information obtained"
                }
            }
        }
    },
    {
        "name": "export_calendar",
        "description": "Export calendar events",
        "arguments": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string",
                    "description": "The ID of the event"
                },
                "event_title": {
                    "type": "string",
                    "description": "Event name"
                },
                "event_start_time": {
                    "type": "string",
                    "description": "Event start time"
                },
                "event_end_time": {
                    "type": "string",
                    "description": "Event end time"
                },
                "event_location": {
                    "type": "string",
                    "description": "Geographical location of the event"
                },
                "event_description": {
                    "type": "string",
                    "description": "Event description information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the event was successfully exported",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_document_with_events",
        "description": "Create a document and insert event information",
        "arguments": {
            "type": "object",
            "properties": {
                "event1_info": {
                    "type": "string",
                    "description": "Detailed information of the first event"
                },
                "event2_info": {
                    "type": "string",
                    "description": "Detailed information of the second event"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "document": {
                    "description": "The created document object",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "export_document_to_pdf",
        "description": "Export the document to PDF format",
        "arguments": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "object",
                    "description": "The document object to be exported"
                },
                "format": {
                    "type": "string",
                    "description": "The file format to export"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the export was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_instruction_document",
        "description": "Create a guide document containing specified steps",
        "arguments": {
            "type": "object",
            "properties": {
                "steps": {
                    "type": "array",
                    "description": "List of steps to be included in the document",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "document_path": {
                    "description": "Path of the created document",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_todo",
        "description": "Set To-Do Item",
        "arguments": {
            "type": "object",
            "properties": {
                "todo_id": {
                    "type": "string",
                    "description": "ID of the to-do item"
                },
                "task_title": {
                    "type": "string",
                    "description": "Task title"
                },
                "due_date": {
                    "type": "string",
                    "description": "Due date"
                },
                "priority_level": {
                    "type": "string",
                    "description": "Priority level: High, Medium, Low"
                },
                "task_status": {
                    "type": "string",
                    "description": "Task status: Not Started, In Progress, Completed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the to-do item was successfully created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_advance_notification",
        "description": "Set advance notification for a specified event",
        "arguments": {
            "type": "object",
            "properties": {
                "event_title": {
                    "type": "string",
                    "description": "Event name"
                },
                "advance_time": {
                    "type": "string",
                    "description": "Advance notification time"
                },
                "notification_method": {
                    "type": "string",
                    "description": "Notification method"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the advance notification was successfully set",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_email_draft",
        "description": "Create email draft",
        "arguments": {
            "type": "object",
            "properties": {
                "recipients": {
                    "type": "string",
                    "description": "Recipient addresses, separated by semicolons"
                },
                "subject": {
                    "type": "string",
                    "description": "Email subject"
                },
                "body": {
                    "type": "string",
                    "description": "Email body content"
                },
                "attachment_path": {
                    "type": "string",
                    "description": "Path to the attachment file"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the email draft was created successfully",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "create_and_send_email_reminders",
        "description": "Create and send email reminders for specified events",
        "arguments": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string",
                    "description": "Email address to receive reminders"
                },
                "reminders": {
                    "type": "array",
                    "description": "List of reminder events",
                    "items": {
                        "type": "object",
                        "properties": {
                            "event_name": {
                                "type": "string",
                                "description": "Event name"
                            },
                            "event_time": {
                                "type": "string",
                                "description": "Specific time of the event"
                            },
                            "reminder_time": {
                                "type": "string",
                                "description": "Time to send the reminder"
                            }
                        },
                        "required": [
                            "event_name",
                            "event_time",
                            "reminder_time"
                        ]
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "array",
                    "description": "Sending status of each reminder",
                    "items": {
                        "type": "object",
                        "properties": {
                            "event_name": {
                                "type": "string",
                                "description": "Event name"
                            },
                            "status": {
                                "type": "string",
                                "description": "Success or failure of sending"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "create_and_save_calendar_event",
        "description": "Create and save calendar event",
        "arguments": {
            "type": "object",
            "properties": {
                "event_title": {
                    "type": "string",
                    "description": "Event title"
                },
                "event_start_time": {
                    "type": "string",
                    "description": "Event start time"
                },
                "event_end_time": {
                    "type": "string",
                    "description": "Event end time"
                },
                "event_description": {
                    "type": "string",
                    "description": "Event description"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "creation_status": {
                    "type": "string",
                    "description": "Event creation status"
                }
            }
        }
    },
    {
        "name": "add_event_reminder",
        "description": "Add a reminder for a specified calendar event",
        "arguments": {
            "type": "object",
            "properties": {
                "event_title": {
                    "type": "string",
                    "description": "The title of the event to add a reminder for"
                },
                "reminder_title": {
                    "type": "string",
                    "description": "The title of the reminder"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "The time of the reminder"
                },
                "reminder_description": {
                    "type": "string",
                    "description": "The description of the reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "The status of whether the reminder was successfully set"
                }
            }
        }
    },
    {
        "name": "check_agenda",
        "description": "Check the schedule for a specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date to check"
                },
                "time_period": {
                    "type": "string",
                    "description": "The time period to check"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "has_important_meeting": {
                    "type": "boolean",
                    "description": "Whether there is an important meeting on that date"
                },
                "agenda_details": {
                    "type": "array",
                    "description": "Detailed agenda information"
                }
            }
        }
    },
    {
        "name": "query_additional_services",
        "description": "Query the list of additional services provided by the hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "services_list": {
                    "type": "array",
                    "description": "List of additional services provided by the hotel"
                }
            }
        }
    },
    {
        "name": "add_participant_to_booking",
        "description": "Add participants to an existing meeting reservation",
        "arguments": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "type": "string",
                    "description": "Booking ID"
                },
                "participant_email": {
                    "type": "string",
                    "description": "Participant's email address"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the participant was successfully added",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "purchase_schedule",
        "description": "Design tool for purchase schedule",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule": {
                    "type": "array",
                    "description": "List of purchase schedules, containing the time and details of each purchase item"
                }
            }
        }
    },
    {
        "name": "save_schedule",
        "description": "Save schedule settings",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_title": {
                    "type": "string",
                    "description": "Title of the schedule"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "save_status": {
                    "description": "Whether the schedule was saved successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "find_agenda",
        "description": "Find a specific agenda by name and time",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_name": {
                    "type": "string",
                    "description": "The name of the agenda"
                },
                "start_time": {
                    "type": "string",
                    "description": "The start time of the agenda"
                },
                "end_time": {
                    "type": "string",
                    "description": "The end time of the agenda"
                },
                "date": {
                    "type": "string",
                    "description": "The date of the agenda"
                },
                "user_id": {
                    "type": "string",
                    "description": "The user id"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the search was successful",
                    "type": "string"
                },
                "agenda_id": {
                    "description": "The id of the agenda found",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "verify_schedule",
        "description": "Verify if the time and location of the specified schedule are correct",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "Schedule ID"
                },
                "expected_time": {
                    "type": "string",
                    "description": "Expected time"
                },
                "expected_location": {
                    "type": "string",
                    "description": "Expected location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the schedule verification is successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "shared_calendar",
        "description": "Create and share calendar events",
        "arguments": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string",
                    "description": "The id of the event"
                },
                "event_title": {
                    "type": "string",
                    "description": "The name of the event"
                },
                "event_date": {
                    "type": "string",
                    "description": "The date of the event"
                },
                "event_location": {
                    "type": "string",
                    "description": "The location of the event"
                },
                "event_duration": {
                    "type": "integer",
                    "description": "The duration of the event (minutes)"
                },
                "shared_with": {
                    "type": "array",
                    "description": "List of users the event is shared with",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the event was successfully created and shared",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "document_share_tool",
        "description": "Document sharing tool, capable of permission control and version history management",
        "arguments": {
            "type": "object",
            "properties": {
                "docPath": {
                    "type": "string",
                    "description": "The path of the document to be shared, supports formats like doc, pdf, ppt, etc.",
                    "example": "D:/Documents/report.pdf"
                },
                "permission": {
                    "type": "string",
                    "description": "Sharing permissions, divided into 'read', 'write', 'admin'",
                    "enum": [
                        "read",
                        "write",
                        "admin"
                    ]
                },
                "versionControl": {
                    "type": "boolean",
                    "description": "Whether to enable version history management, true for enabled, false for disabled"
                },
                "shareWith": {
                    "type": "array",
                    "description": "List of users to share with, input the user's email address",
                    "items": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "message": {
                    "type": "string",
                    "description": "Additional information to include when sharing"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the file was shared successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_share_link",
        "description": "Send share link",
        "arguments": {
            "type": "object",
            "properties": {
                "email_list": {
                    "type": "array",
                    "description": "Recipient email list",
                    "items": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "share_link": {
                    "type": "string",
                    "description": "Share link"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Link sending status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "share_calendar",
        "description": "Share Calendar",
        "arguments": {
            "type": "object",
            "properties": {
                "calendar_id": {
                    "type": "string",
                    "description": "Calendar ID"
                },
                "user_id": {
                    "type": "string",
                    "description": "User ID"
                },
                "share_time": {
                    "type": "string",
                    "description": "Time Period for Sharing"
                },
                "is_editable": {
                    "type": "boolean",
                    "description": "Whether the Calendar is Editable"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the Calendar was Successfully Shared",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_shared_calendar",
        "description": "Create shared calendar",
        "arguments": {
            "type": "object",
            "properties": {
                "calendar_id": {
                    "type": "string",
                    "description": "ID of the calendar"
                },
                "event_title": {
                    "type": "string",
                    "description": "Event title"
                },
                "event_date": {
                    "type": "string",
                    "description": "Event date"
                },
                "event_time": {
                    "type": "string",
                    "description": "Event time"
                },
                "event_location": {
                    "type": "string",
                    "description": "Event geographic location"
                },
                "participants": {
                    "type": "array",
                    "description": "Email addresses of participants"
                },
                "duration": {
                    "type": "integer",
                    "description": "Duration of the event (minutes)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the shared calendar was created successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "generate_schedule_tag",
        "description": "Generate schedule tag",
        "arguments": {
            "type": "object",
            "properties": {
                "tag_id": {
                    "type": "string",
                    "description": "ID of the tag"
                },
                "schedule_title": {
                    "type": "string",
                    "description": "Title of the schedule"
                },
                "tag_color": {
                    "type": "string",
                    "description": "Color of the tag"
                },
                "tag_description": {
                    "type": "string",
                    "description": "Description of the tag"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "tag_creation_status": {
                    "description": "Whether the tag was successfully created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "add_attendees_to_invitation",
        "description": "Add attendees to the meeting invitation",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The ID of the agenda"
                },
                "attendees_list": {
                    "type": "array",
                    "description": "List of attendees"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the attendees were successfully added",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "email_reminder",
        "description": "Set up email reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "participants": {
                    "type": "string",
                    "description": "Email addresses of participants"
                },
                "content": {
                    "type": "string",
                    "description": "Email content"
                },
                "send_time": {
                    "type": "string",
                    "description": "Email sending time"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "Reminder time"
                },
                "email_template": {
                    "type": "string",
                    "description": "Email template content"
                },
                "subject": {
                    "type": "string",
                    "description": "Email subject"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "email_status": {
                    "description": "Whether the email was sent successfully",
                    "type": "string"
                },
                "setup_status": {
                    "type": "boolean",
                    "description": "Whether the email reminder was set up successfully"
                }
            }
        }
    },
    {
        "name": "select_activities",
        "description": "Select and assign daily main activities based on user interests and weather forecast information",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Travel destination"
                },
                "interests": {
                    "type": "string",
                    "description": "User interests"
                },
                "weather": {
                    "type": "array",
                    "description": "Weather forecast information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "activities": {
                    "type": "array",
                    "description": "Daily activities arrangement"
                }
            }
        }
    },
    {
        "name": "attach_agenda_to_invitation",
        "description": "Attach the meeting agenda to the invitation email and send it",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda": {
                    "type": "string",
                    "description": "Content of the meeting agenda"
                },
                "recipients": {
                    "type": "string",
                    "description": "List of participants' emails"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "email_status": {
                    "type": "string",
                    "description": "Email sending status"
                }
            }
        }
    },
    {
        "name": "display_monthly_agenda_overview",
        "description": "Display the agenda overview for a specified month",
        "arguments": {
            "type": "object",
            "properties": {
                "date_range": {
                    "type": "string",
                    "description": "The month for which to view the agenda overview"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the retrieval of the monthly agenda overview was successful",
                    "type": "string"
                },
                "overview": {
                    "description": "The agenda overview for the month",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_schedule_table",
        "description": "Create an empty schedule table",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether creation was successful",
                    "type": "string"
                },
                "schedule_table": {
                    "description": "The created empty schedule table",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "time_management",
        "description": "Manage schedules and time",
        "arguments": {
            "type": "object",
            "properties": {
                "task_id": {
                    "type": "string",
                    "description": "The id of the task"
                },
                "task_title": {
                    "type": "string",
                    "description": "The name of the task"
                },
                "start_time": {
                    "type": "string",
                    "description": "The start time of the task"
                },
                "end_time": {
                    "type": "string",
                    "description": "The end time of the task"
                },
                "task_priority": {
                    "type": "integer",
                    "description": "The priority level of the task"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the task is successfully scheduled",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "post_announcement",
        "description": "Publish an announcement on social platforms",
        "arguments": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content of the announcement",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "post_status": {
                    "description": "Announcement posting status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "calculate_next_friday_date",
        "description": "Calculate the specific date of next Friday",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "next_friday_date": {
                    "description": "The date of next Friday",
                    "type": "string",
                    "format": "date"
                }
            }
        }
    },
    {
        "name": "mark_agenda",
        "description": "Add a mark to the specified agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The agenda ID to be marked"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "mark_status": {
                    "type": "string",
                    "description": "The status of whether the agenda was successfully marked"
                }
            }
        }
    },
    {
        "name": "confirm_available_appointment_times",
        "description": "Confirm the available appointment times of the service center",
        "arguments": {
            "type": "object",
            "properties": {
                "service_center": {
                    "type": "string",
                    "description": "Service center"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "available_times": {
                    "type": "array",
                    "description": "List of available appointment times"
                }
            }
        }
    },
    {
        "name": "calendar_annotation",
        "description": "Add annotations in the calendar",
        "arguments": {
            "type": "object",
            "properties": {
                "annotation_id": {
                    "type": "string",
                    "description": "The id of the annotation"
                },
                "date": {
                    "type": "string",
                    "description": "The date the annotation is added"
                },
                "annotation_time": {
                    "type": "string",
                    "description": "The time of the annotation"
                },
                "annotation_location": {
                    "type": "string",
                    "description": "The geographical location of the annotation"
                },
                "annotation_content": {
                    "type": "string",
                    "description": "The content of the annotation"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the annotation was successfully added",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "calendar_note",
        "description": "Add calendar note",
        "arguments": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "string",
                    "description": "ID of the note"
                },
                "event_title": {
                    "type": "string",
                    "description": "Title of the event"
                },
                "note_date": {
                    "type": "string",
                    "description": "Date of the note"
                },
                "note_content": {
                    "type": "string",
                    "description": "Content of the note"
                },
                "priority_level": {
                    "type": "integer",
                    "description": "Priority level of the note (1-5)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the note was successfully added",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "share_schedule_permission",
        "description": "Share Schedule Permission",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "ID of the schedule"
                },
                "user_id": {
                    "type": "string",
                    "description": "ID of the user"
                },
                "permission_level": {
                    "type": "string",
                    "description": "Permission level"
                },
                "expiration_date": {
                    "type": "string",
                    "description": "Expiration date of the permission"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the permission was successfully shared",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "compare_and_organize_table",
        "description": "Compare and organize information in data tables",
        "arguments": {
            "type": "object",
            "properties": {
                "table_id": {
                    "description": "The ID of the data table to be organized",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "organize_status": {
                    "description": "Whether the data organization was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "manage_schedule",
        "description": "Manage and arrange schedules",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "The ID of the schedule"
                },
                "event_name": {
                    "type": "string",
                    "description": "Event name"
                },
                "event_time": {
                    "type": "string",
                    "description": "Event time"
                },
                "event_location": {
                    "type": "string",
                    "description": "Event geographical location"
                },
                "event_priority": {
                    "type": "integer",
                    "description": "Event priority (starting from 1, the smaller the number, the higher the priority)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the schedule was successfully arranged",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "regular_pattern_query",
        "description": "Retrieve user's regular income and expenditure pattern data",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "regular_pattern": {
                    "description": "User's regular income and expenditure pattern data",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "check_service_center_availability",
        "description": "Check the availability of the service center",
        "arguments": {
            "type": "object",
            "properties": {
                "service_center_id": {
                    "type": "string",
                    "description": "Service Center ID"
                },
                "date": {
                    "type": "string",
                    "description": "The date to inquire"
                },
                "time": {
                    "type": "string",
                    "description": "The time to inquire"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Availability status of the service center"
                },
                "availability": {
                    "type": "boolean",
                    "description": "Whether the service center is available"
                }
            }
        }
    },
    {
        "name": "order_status_query",
        "description": "A tool for querying and obtaining the user's order status",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "User account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "order_status": {
                    "description": "Order status information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "appliance_repair_rescheduling",
        "description": "Request to adjust the appliance repair appointment time",
        "arguments": {
            "type": "object",
            "properties": {
                "originalRequestID": {
                    "description": "Original repair request number",
                    "type": "string"
                },
                "newTime": {
                    "description": "New appointment service time",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "rescheduling_status": {
                    "description": "Rescheduling status",
                    "type": "string"
                },
                "newRequestID": {
                    "description": "New repair request number",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "rental_service_search",
        "description": "Search for camera rental services that meet specific criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "camera_model": {
                    "type": "string",
                    "description": "The camera model required for rental"
                },
                "rental_period": {
                    "type": "integer",
                    "description": "Rental period (in days)"
                },
                "budget": {
                    "type": "integer",
                    "description": "Budget limit"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_options": {
                    "type": "array",
                    "description": "List of rental services that meet the criteria"
                }
            }
        }
    },
    {
        "name": "online_search_repair_service",
        "description": "Search for repair service providers in a specific area and for a specific brand online",
        "arguments": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string",
                    "description": "Service area"
                },
                "brand": {
                    "type": "string",
                    "description": "Service brand"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_providers": {
                    "type": "array",
                    "description": "List of repair service providers found"
                }
            }
        }
    },
    {
        "name": "search_qualified_repair_service",
        "description": "Online search and selection of qualified repair service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceType": {
                    "type": "string",
                    "description": "Type of appliance"
                },
                "applianceBrand": {
                    "type": "string",
                    "description": "Brand of appliance"
                },
                "applianceModel": {
                    "type": "string",
                    "description": "Model of appliance"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_provider": {
                    "type": "string",
                    "description": "Name of the selected service provider"
                }
            }
        }
    },
    {
        "name": "send_business_message",
        "description": "Send business message",
        "arguments": {
            "type": "object",
            "properties": {
                "message_id": {
                    "type": "string",
                    "description": "The id of the message"
                },
                "receiver_id": {
                    "type": "string",
                    "description": "The id of the receiver"
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the message"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message"
                },
                "send_time": {
                    "type": "string",
                    "description": "The time when the message is sent"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the message was sent successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "authorized_service_center_search",
        "description": "Search for authorized service centers",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceBrand": {
                    "type": "string",
                    "description": "Appliance brand"
                },
                "applianceModel": {
                    "type": "string",
                    "description": "Appliance model"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_center": {
                    "description": "Information of the found service center",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "service_provider_search",
        "description": "Search and filter reputable service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceBrand": {
                    "type": "string",
                    "description": "Appliance brand"
                },
                "serviceType": {
                    "type": "string",
                    "description": "Service type"
                },
                "region": {
                    "type": "string",
                    "description": "User's region"
                },
                "applianceType": {
                    "type": "string",
                    "description": "Type of appliance needing repair"
                },
                "minimumRating": {
                    "type": "number",
                    "description": "Minimum acceptable service provider rating level"
                },
                "reputationThreshold": {
                    "type": "number",
                    "description": "Minimum threshold for service provider reputation score"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "provider_list": {
                    "type": "array",
                    "description": "List of service providers"
                },
                "availability": {
                    "type": "boolean",
                    "description": "Whether the service provider is available"
                },
                "ratings": {
                    "type": "array",
                    "description": "Ratings of the service provider"
                },
                "provider_status": {
                    "type": "string",
                    "description": "Service provider search and confirmation results"
                }
            }
        }
    },
    {
        "name": "send_repair_appointment_details",
        "description": "Send repair appointment details to user",
        "arguments": {
            "type": "object",
            "properties": {
                "contactNumber": {
                    "type": "string",
                    "description": "User contact number"
                },
                "repairTime": {
                    "type": "string",
                    "description": "Repair appointment time"
                },
                "repairmanDetails": {
                    "type": "string",
                    "description": "Repairman's name and contact information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "message_status": {
                    "type": "string",
                    "description": "Sending status"
                }
            }
        }
    },
    {
        "name": "get_service_center_working_hours",
        "description": "Get the working hours and available appointment dates of the service center",
        "arguments": {
            "type": "object",
            "properties": {
                "service_center_id": {
                    "type": "string",
                    "description": "Service Center ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "working_hours": {
                    "type": "string",
                    "description": "Working Hours"
                },
                "available_dates": {
                    "type": "array",
                    "description": "List of Available Appointment Dates"
                }
            }
        }
    },
    {
        "name": "qualified_repair_provider_search",
        "description": "Search for repair service providers with specific qualifications",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceBrand": {
                    "type": "string",
                    "description": "Appliance brand"
                },
                "qualification": {
                    "type": "string",
                    "description": "Required repair qualification"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "provider": {
                    "description": "Qualified service provider",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "home_cleaning_query",
        "description": "Home Cleaning Booking Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "cleaningDate": {
                    "description": "The cleaning date to inquire about",
                    "type": "string"
                },
                "cleaningTime": {
                    "description": "The cleaning time to inquire about",
                    "type": "string"
                },
                "address": {
                    "description": "The home address to inquire about",
                    "type": "string"
                },
                "city": {
                    "description": "The city where the home is located to inquire about",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cleaning_status": {
                    "description": "List of home cleaning bookings that meet the inquiry criteria",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_preparation_list",
        "description": "Get the list of preparations needed before maintenance",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "preparation_list": {
                    "type": "string",
                    "description": "List of preparations needed before maintenance"
                }
            }
        }
    },
    {
        "name": "service_cancellation_guide",
        "description": "Provides a service cancellation guide tool",
        "arguments": {
            "type": "object",
            "properties": {
                "serviceType": {
                    "type": "string",
                    "description": "Service type"
                },
                "provider": {
                    "type": "string",
                    "description": "Service provider"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cancellation_policy": {
                    "type": "string",
                    "description": "Cancellation policy"
                },
                "cancellation_steps": {
                    "type": "string",
                    "description": "Cancellation steps"
                },
                "cancellation_deadline": {
                    "type": "string",
                    "description": "Cancellation deadline"
                }
            }
        }
    },
    {
        "name": "compare_rentals",
        "description": "Compare the prices and service reviews of different car rental services",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "Service city"
                },
                "car_model": {
                    "type": "string",
                    "description": "Car model"
                },
                "options": {
                    "type": "array",
                    "description": "Available car rental service options"
                },
                "rental_costs": {
                    "type": "array",
                    "description": "Rental fees from various service providers"
                },
                "user_ratings": {
                    "type": "array",
                    "description": "User ratings of each rental service provider"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "best_option": {
                    "type": "string",
                    "description": "Detailed information of the best rental option"
                },
                "compare_status": {
                    "type": "string",
                    "description": "Comparison status"
                }
            }
        }
    },
    {
        "name": "appliance_repair_extra_fee_query",
        "description": "Query whether changing the repair time incurs additional fees",
        "arguments": {
            "type": "object",
            "properties": {
                "originalRequestID": {
                    "type": "string",
                    "description": "Original repair request number"
                },
                "newTime": {
                    "type": "string",
                    "description": "New scheduled service time:SS"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "extra_fee_status": {
                    "type": "string",
                    "description": "Whether there are additional fees"
                },
                "extra_fee_amount": {
                    "type": "string",
                    "description": "Amount of additional fees"
                }
            }
        }
    },
    {
        "name": "send_confirmation_and_repairman_info",
        "description": "Send maintenance appointment confirmation and repairman's contact information to the user",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "User's contact information"
                },
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Confirmation message sending status"
                }
            }
        }
    },
    {
        "name": "ensure_appointment_confirmation",
        "description": "Ensure the user receives the appointment confirmation message sent by the service center",
        "arguments": {
            "type": "object",
            "properties": {
                "contact_information": {
                    "type": "string",
                    "description": "Contact Information"
                },
                "service_center": {
                    "type": "string",
                    "description": "Service Center"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Appointment Confirmation Status"
                }
            }
        }
    },
    {
        "name": "finalize_appointment_time",
        "description": "Coordinate and determine the final appointment time",
        "arguments": {
            "type": "object",
            "properties": {
                "proposed_time": {
                    "type": "string",
                    "description": "Proposed appointment time"
                },
                "available_times": {
                    "type": "array",
                    "description": "List of available appointment times"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "final_time": {
                    "type": "string",
                    "description": "Final confirmed appointment time"
                }
            }
        }
    },
    {
        "name": "select_nearest_service_provider",
        "description": "Select the nearest service provider to the user",
        "arguments": {
            "type": "object",
            "properties": {
                "service_centers": {
                    "type": "array",
                    "description": "List of repair centers"
                },
                "user_address": {
                    "type": "string",
                    "description": "User service address"
                },
                "service_providers": {
                    "type": "array",
                    "description": "List of authorized repair service providers"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "nearest_service_provider": {
                    "type": "string",
                    "description": "The nearest service provider to the user"
                }
            }
        }
    },
    {
        "name": "call_service_provider",
        "description": "Call the service provider's contact number",
        "arguments": {
            "type": "object",
            "properties": {
                "service_center": {
                    "type": "string",
                    "description": "Maintenance service center"
                },
                "contact_information": {
                    "type": "string",
                    "description": "Contact phone number provided by the user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "call_status": {
                    "type": "string",
                    "description": "Status of the phone call"
                }
            }
        }
    },
    {
        "name": "find_official_repair_service_contact",
        "description": "Find the official repair service contact information for a specified brand",
        "arguments": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "description": "Home appliance brand"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "type": "string",
                    "description": "Official repair service contact information"
                }
            }
        }
    },
    {
        "name": "find_authorized_service_provider",
        "description": "Find authorized repair service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "description": "Home appliance brand"
                },
                "region": {
                    "type": "string",
                    "description": "Service center location"
                },
                "model": {
                    "type": "string",
                    "description": "Air conditioner model"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_center_info": {
                    "type": "string",
                    "description": "Information of the found service center"
                },
                "service_providers": {
                    "type": "array",
                    "description": "List of authorized repair service providers"
                }
            }
        }
    },
    {
        "name": "check_equipment_availability",
        "description": "Check equipment availability",
        "arguments": {
            "type": "object",
            "properties": {
                "equipment_type": {
                    "type": "string",
                    "description": "Type of equipment to check"
                },
                "roomID": {
                    "type": "string",
                    "description": "Conference room ID"
                },
                "city": {
                    "type": "string",
                    "description": "City where the conference room is located"
                },
                "equipment": {
                    "type": "array",
                    "description": "List of equipment to check",
                    "items": {
                        "type": "string"
                    }
                },
                "dates": {
                    "type": "array",
                    "description": "List of dates to check the equipment"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Availability status of the equipment"
                }
            }
        }
    },
    {
        "name": "check_service_provider_availability",
        "description": "Confirm the availability of the service provider",
        "arguments": {
            "type": "object",
            "properties": {
                "provider_id": {
                    "type": "string",
                    "description": "Service provider ID"
                },
                "date": {
                    "type": "string",
                    "description": "Date of the scheduled service"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time of the scheduled service"
                },
                "end_time": {
                    "type": "string",
                    "description": "End time of the scheduled service"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Availability"
                },
                "rating": {
                    "type": "number",
                    "description": "Service rating"
                },
                "availability_status": {
                    "type": "string",
                    "description": "Availability status of the service provider"
                }
            }
        }
    },
    {
        "name": "get_service_provider_contact",
        "description": "Get the contact information of the maintenance service provider",
        "arguments": {
            "type": "object",
            "properties": {
                "service_provider": {
                    "type": "string",
                    "description": "Maintenance service provider"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string",
                    "description": "Contact information of the maintenance service provider"
                }
            }
        }
    },
    {
        "name": "send_confirmation",
        "description": "Send confirmation message to user",
        "arguments": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Content of the confirmation message to be sent"
                },
                "user_name": {
                    "type": "string",
                    "description": "User's name"
                },
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                },
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                },
                "repairmanDetails": {
                    "type": "string",
                    "description": "Name and contact information of the repairman"
                },
                "preferred_contact_method": {
                    "type": "string",
                    "description": "User's preferred contact method"
                },
                "service_details": {
                    "type": "string",
                    "description": "Service point address, appointment time, estimated price"
                },
                "identityNumber": {
                    "type": "string",
                    "description": "Identity card number of the ticket purchaser"
                },
                "recipient": {
                    "type": "string",
                    "description": "Recipient"
                },
                "customer_contact": {
                    "type": "string",
                    "description": "Customer's contact information"
                },
                "booking_info": {
                    "type": "string",
                    "description": "Booking confirmation information"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "Mobile number to which the message needs to be sent"
                },
                "confirmation_info": {
                    "type": "string",
                    "description": "Appointment confirmation information"
                },
                "contact_information": {
                    "type": "string",
                    "description": "User's contact information"
                },
                "service_personnel_contact": {
                    "type": "string",
                    "description": "Service personnel's contact information"
                },
                "startTime": {
                    "type": "string",
                    "description": "Start time of the event"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Status of the message sent"
                }
            }
        }
    },
    {
        "name": "submit_contact_request",
        "description": "Submit a request to contact the user before repair",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Repair request number"
                },
                "contactInformation": {
                    "type": "string",
                    "description": "User contact phone number"
                },
                "contactTime": {
                    "type": "string",
                    "description": "Requested time for the repair personnel to contact the user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contact_request_status": {
                    "type": "string",
                    "description": "Contact request submission status"
                }
            }
        }
    },
    {
        "name": "send_team_reminder",
        "description": "Create and send reminders for team members",
        "arguments": {
            "type": "object",
            "properties": {
                "team_members": {
                    "type": "array",
                    "description": "List of team members"
                },
                "reminder_content": {
                    "type": "string",
                    "description": "Content of the reminder"
                },
                "reminder_date": {
                    "type": "string",
                    "description": "Date of the reminder"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "Time of the reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Whether the reminder was successfully sent",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_repair_details",
        "description": "Send repair appointment details to user's phone",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "User contact phone number"
                },
                "repairTime": {
                    "type": "string",
                    "description": "Repair time"
                },
                "serviceProvider": {
                    "type": "string",
                    "description": "Name of the service provider"
                },
                "requestID": {
                    "type": "string",
                    "description": "Repair request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Send status"
                }
            }
        }
    },
    {
        "name": "notify_user",
        "description": "Send notifications through the user's preferred communication method",
        "arguments": {
            "type": "object",
            "properties": {
                "user_name": {
                    "type": "string",
                    "description": "User name"
                },
                "preferred_method": {
                    "type": "string",
                    "description": "Preferred communication method"
                },
                "message": {
                    "type": "string",
                    "description": "Notification message to be sent"
                },
                "contact_information": {
                    "type": "string",
                    "description": "User contact information"
                },
                "ticket_price": {
                    "type": "string",
                    "description": "Ticket price"
                },
                "ticket_availability": {
                    "type": "string",
                    "description": "Ticket availability information"
                },
                "updated_balance": {
                    "type": "string",
                    "description": "Updated user balance information"
                },
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "appointment_id": {
                    "type": "string",
                    "description": "Appointment number"
                },
                "service_provider_contact": {
                    "type": "string",
                    "description": "Contact information of the service provider"
                },
                "cancellation_status": {
                    "type": "string",
                    "description": "Repair cancellation status"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "send_repair_notification",
        "description": "Send repair notification to user",
        "arguments": {
            "type": "object",
            "properties": {
                "contactNumber": {
                    "type": "string",
                    "description": "User's contact number"
                },
                "requestID": {
                    "type": "string",
                    "description": "Repair request ID"
                },
                "repairDetails": {
                    "type": "string",
                    "description": "Detailed information of the repair"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Status of the notification sent"
                }
            }
        }
    },
    {
        "name": "repair_status_guide_creation",
        "description": "Create a repair status inquiry guide",
        "arguments": {
            "type": "object",
            "properties": {
                "queryProcess": {
                    "type": "string",
                    "description": "The process of inquiring about repair status"
                },
                "providerContact": {
                    "type": "string",
                    "description": "Contact information of the service provider"
                },
                "requestID": {
                    "type": "string",
                    "description": "Repair request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "guide_status": {
                    "type": "string",
                    "description": "Creation status of the repair status inquiry guide"
                }
            }
        }
    },
    {
        "name": "query_cancellation_fee",
        "description": "Query the fee after cancelling a maintenance appointment",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cancellation_fee": {
                    "type": "string",
                    "description": "Cancellation fee information"
                }
            }
        }
    },
    {
        "name": "find_nearest_service_center",
        "description": "Find the nearest brand service center",
        "arguments": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "description": "Home appliance brand"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_center_id": {
                    "type": "string",
                    "description": "Service center ID"
                }
            }
        }
    },
    {
        "name": "send_message",
        "description": "Send a message to a specified contact",
        "arguments": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "type": "string",
                    "description": "Information of the contact who will receive the message"
                },
                "message_content": {
                    "type": "string",
                    "description": "Content of the message"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Status of the message sent"
                }
            }
        }
    },
    {
        "name": "select_nearest_working_day",
        "description": "Select the nearest working day",
        "arguments": {
            "type": "object",
            "properties": {
                "current_date": {
                    "type": "string",
                    "description": "Current date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_date": {
                    "type": "string",
                    "description": "Selected working day date"
                }
            }
        }
    },
    {
        "name": "check_service_provider_coverage",
        "description": "Check if the service provider covers the specified area",
        "arguments": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string",
                    "description": "User's location area"
                },
                "payment_method": {
                    "type": "string",
                    "description": "User's payment method"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "coverage_status": {
                    "type": "string",
                    "description": "Service provider coverage status"
                }
            }
        }
    },
    {
        "name": "send_repair_confirmation",
        "description": "Send repair appointment confirmation message to user",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "User's contact information"
                },
                "repairDetails": {
                    "type": "string",
                    "description": "Detailed information of the repair appointment"
                },
                "appointmentTime": {
                    "type": "string",
                    "description": "Scheduled appointment time"
                },
                "repairPersonContact": {
                    "type": "string",
                    "description": "Repair person's contact information"
                },
                "address": {
                    "type": "string",
                    "description": "User's address"
                },
                "serviceCenterInfo": {
                    "type": "string",
                    "description": "Service center information"
                },
                "costEstimation": {
                    "type": "string",
                    "description": "Estimated repair cost"
                },
                "paymentMethod": {
                    "type": "string",
                    "description": "Payment method"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Status of the confirmation message sent"
                }
            }
        }
    },
    {
        "name": "select_best_service_provider",
        "description": "Select the best service provider",
        "arguments": {
            "type": "object",
            "properties": {
                "comparison_results": {
                    "type": "array",
                    "description": "Service provider comparison results"
                },
                "repair_service_providers_list": {
                    "type": "array",
                    "description": "Repair service providers list"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_service_provider": {
                    "type": "object",
                    "description": "The most suitable service provider selected"
                }
            }
        }
    },
    {
        "name": "contact_repair_company",
        "description": "Contact the selected repair company and obtain service-related information",
        "arguments": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string",
                    "description": "The selected repair company"
                },
                "service_type": {
                    "type": "string",
                    "description": "The type of repair service needed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contact_status": {
                    "type": "string",
                    "description": "Contact status"
                },
                "service_details": {
                    "type": "object",
                    "description": "Detailed information related to the service"
                }
            }
        }
    },
    {
        "name": "select_best_provider",
        "description": "Select the most suitable maintenance service provider based on user ratings and service costs",
        "arguments": {
            "type": "object",
            "properties": {
                "providers_list": {
                    "type": "array",
                    "description": "Filtered list of maintenance technicians"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_provider": {
                    "type": "object",
                    "description": "Selected maintenance service provider"
                }
            }
        }
    },
    {
        "name": "search_repair_technician",
        "description": "Search and filter professional repair technicians for specific appliance models",
        "arguments": {
            "type": "object",
            "properties": {
                "appliance_type": {
                    "type": "string",
                    "description": "Appliance type"
                },
                "appliance_brand": {
                    "type": "string",
                    "description": "Appliance brand"
                },
                "appliance_model": {
                    "type": "string",
                    "description": "Appliance model"
                },
                "location": {
                    "type": "string",
                    "description": "Service location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "technician_id": {
                    "type": "string",
                    "description": "Filtered technician ID"
                },
                "status": {
                    "type": "string",
                    "description": "Search status"
                }
            }
        }
    },
    {
        "name": "souvenir_search",
        "description": "Travel Souvenir Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "type": {
                    "description": "Souvenir Type",
                    "type": "string"
                },
                "budget": {
                    "description": "Budget",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "souvenir_list": {
                    "description": "Recommended Souvenir List",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "cruise_search",
        "description": "Cruise Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination Name",
                    "type": "string"
                },
                "departure_date": {
                    "description": "Departure Date",
                    "type": "string",
                    "format": "date-time"
                },
                "numberOfTravelers": {
                    "description": "Number of Travelers",
                    "type": "integer"
                },
                "return_date": {
                    "description": "Return Date",
                    "type": "string",
                    "format": "date-time"
                },
                "cruise_line": {
                    "description": "Cruise Line",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cruise_details": {
                    "description": "Cruise Details",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "population_info_search",
        "description": "Population Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "country": {
                    "description": "Country Name",
                    "type": "string"
                },
                "year": {
                    "description": "Query Year",
                    "type": "string"
                },
                "gender": {
                    "description": "Gender, 'male' for male, 'female' for female",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "population": {
                    "description": "Population Quantity",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "sport_activity_recorder",
        "description": "Record and track users' sports data, including running, swimming, and cycling",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "description": "User name",
                    "type": "string",
                    "example": "JohnDoe"
                },
                "activity_type": {
                    "description": "Type of activity",
                    "type": "string",
                    "enum": [
                        "running",
                        "swimming",
                        "cycling"
                    ],
                    "example": "running"
                },
                "date": {
                    "description": "Date of activity",
                    "type": "string",
                    "format": "date",
                    "example": "2021-07-11"
                },
                "duration": {
                    "description": "Duration of the activity in minutes",
                    "type": "number",
                    "minimum": 10,
                    "maximum": 600,
                    "example": 60
                },
                "intensity": {
                    "description": "Intensity level, from 1 to 3, with 3 being the highest intensity",
                    "type": "number",
                    "minimum": 1,
                    "maximum": 3,
                    "example": 2
                },
                "distance": {
                    "description": "Distance of the activity in kilometers",
                    "type": "number",
                    "minimum": 1,
                    "example": 10
                },
                "weather": {
                    "description": "Weather on the day of the activity",
                    "type": "string",
                    "enum": [
                        "clear",
                        "partly cloudy",
                        "light rain",
                        "heavy rain",
                        "snow"
                    ],
                    "example": "clear"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "record_status": {
                    "description": "Feedback information of the activity record",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "update_tax_record",
        "description": "Create or update individual tax record file, and log tax payment information",
        "arguments": {
            "type": "object",
            "properties": {
                "tax_amount": {
                    "type": "string",
                    "description": "The tax amount to be recorded"
                },
                "record_type": {
                    "type": "string",
                    "description": "The type of record, such as individual tax record"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "record_status": {
                    "description": "Tax record update status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "personal_tax_calculator",
        "description": "Personal Income Tax Calculator, calculates the tax rate for various types of income. Applicable to wages, self-employed individuals, etc.",
        "arguments": {
            "type": "object",
            "properties": {
                "income": {
                    "type": "number",
                    "description": "Income, must be a reasonable value, cannot be negative, cannot be null, and cannot be non-numeric characters",
                    "example": 5000
                },
                "incomeType": {
                    "type": "string",
                    "enum": [
                        "salary",
                        "freelance",
                        "invest"
                    ],
                    "description": "Type of income, can be salary, freelance, or investment income"
                },
                "residencyStatus": {
                    "type": "string",
                    "enum": [
                        "resident",
                        "nonresident"
                    ],
                    "description": "Residency status, can be resident or non-resident"
                },
                "deductions": {
                    "type": "number",
                    "description": "The amount to be deducted, must be a reasonable value, cannot be negative, cannot be null, and cannot be non-numeric characters",
                    "example": 1500
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "taxAmount": {
                    "type": "number",
                    "description": "The tax amount calculated based on income and deductions"
                },
                "effectiveTaxRate": {
                    "type": "number",
                    "description": "The effective tax rate, which is the ratio of tax amount to income"
                }
            }
        }
    },
    {
        "name": "monitor_scheduled_task",
        "description": "Monitor the status of the specified automated task",
        "arguments": {
            "type": "object",
            "properties": {
                "taskId": {
                    "type": "string",
                    "description": "Automated task ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "task_status": {
                    "type": "string",
                    "description": "Current task status"
                }
            }
        }
    },
    {
        "name": "smart_appliance_control",
        "description": "Intelligent Appliance Control Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "appliance_type": {
                    "description": "Type of appliance, such as TV, air conditioner, washing machine, etc.",
                    "type": "string",
                    "enum": [
                        "tv",
                        "ac",
                        "washer"
                    ]
                },
                "model": {
                    "description": "Appliance model",
                    "type": "string"
                },
                "function": {
                    "description": "Function to be performed, such as on, off, mode switch, etc.",
                    "type": "string",
                    "enum": [
                        "on",
                        "off",
                        "mode_switch"
                    ]
                },
                "mode": {
                    "description": "If mode switch function is to be performed, the mode name is required, such as cooling, energy saving, etc.",
                    "type": "string",
                    "example": "cooling"
                },
                "temperature": {
                    "description": "If the appliance is an air conditioner, the temperature that can be set, only between 16 to 30 degrees",
                    "type": "integer",
                    "minimum": 16,
                    "maximum": 30
                },
                "volume": {
                    "description": "If the appliance is a TV, the volume that can be set, only between 0 to 100, in steps of 5",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100,
                    "multipleOf": 5
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Execution result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "vision_protection_tool",
        "description": "Vision protection tool, helps to control internet usage time and provides users with appropriate suggestions for protecting their eyesight",
        "arguments": {
            "type": "object",
            "properties": {
                "age": {
                    "description": "User's age, only integer values from 1 to 99 are allowed",
                    "type": "integer",
                    "example": 25
                },
                "eyeCondition": {
                    "description": "User's eye condition, options include good, general, and poor",
                    "type": "string",
                    "enum": [
                        "good",
                        "general",
                        "poor"
                    ]
                },
                "dailyInternetUse": {
                    "description": "Daily internet usage time, in hours",
                    "type": "integer",
                    "example": 8
                },
                "eyesight": {
                    "description": "User's eyesight index, represented as a decimal",
                    "type": "number",
                    "example": 0.8
                },
                "fingerEyeCoordinationGrade": {
                    "description": "Finger-eye coordination grade, rated from A to E",
                    "type": "string",
                    "enum": [
                        "A",
                        "B",
                        "C",
                        "D",
                        "E"
                    ]
                },
                "nightlightUsage": {
                    "description": "Nightlight mode usage rate",
                    "type": "number",
                    "example": 0.5
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sightProtectionPlan": {
                    "description": "Eyesight protection plan",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "special_recipe_search",
        "description": "A tool for searching various recipes, which can search by dish name, cuisine, ingredients, cooking method, and personal taste",
        "arguments": {
            "type": "object",
            "properties": {
                "dish_name": {
                    "description": "Dish Name",
                    "type": "string",
                    "example": "Braised Pork"
                },
                "cuisine_type": {
                    "description": "Cuisine",
                    "type": "string",
                    "enum": [
                        "Sichuan Cuisine",
                        "Hunan Cuisine",
                        "Cantonese Cuisine",
                        "Shandong Cuisine",
                        "Jiangsu Cuisine",
                        "Zhejiang Cuisine",
                        "Fujian Cuisine",
                        "Anhui Cuisine",
                        "Beijing Cuisine",
                        "Northeastern Cuisine",
                        "Northwestern Cuisine",
                        "Henan Cuisine",
                        "Jiangxi Cuisine",
                        "Hubei Cuisine",
                        "Yunnan Cuisine",
                        "Guizhou Cuisine",
                        "Xinjiang Cuisine",
                        "Hainan Cuisine"
                    ]
                },
                "ingredients": {
                    "description": "Ingredients",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cooking_method": {
                    "description": "Cooking Method",
                    "type": "string",
                    "enum": [
                        "Stir-fry",
                        "Stew",
                        "Steam",
                        "Boil",
                        "Bake",
                        "Roast",
                        "Mix",
                        "Cook in a pot",
                        "Braise",
                        "Deep-fry",
                        "Smoke",
                        "Salt-bake",
                        "Simmer",
                        "Cook down",
                        "Soak",
                        "Smoke",
                        "Quick-fry",
                        "Sauce",
                        "Put out the fire",
                        "Stew",
                        "Deep-fry"
                    ]
                },
                "taste": {
                    "description": "Taste",
                    "type": "string",
                    "enum": [
                        "Salty",
                        "Sweet",
                        "Sour",
                        "Spicy",
                        "Fragrant",
                        "Bitter",
                        "Numbing Spicy",
                        "Five-spice",
                        "Curry",
                        "Sauce",
                        "Mellow",
                        "Light",
                        "Seafood",
                        "Oil-braised",
                        "Sweet and Sour",
                        "Fresh"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recipe_information": {
                    "description": "Recipe Details",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "hospital_search",
        "description": "Search for hospital information in a specified area",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "The user's current location",
                    "type": "string"
                },
                "country": {
                    "type": "string",
                    "description": "The country where the hospital search is needed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hospitals": {
                    "description": "List of nearby hospitals",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "search_nearby_pharmacies",
        "description": "Search for pharmacies in the specified area",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Current location information"
                },
                "area": {
                    "type": "string",
                    "description": "Search area"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "pharmacies_list": {
                    "type": "array",
                    "description": "List of pharmacies"
                }
            }
        }
    },
    {
        "name": "medical_knowledge_search",
        "description": "Search for possible diseases, nursing advice, suitable medication, and recommended dosage based on symptoms and patient information",
        "arguments": {
            "type": "object",
            "properties": {
                "diseaseName": {
                    "description": "Disease name",
                    "type": "string"
                },
                "symptom": {
                    "description": "List of symptoms, separated by commas",
                    "type": "string"
                },
                "medication": {
                    "description": "Medication name",
                    "type": "string"
                },
                "age": {
                    "description": "Patient's age",
                    "type": "string"
                },
                "weight": {
                    "description": "Patient's weight",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "medical_advice": {
                    "description": "Medical advice",
                    "type": "string"
                },
                "possible_diseases": {
                    "description": "List of possible diseases",
                    "type": "array"
                },
                "care_advice": {
                    "description": "Nursing advice",
                    "type": "string"
                },
                "medication_options": {
                    "description": "Medication options and recommended dosages",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "filter_medicines_by_side_effects",
        "description": "Filter medicines based on the number and severity of side effects",
        "arguments": {
            "type": "object",
            "properties": {
                "sideEffects": {
                    "type": "array",
                    "description": "List of possible side effects of the medicine"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_medicines": {
                    "type": "array",
                    "description": "List of filtered medicines"
                }
            }
        }
    },
    {
        "name": "drug_interaction_search",
        "description": "Query information on potential interactions between drugs and other medications",
        "arguments": {
            "type": "object",
            "properties": {
                "medicineName": {
                    "type": "string",
                    "description": "The name of the drug"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "interactions": {
                    "type": "string",
                    "description": "Information on potential interactions between the drug and other medications"
                }
            }
        }
    },
    {
        "name": "fitness_guide_tool",
        "description": "Fitness guidance tool, provides personalized fitness plans and dietary suggestions based on user's height, weight, gender, age, and goals (such as weight loss, muscle gain)",
        "arguments": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "number",
                    "description": "User's height in centimeters",
                    "example": 170
                },
                "weight": {
                    "type": "number",
                    "description": "User's weight in kilograms",
                    "example": 60
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ],
                    "description": "User's gender, can only choose male or female"
                },
                "age": {
                    "type": "number",
                    "description": "User's age",
                    "example": 25
                },
                "goal": {
                    "type": "string",
                    "enum": [
                        "weight_loss",
                        "muscle_gain"
                    ],
                    "description": "User's fitness goal, can only choose weight_loss or muscle_gain"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "fitness_plan": {
                    "type": "string",
                    "description": "Customized fitness plan"
                },
                "diet_suggestions": {
                    "type": "string",
                    "description": "Personalized dietary suggestions"
                }
            }
        }
    },
    {
        "name": "alternative_medicine_search",
        "description": "Search for alternative medicines with similar indications based on a given indication",
        "arguments": {
            "type": "object",
            "properties": {
                "indication": {
                    "type": "string",
                    "description": "Indications of the medicine"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "medicines": {
                    "type": "array",
                    "description": "List of found alternative medicines"
                }
            }
        }
    },
    {
        "name": "get_standard_treatment",
        "description": "Get the standard treatment plan based on the name of the disease",
        "arguments": {
            "type": "object",
            "properties": {
                "disease": {
                    "type": "string",
                    "description": "Name of the disease"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "treatment_plan": {
                    "type": "string",
                    "description": "Treatment plan"
                }
            }
        }
    },
    {
        "name": "pharmacy_search",
        "description": "Search for pharmacies in a specified area",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The geographic location information to search for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "pharmacies": {
                    "type": "array",
                    "description": "List of nearby pharmacies"
                }
            }
        }
    },
    {
        "name": "reserve_medication",
        "description": "Reserve medication at a pharmacy",
        "arguments": {
            "type": "object",
            "properties": {
                "pharmacy": {
                    "type": "string",
                    "description": "Pharmacy name"
                },
                "medication": {
                    "type": "string",
                    "description": "Medication name"
                },
                "customer_info": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Customer name"
                        },
                        "contact": {
                            "type": "string",
                            "description": "Contact information"
                        }
                    },
                    "required": [
                        "name",
                        "contact"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_status": {
                    "type": "boolean",
                    "description": "Medication reservation status"
                }
            }
        }
    },
    {
        "name": "create_nutrition_table",
        "description": "Create an empty nutrition facts table",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "table_id": {
                    "description": "ID of the created table",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "nutrition_analysis",
        "description": "Food Nutrition Analysis Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "foodName": {
                    "description": "Food Name",
                    "type": "string"
                },
                "quantity": {
                    "description": "Food Quantity",
                    "type": "integer"
                },
                "date": {
                    "description": "Analysis Date",
                    "type": "string",
                    "pattern": "\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "calories": {
                    "description": "Energy; Calories",
                    "type": "number"
                },
                "protein": {
                    "description": "Protein",
                    "type": "number"
                },
                "carbohydrate": {
                    "description": "Carbohydrates",
                    "type": "number"
                },
                "fat": {
                    "description": "Fat",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "combine_nutrients",
        "description": "Combine the nutritional components of various foods",
        "arguments": {
            "type": "object",
            "properties": {
                "apple_nutrients": {
                    "description": "Nutritional components of apple",
                    "type": "object"
                },
                "flour_nutrients": {
                    "description": "Nutritional components of flour",
                    "type": "object"
                },
                "sugar_nutrients": {
                    "description": "Nutritional components of sugar",
                    "type": "object"
                },
                "butter_nutrients": {
                    "description": "Nutritional components of butter",
                    "type": "object"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "total_calories": {
                    "description": "Total calories",
                    "type": "number"
                },
                "total_carbs": {
                    "description": "Total carbohydrates",
                    "type": "number"
                },
                "total_proteins": {
                    "description": "Total proteins",
                    "type": "number"
                },
                "total_fats": {
                    "description": "Total fats",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "export_nutrition_report",
        "description": "Export Nutrition Intake Report",
        "arguments": {
            "type": "object",
            "properties": {
                "report_data": {
                    "description": "Nutrition Intake Data",
                    "type": "string"
                },
                "export_format": {
                    "description": "Report Export Format",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the report was successfully exported",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "verify_nutrition_totals",
        "description": "Verify whether the total nutrition content in the table is correct",
        "arguments": {
            "type": "object",
            "properties": {
                "table_id": {
                    "description": "The table ID that needs verification",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "description": "Whether the verification is successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "add_nutrition_data_to_table",
        "description": "Add nutritional data of food to the table",
        "arguments": {
            "type": "object",
            "properties": {
                "food": {
                    "description": "Food name",
                    "type": "string"
                },
                "protein": {
                    "description": "Protein content",
                    "type": "number",
                    "nullable": true
                },
                "fat": {
                    "description": "Fat content",
                    "type": "number",
                    "nullable": true
                },
                "carbohydrate": {
                    "description": "Carbohydrate content",
                    "type": "number",
                    "nullable": true
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "description": "Whether the data addition was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "generate_diet_plan",
        "description": "Generate a weekly healthy diet menu based on the user's dietary preferences and special needs",
        "arguments": {
            "type": "object",
            "properties": {
                "diet_preferences": {
                    "type": "string",
                    "description": "The user's dietary preferences"
                },
                "special_requirements": {
                    "type": "string",
                    "description": "The user's special dietary requirements"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "weekly_menu": {
                    "description": "The generated weekly diet menu",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "self_care_advice_search",
        "description": "Self-care Advice Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "symptom": {
                    "description": "Symptom",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "self_care_advice": {
                    "description": "Self-care Advice",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "adjustment_suggestions",
        "description": "Provide itinerary adjustment suggestions based on weather forecast and detailed travel itinerary",
        "arguments": {
            "type": "object",
            "properties": {
                "weather": {
                    "type": "array",
                    "description": "Weather forecast information"
                },
                "itinerary": {
                    "type": "string",
                    "description": "Detailed travel itinerary"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "suggestions": {
                    "type": "array",
                    "description": "Itinerary adjustment suggestions"
                }
            }
        }
    },
    {
        "name": "calculate_equipment_weight_and_size",
        "description": "Calculate the total weight and dimensions of photography equipment",
        "arguments": {
            "type": "object",
            "properties": {
                "equipment_list": {
                    "type": "string",
                    "description": "List of photography equipment to calculate weight and dimensions for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "total_weight": {
                    "type": "number",
                    "description": "Total weight of the equipment"
                },
                "total_dimension": {
                    "type": "string",
                    "description": "Total dimensions of the equipment, format: length x width x height"
                }
            }
        }
    },
    {
        "name": "compare_population",
        "description": "Compare whether two population numbers are consistent",
        "arguments": {
            "type": "object",
            "properties": {
                "total_population": {
                    "type": "integer",
                    "description": "Total population number"
                },
                "calculated_sum": {
                    "type": "integer",
                    "description": "Sum of calculated population numbers"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "match": {
                    "type": "boolean",
                    "description": "Whether it matches"
                }
            }
        }
    },
    {
        "name": "verify_vendor",
        "description": "Verify the reliability of the vendor, including reviews and return policy",
        "arguments": {
            "type": "object",
            "properties": {
                "vendor_info": {
                    "type": "string",
                    "description": "The vendor information that needs to be verified"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "type": "string",
                    "description": "The status of whether the vendor is reliable"
                }
            }
        }
    },
    {
        "name": "query_sales_status",
        "description": "Query the sales status of a specified product in a specific region",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The region to be queried, such as 'Beijing' or 'Shanghai'"
                },
                "product_brand": {
                    "type": "string",
                    "description": "Product brand"
                },
                "product_model": {
                    "type": "string",
                    "description": "Product model"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sales_info": {
                    "type": "string",
                    "description": "Detailed information about the sales status"
                }
            }
        }
    },
    {
        "name": "get_historical_price_trend",
        "description": "Get the historical price trend of a specified product",
        "arguments": {
            "type": "object",
            "properties": {
                "product": {
                    "type": "string",
                    "description": "Product name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "trend": {
                    "type": "array",
                    "description": "Price trend data"
                }
            }
        }
    },
    {
        "name": "vulnerability_search",
        "description": "Search for known vulnerabilities of specific phone models and system versions",
        "arguments": {
            "type": "object",
            "properties": {
                "phone_model": {
                    "type": "string",
                    "description": "Phone model"
                },
                "system_version": {
                    "type": "string",
                    "description": "System version"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "vulnerabilities": {
                    "type": "array",
                    "description": "List of known vulnerabilities"
                }
            }
        }
    },
    {
        "name": "get_exchange_service_info",
        "description": "Get the foreign exchange service appointment process and required information for a specific branch",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Location of the branch"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_process": {
                    "type": "string",
                    "description": "Appointment process"
                },
                "required_information": {
                    "type": "array",
                    "description": "List of information required for the appointment"
                }
            }
        }
    },
    {
        "name": "generate_comprehensive_report",
        "description": "Generate a comprehensive report on user feedback",
        "arguments": {
            "type": "object",
            "properties": {
                "user_feedback": {
                    "description": "A summary of user feedback and case analysis",
                    "type": "string"
                },
                "sentiment_data": {
                    "description": "Data from sentiment analysis",
                    "type": "string"
                },
                "prevalence_data": {
                    "description": "Data from prevalence analysis",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report_status": {
                    "description": "The status of whether the report was generated successfully",
                    "type": "boolean"
                },
                "report_content": {
                    "description": "The content of the generated comprehensive report",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "system_update_check",
        "description": "Check for system updates for specific phone models and system versions",
        "arguments": {
            "type": "object",
            "properties": {
                "phone_model": {
                    "type": "string",
                    "description": "Phone model"
                },
                "system_version": {
                    "type": "string",
                    "description": "System version"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_available": {
                    "type": "boolean",
                    "description": "Whether there is an available system update"
                },
                "update_details": {
                    "type": "string",
                    "description": "Detailed information about the system update"
                }
            }
        }
    },
    {
        "name": "search_appliance_issues",
        "description": "Search for common issues and solutions for specific brands and models of home appliances",
        "arguments": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "description": "Home appliance brand"
                },
                "model": {
                    "type": "string",
                    "description": "Home appliance model"
                },
                "issue": {
                    "type": "string",
                    "description": "Type of issue to inquire"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "issues": {
                    "type": "array",
                    "description": "List of common issues and solutions"
                }
            }
        }
    },
    {
        "name": "update_guide_retrieve",
        "description": "Retrieve the system update download and installation guide for a specific phone model and system version",
        "arguments": {
            "type": "object",
            "properties": {
                "phone_model": {
                    "type": "string",
                    "description": "Phone model"
                },
                "system_version": {
                    "type": "string",
                    "description": "System version"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "guide": {
                    "type": "string",
                    "description": "Guide for system update download and installation"
                }
            }
        }
    },
    {
        "name": "find_config_line",
        "description": "Find a specific configuration line in the configuration file.",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The path to the configuration file"
                },
                "search_pattern": {
                    "type": "string",
                    "description": "The content of the configuration line to search for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "line": {
                    "description": "The configuration line found",
                    "type": "string"
                },
                "status": {
                    "description": "Whether the search operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "file_get_attributes_and_record",
        "description": "Get the creation time and date of the file, and record it",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "record_status": {
                    "description": "Whether the record operation was successful",
                    "type": "boolean"
                },
                "creation_time": {
                    "description": "File creation time",
                    "type": "string"
                },
                "creation_date": {
                    "description": "File creation date",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "postal_code_search",
        "description": "Postal Code Lookup Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "country": {
                    "description": "Country Name",
                    "type": "string"
                },
                "state": {
                    "description": "State or Province Name",
                    "type": "string"
                },
                "city": {
                    "description": "City Name",
                    "type": "string"
                },
                "district": {
                    "description": "District or County Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "postal_code": {
                    "description": "Postal Code",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "protocol_name_search",
        "description": "Sub-protocol Name Retrieval Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "userInput": {
                    "description": "User Input",
                    "type": "string"
                },
                "protocolType": {
                    "description": "Protocol Type",
                    "type": "string"
                },
                "protocolName": {
                    "description": "Protocol Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sub_protocol_name": {
                    "description": "Sub-protocol Name",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_resume",
        "description": "Create a resume based on the provided personal information and experience",
        "arguments": {
            "type": "object",
            "properties": {
                "education_background": {
                    "type": "string",
                    "description": "The user's educational background"
                },
                "experience": {
                    "type": "string",
                    "description": "The user's relevant work or educational experience"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "resume_path": {
                    "type": "string",
                    "description": "The path of the generated resume file"
                }
            }
        }
    },
    {
        "name": "family_interaction_tool",
        "description": "Parent-child interaction tool, providing activity suggestions suitable for children of different ages",
        "arguments": {
            "type": "object",
            "properties": {
                "childAge": {
                    "description": "The age of the child, should be within the range of 0 to 18 years old",
                    "type": "integer"
                },
                "interests": {
                    "description": "The child's interests, such as: reading, painting, music, etc.",
                    "type": "string"
                },
                "availableTime": {
                    "description": "The time parents can spend on parent-child activities, in minutes",
                    "type": "integer",
                    "example": 60
                },
                "physicalStrength": {
                    "description": "The parent's physical strength level, enum: 'strong', 'medium', 'weak'",
                    "type": "string"
                },
                "facilityClose": {
                    "description": "Whether there are nearby public facilities such as parks, libraries, etc., enum: 'yes', 'no'",
                    "type": "string"
                },
                "budget": {
                    "description": "The budget available for parent-child activities, in currency",
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "activity_suggestions": {
                    "description": "Parent-child activity suggestions",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "job_search_tool",
        "description": "Search for matching job opportunities based on personal characteristics and current job situation",
        "arguments": {
            "type": "object",
            "properties": {
                "industry": {
                    "description": "Industry type",
                    "type": "string"
                },
                "location": {
                    "description": "Work location",
                    "type": "string"
                },
                "experience": {
                    "description": "Required work experience",
                    "type": "integer"
                },
                "personality_traits": {
                    "description": "User's personality traits",
                    "type": "string"
                },
                "current_occupation": {
                    "description": "User's current occupation",
                    "type": "string"
                },
                "seeking_change": {
                    "description": "Whether the user is seeking a career change",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "job_title": {
                    "description": "Job position title",
                    "type": "string"
                },
                "company_name": {
                    "description": "Company name",
                    "type": "string"
                },
                "salary_range": {
                    "description": "Salary range",
                    "type": "string"
                },
                "job_opportunities": {
                    "description": "List of matching job opportunities",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "find_text",
        "description": "Search for a specified keyword in a file and return its position",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path to search"
                },
                "keyword": {
                    "type": "string",
                    "description": "The keyword to search for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "position": {
                    "type": "array",
                    "description": "The position of the keyword in the file"
                }
            }
        }
    },
    {
        "name": "luggage_pickup_location",
        "description": "Query the luggage tag pickup point location at a specified airport",
        "arguments": {
            "type": "object",
            "properties": {
                "airport_name": {
                    "description": "Airport name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "pickup_location": {
                    "description": "The specific location of the luggage tag pickup point",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "geo_location_finder",
        "description": "Geographic Location Finder Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "country": {
                    "description": "Country Name",
                    "type": "string"
                },
                "city": {
                    "description": "City Name",
                    "type": "string"
                },
                "landmark": {
                    "description": "Landmark or Specific Address",
                    "type": "string"
                },
                "latitude": {
                    "description": "Latitude Value",
                    "type": "number"
                },
                "longitude": {
                    "description": "Longitude Value",
                    "type": "number"
                },
                "dateTime": {
                    "description": "Time of Inquiry",
                    "type": "string",
                    "format": "date-time"
                },
                "locationName": {
                    "description": "Location Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "latitude": {
                    "description": "Latitude",
                    "type": "number"
                },
                "longitude": {
                    "description": "Longitude",
                    "type": "number"
                },
                "location_name": {
                    "description": "Geographic Location Name",
                    "type": "string"
                },
                "timezone": {
                    "description": "Local Time Zone",
                    "type": "string"
                },
                "address": {
                    "description": "Specific Address",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "user_feedback_analysis",
        "description": "User Feedback Analysis Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "userName": {
                    "description": "Name of the User",
                    "type": "string"
                },
                "feedbackContent": {
                    "description": "Content of the User's Feedback",
                    "type": "string"
                },
                "submissionTime": {
                    "description": "Submission Time of the User Feedback",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sentiment_score": {
                    "description": "Sentiment Score of the User Feedback",
                    "type": "number"
                },
                "key_issues": {
                    "description": "Key Issues Keywords of the User Feedback",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "user_feedback_tool",
        "description": "User Feedback Collection Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "userId": {
                    "description": "User ID",
                    "type": "string"
                },
                "feedbackType": {
                    "description": "Feedback Type",
                    "type": "string",
                    "enum": [
                        "bug report",
                        "feature suggestion",
                        "general comment"
                    ]
                },
                "dateProvided": {
                    "description": "Date and Time of Feedback Provided",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "feedbackId": {
                    "description": "Feedback ID",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "collect_customer_reviews",
        "description": "Collect customer reviews for the company",
        "arguments": {
            "type": "object",
            "properties": {
                "company_list": {
                    "type": "array",
                    "description": "List of companies to collect reviews for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "review_data": {
                    "type": "array",
                    "description": "Customer review data for the companies"
                }
            }
        }
    },
    {
        "name": "current_time_service",
        "description": "Provides the current date and time",
        "arguments": {
            "type": "object",
            "properties": {
                "timezone": {
                    "type": "string",
                    "description": "The timezone to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "current_time": {
                    "type": "string",
                    "description": "The current time"
                }
            }
        }
    },
    {
        "name": "news_summary_report_generator",
        "description": "Generate summary reports based on collected news headlines",
        "arguments": {
            "type": "object",
            "properties": {
                "news_data": {
                    "type": "array",
                    "description": "Collected news headlines data"
                },
                "dates": {
                    "type": "array",
                    "description": "List of dates to be summarized"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "summary_report": {
                    "type": "string",
                    "description": "Generated news summary report"
                }
            }
        }
    },
    {
        "name": "generate_summary_report",
        "description": "Generate a summary report based on the provided information",
        "arguments": {
            "type": "object",
            "properties": {
                "headlines": {
                    "type": "array",
                    "description": "List of news headlines"
                },
                "format": {
                    "type": "string",
                    "description": "Formatting requirements for the report"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "summary_report": {
                    "type": "string",
                    "description": "The generated summary report"
                }
            }
        }
    },
    {
        "name": "create_comprehensive_report",
        "description": "Create comprehensive analysis report",
        "arguments": {
            "type": "object",
            "properties": {
                "positive_feedback": {
                    "type": "string",
                    "description": "Positive feedback analysis content"
                },
                "negative_feedback": {
                    "type": "string",
                    "description": "Negative feedback analysis content"
                },
                "product_reviews": {
                    "type": "string",
                    "description": "Product reviews analysis content"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report": {
                    "type": "string",
                    "description": "Content of the comprehensive analysis report"
                }
            }
        }
    },
    {
        "name": "generate_product_list_report",
        "description": "Generate a complete list report containing energy products and basic metal products for a specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "energy_products": {
                    "type": "array",
                    "description": "List of energy product data"
                },
                "metal_products": {
                    "type": "array",
                    "description": "List of basic metal product data"
                },
                "report_date": {
                    "type": "string",
                    "description": "The date of the report"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report_status": {
                    "type": "string",
                    "description": "The status of whether the report was generated successfully"
                },
                "report_content": {
                    "type": "string",
                    "description": "The content of the generated report"
                }
            }
        }
    },
    {
        "name": "extract_feedback_with_keywords",
        "description": "Extract user feedback containing specific keywords",
        "arguments": {
            "type": "object",
            "properties": {
                "feedbacks": {
                    "type": "array",
                    "description": "All feedback from users",
                    "items": {
                        "type": "string"
                    }
                },
                "keyword": {
                    "type": "string",
                    "description": "The keyword to filter for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_feedbacks": {
                    "type": "array",
                    "description": "Feedback containing the keyword",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "compare_population_data",
        "description": "Compare the population numbers of two countries",
        "arguments": {
            "type": "object",
            "properties": {
                "country1_population": {
                    "type": "integer",
                    "description": "The population number of the first country"
                },
                "country2_population": {
                    "type": "integer",
                    "description": "The population number of the second country"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "difference": {
                    "type": "integer",
                    "description": "The difference in population numbers between the two countries"
                },
                "comparison_chart": {
                    "type": "string",
                    "description": "Population comparison chart"
                }
            }
        }
    },
    {
        "name": "calculate_population_sum",
        "description": "Calculate the sum of two population numbers",
        "arguments": {
            "type": "object",
            "properties": {
                "male_population": {
                    "type": "integer",
                    "description": "Male population number"
                },
                "female_population": {
                    "type": "integer",
                    "description": "Female population number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sum": {
                    "type": "integer",
                    "description": "Sum of population numbers"
                }
            }
        }
    },
    {
        "name": "receive_and_input_verification_code",
        "description": "Receive and input verification code to complete verification",
        "arguments": {
            "type": "object",
            "properties": {
                "phone_number": {
                    "type": "string",
                    "description": "The mobile number to receive the verification code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_code": {
                    "type": "string",
                    "description": "The received verification code"
                },
                "input_status": {
                    "type": "string",
                    "description": "Verification code input status"
                }
            }
        }
    },
    {
        "name": "receive_verification_code",
        "description": "Receive mobile phone verification code",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_code": {
                    "description": "Received mobile phone verification code",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "pharmaceutical_manufacturers_search",
        "description": "Query the list of manufacturers for a specific drug",
        "arguments": {
            "type": "object",
            "properties": {
                "medicineName": {
                    "type": "string",
                    "description": "The name of the drug"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "manufacturers": {
                    "type": "array",
                    "description": "The list of manufacturers that produce the drug"
                }
            }
        }
    },
    {
        "name": "legal_compliance_check",
        "description": "Company Regulatory Compliance Check Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "User ID for request tracking"
                },
                "employee_name": {
                    "type": "string",
                    "description": "Name of the employee being tracked"
                },
                "employee_phone": {
                    "type": "string",
                    "description": "Phone number of the employee being tracked"
                },
                "country_code": {
                    "type": "string",
                    "description": "Country code of the employee's location"
                },
                "companyName": {
                    "type": "string",
                    "description": "Name of the company"
                },
                "industryType": {
                    "type": "string",
                    "description": "Industry type of the company"
                },
                "checkDate": {
                    "type": "string",
                    "description": "Date of the regulatory compliance check"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "compliance_status": {
                    "type": "string",
                    "description": "Compliance status"
                }
            }
        }
    },
    {
        "name": "check_projector_availability",
        "description": "Check if the projector in a specified meeting room is available at a certain time",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_room": {
                    "type": "string",
                    "description": "Meeting room number"
                },
                "date": {
                    "type": "string",
                    "description": "Date"
                },
                "time": {
                    "type": "string",
                    "description": "Time slot"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether the projector is available"
                }
            }
        }
    },
    {
        "name": "arrange_equipment",
        "description": "Arrange the required audio and lighting equipment",
        "arguments": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string",
                    "description": "Type of event"
                },
                "location": {
                    "type": "string",
                    "description": "Event location"
                },
                "date": {
                    "type": "string",
                    "description": "Event date",
                    "format": "date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "arrangement_status": {
                    "type": "string",
                    "description": "Equipment arrangement status"
                }
            }
        }
    },
    {
        "name": "smart_home_control",
        "description": "A tool that can control smart home devices such as air conditioners, lights, etc. Users can set to turn on or off these devices at specific times or under certain conditions, but cannot control non-smart devices",
        "arguments": {
            "type": "object",
            "properties": {
                "device_type": {
                    "description": "Device type",
                    "type": "string",
                    "enum": [
                        "Air conditioner",
                        "Light",
                        "Smart socket",
                        "Smart TV",
                        "Smart curtain"
                    ]
                },
                "action": {
                    "description": "Operation",
                    "type": "string",
                    "enum": [
                        "On",
                        "Off"
                    ]
                },
                "time": {
                    "description": "Operation time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-01-01T00:00:00Z"
                },
                "condition": {
                    "description": "Specific conditions such as temperature",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "control_status": {
                    "description": "Control information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_homestay_id",
        "description": "Tool for obtaining homestay ID",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The geographical location of the homestay"
                },
                "homestay_name": {
                    "type": "string",
                    "description": "The name of the homestay"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "homestay_id": {
                    "type": "string",
                    "description": "The ID of the homestay"
                }
            }
        }
    },
    {
        "name": "user_review_analysis",
        "description": "User Review Content Analysis Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "reviewText": {
                    "description": "The content of the user's review",
                    "type": "string"
                },
                "userName": {
                    "description": "The name of the user",
                    "type": "string"
                },
                "reviewDate": {
                    "description": "The date of the user's review",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sentiment": {
                    "description": "The sentiment tendency of the review content",
                    "type": "string"
                },
                "keywords": {
                    "description": "Keywords in the review content",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "user_review_tracker",
        "description": "Track user reviews for a specified product ID and time range",
        "arguments": {
            "type": "object",
            "properties": {
                "productID": {
                    "description": "The unique identifier of the product",
                    "type": "string"
                },
                "reviewDate": {
                    "description": "The date range of the review up to 'now'",
                    "type": "string"
                },
                "userName": {
                    "description": "The name of the user",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "review_content": {
                    "description": "The content of the user's review",
                    "type": "string"
                },
                "rating": {
                    "description": "The rating given by the user for the product",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "generate_sentiment_report",
        "description": "Generate a detailed sentiment analysis report for a specific review",
        "arguments": {
            "type": "object",
            "properties": {
                "review": {
                    "type": "string",
                    "description": "The most positive review text"
                },
                "sentiment_score": {
                    "type": "number",
                    "description": "The sentiment score of the review"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report": {
                    "type": "string",
                    "description": "Detailed sentiment analysis report"
                }
            }
        }
    },
    {
        "name": "check_two_factor_auth",
        "description": "Check the two-factor authentication settings for a specified user on a specified platform",
        "arguments": {
            "type": "object",
            "properties": {
                "platform": {
                    "type": "string",
                    "description": "The name of the online platform"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the login user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "two_factor_auth_status": {
                    "type": "boolean",
                    "description": "Whether two-factor authentication is enabled"
                }
            }
        }
    },
    {
        "name": "global_population_search",
        "description": "Global Population Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "year": {
                    "description": "Query Year",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "population": {
                    "description": "Global Population Count",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "search_email_by_keyword",
        "description": "Search emails by keyword",
        "arguments": {
            "type": "object",
            "properties": {
                "keyword": {
                    "type": "string",
                    "description": "Search keyword"
                },
                "time_range": {
                    "type": "string",
                    "description": "Time range for email search"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_status": {
                    "type": "string",
                    "description": "Search status"
                },
                "emails": {
                    "type": "array",
                    "description": "List of emails containing the keyword"
                }
            }
        }
    },
    {
        "name": "job_info_search",
        "description": "Job Information Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "jobTitle": {
                    "description": "Job Title",
                    "type": "string"
                },
                "industry": {
                    "description": "Industry Type",
                    "type": "string"
                },
                "location": {
                    "description": "Work Location",
                    "type": "string"
                },
                "postDate": {
                    "description": "Date of Job Posting",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "job_descriptions": {
                    "description": "Job Descriptions Summary",
                    "type": "string"
                },
                "companyName": {
                    "description": "Company Name Posting the Job",
                    "type": "string"
                },
                "jobDescription": {
                    "description": "Job Responsibilities and Requirements",
                    "type": "string"
                },
                "salaryRange": {
                    "description": "Salary Range",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "calculate_population_ratio",
        "description": "Calculate the ratio of the total population of two countries",
        "arguments": {
            "type": "object",
            "properties": {
                "us_population": {
                    "type": "integer",
                    "description": "Total population of the United States"
                },
                "china_population": {
                    "type": "integer",
                    "description": "Total population of China"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ratio": {
                    "type": "string",
                    "description": "The ratio of the total population of the two countries"
                }
            }
        }
    },
    {
        "name": "calculate_population_growth_rate",
        "description": "Calculate the growth rate based on population difference and the total population of the previous year",
        "arguments": {
            "type": "object",
            "properties": {
                "population_difference": {
                    "type": "integer",
                    "description": "Population difference"
                },
                "population_2022": {
                    "type": "integer",
                    "description": "Population in the year 2022"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "population_growth_rate": {
                    "type": "float",
                    "description": "Population growth rate"
                }
            }
        }
    },
    {
        "name": "compliance_check",
        "description": "Regulatory Compliance Check Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "company_name": {
                    "description": "Company Name",
                    "type": "string"
                },
                "industry_type": {
                    "description": "Industry Category",
                    "type": "string"
                },
                "date": {
                    "description": "Date for Compliance Check",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "compliance_status": {
                    "description": "Compliance Status, whether it conforms to the regulations at that time",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "service_area_check",
        "description": "Check if the service company covers the user's address",
        "arguments": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "User's address"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "area_status": {
                    "type": "string",
                    "description": "Whether the user's address is covered"
                }
            }
        }
    },
    {
        "name": "background_check",
        "description": "Background Check Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "FirstName": {
                    "description": "First Name",
                    "type": "string"
                },
                "LastName": {
                    "description": "Last Name",
                    "type": "string"
                },
                "DateOfBirth": {
                    "description": "Date of Birth",
                    "type": "string"
                },
                "address": {
                    "description": "Address of the individual being checked",
                    "type": "string"
                },
                "survey_id": {
                    "description": "Survey ID",
                    "type": "string"
                },
                "participant_id": {
                    "description": "Participant ID",
                    "type": "string"
                },
                "date_time": {
                    "description": "Date and time of participation in the survey",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "background_info": {
                    "description": "Background Information",
                    "type": "string"
                },
                "status": {
                    "description": "Investigation Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "confirm_order",
        "description": "Confirm order details",
        "arguments": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "integer",
                    "description": "Order ID"
                },
                "reservation_time": {
                    "type": "string",
                    "description": "Reservation time"
                },
                "dish_details": {
                    "type": "string",
                    "description": "Dish details"
                },
                "expected_total": {
                    "type": "integer",
                    "description": "Expected order total"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Order confirmation status"
                }
            }
        }
    },
    {
        "name": "confirm_availability",
        "description": "Confirm the availability of a specific guide on a given date",
        "arguments": {
            "type": "object",
            "properties": {
                "guide_name": {
                    "type": "string",
                    "description": "The name of the guide"
                },
                "date": {
                    "type": "string",
                    "description": "The date of the service booking",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether the guide is available"
                }
            }
        }
    },
    {
        "name": "appointment_info_submission",
        "description": "Appointment Information Filling Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "appointment_info": {
                    "description": "Appointment Information",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "submission_result": {
                    "description": "Appointment Information Submission Result",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "special_meal_booking",
        "description": "Book special meals for passengers on a specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "passenger_info": {
                    "type": "string",
                    "description": "Passenger information"
                },
                "special_meal": {
                    "type": "string",
                    "description": "Special meal request"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "meal_booking_status": {
                    "type": "string",
                    "description": "Special meal booking status"
                }
            }
        }
    },
    {
        "name": "online_appointment_booking",
        "description": "Online Appointment Booking Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "businessType": {
                    "description": "Type of Business",
                    "type": "string"
                },
                "branchLocation": {
                    "description": "Branch Location",
                    "type": "string"
                },
                "date": {
                    "description": "Date of Appointment",
                    "type": "string"
                },
                "timeSlot": {
                    "description": "Appointment Time Slot",
                    "type": "string"
                },
                "mobileNumber": {
                    "description": "Mobile Number",
                    "type": "string"
                },
                "verificationCode": {
                    "description": "Verification Code",
                    "type": "string"
                },
                "acceptServiceAgreement": {
                    "description": "Accept the 'Appointment Service Agreement'",
                    "type": "boolean"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "appointment_number": {
                    "description": "Appointment Number",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "color_recognition_tool",
        "description": "Color recognition tool that can identify the main color tone in an image based on the input image and color type",
        "arguments": {
            "type": "object",
            "properties": {
                "imageUrl": {
                    "type": "string",
                    "format": "url",
                    "description": "The path of the image to be recognized, which needs to be an accessible URL",
                    "example": "http://example.com/pic.jpg"
                },
                "colorType": {
                    "type": "string",
                    "description": "The type of color (such as RGB, HSL, etc.)",
                    "enum": [
                        "RGB",
                        "HSL"
                    ]
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of color recognition (such as the entire image, near the center point, etc.)",
                    "enum": [
                        "entire image",
                        "near the center point"
                    ]
                },
                "sensitivity": {
                    "type": "integer",
                    "description": "Color sensitivity, with values between 1-100. The higher the value, the more sensitive the color recognition",
                    "minimum": 1,
                    "maximum": 100,
                    "example": 50
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "primaryColor": {
                    "type": "string",
                    "description": "The primary color tone identified in the image"
                }
            }
        }
    },
    {
        "name": "social_media_activity_analyzer",
        "description": "Analyzes a specified user's activity level on social media, including posting frequency and number of interactions",
        "arguments": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string",
                    "description": "The full name of the user to be analyzed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "activity_report": {
                    "type": "object",
                    "description": "Social media activity report of the user",
                    "properties": {
                        "post_frequency": {
                            "type": "integer",
                            "description": "Posting frequency"
                        },
                        "interaction_count": {
                            "type": "integer",
                            "description": "Number of interactions, such as likes, comments, shares"
                        }
                    }
                }
            }
        }
    },
    {
        "name": "analyze_market_impact",
        "description": "Analyze the potential impact of market events on future commodity prices",
        "arguments": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "string",
                    "description": "List of market events"
                },
                "duration": {
                    "type": "string",
                    "description": "Forecast time span"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "impact": {
                    "type": "string",
                    "description": "Potential impact of market events on prices"
                }
            }
        }
    },
    {
        "name": "get_all_room_types",
        "description": "Get the list of all room types for the specified hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "room_types": {
                    "type": "array",
                    "description": "List of hotel room types"
                }
            }
        }
    },
    {
        "name": "pet_care_tool",
        "description": "Pet care tool, used to help owners take better care of their pets",
        "arguments": {
            "type": "object",
            "properties": {
                "petType": {
                    "type": "string",
                    "description": "Type of pet, supports both cat and dog",
                    "enum": [
                        "cat",
                        "dog"
                    ],
                    "example": "cat"
                },
                "petAge": {
                    "type": "integer",
                    "description": "Age of the pet in months, must be greater than 0 and less than 200",
                    "minimum": 0,
                    "maximum": 200,
                    "example": 12
                },
                "petWeight": {
                    "type": "integer",
                    "description": "Weight of the pet in grams, must be greater than 0",
                    "minimum": 0,
                    "example": 5000
                },
                "feedFrequency": {
                    "type": "string",
                    "description": "Feeding frequency, such as twice a day, three times a week, etc."
                },
                "walkFrequency": {
                    "type": "string",
                    "description": "Dog walking frequency, such as once a day, twice a week, etc., only valid for dog type pets"
                },
                "vaccineStatus": {
                    "type": "boolean",
                    "description": "Whether the pet has been vaccinated"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "carePlan": {
                    "type": "object",
                    "description": "Pet care plan",
                    "properties": {
                        "feedingSchedule": {
                            "type": "string",
                            "description": "Recommended feeding schedule"
                        },
                        "walkingSchedule": {
                            "type": "string",
                            "description": "Recommended dog walking schedule, only valid for dog type pets"
                        },
                        "vaccineRecommendations": {
                            "type": "array",
                            "description": "Recommended vaccination schedule"
                        },
                        "weightManagement": {
                            "type": "string",
                            "description": "Weight management suggestions"
                        }
                    }
                }
            }
        }
    },
    {
        "name": "search_recent_books",
        "description": "Search for books that have been listed recently",
        "arguments": {
            "type": "object",
            "properties": {
                "time_frame": {
                    "type": "string",
                    "description": "Time frame of listing"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "books_list": {
                    "type": "array",
                    "description": "List of books found"
                }
            }
        }
    },
    {
        "name": "news_headlines_generator",
        "description": "News Headlines Generation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "keyword": {
                    "description": "News Keyword",
                    "type": "string"
                },
                "publishDate": {
                    "description": "News Publish Date",
                    "type": "string"
                },
                "publisher": {
                    "description": "News Publishing Agency",
                    "type": "string"
                },
                "category": {
                    "description": "News Category",
                    "type": "string"
                },
                "region": {
                    "description": "Region of News Release",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "headline": {
                    "description": "Generated News Headline",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "headline_news_search",
        "description": "Headline News Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "keywords": {
                    "description": "Keywords",
                    "type": "string"
                },
                "category": {
                    "description": "News Category",
                    "type": "string"
                },
                "date": {
                    "description": "News Release Date",
                    "type": "string"
                },
                "location": {
                    "description": "Geographical Location of the News",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "headline_news": {
                    "description": "Headline News",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "get_jd_vendors_prices",
        "description": "Retrieve all vendor quotations for a specific product within JD",
        "arguments": {
            "type": "object",
            "properties": {
                "productID": {
                    "type": "string",
                    "description": "The product ID for which the quotation is being queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "vendors": {
                    "type": "array",
                    "description": "List of vendors and their quotations",
                    "items": {
                        "type": "object",
                        "properties": {
                            "vendorId": {
                                "type": "integer",
                                "description": "Vendor ID"
                            },
                            "price": {
                                "type": "number",
                                "description": "Vendor quotation"
                            }
                        },
                        "required": [
                            "vendorId",
                            "price"
                        ]
                    }
                }
            }
        }
    },
    {
        "name": "wsj_article_search",
        "description": "Search for expert analysis articles in The Wall Street Journal about specific keywords",
        "arguments": {
            "type": "object",
            "properties": {
                "keyword": {
                    "type": "string",
                    "description": "The keyword to search for"
                },
                "date": {
                    "type": "string",
                    "description": "The date the article was published",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "articles": {
                    "type": "array",
                    "description": "List of expert analysis articles found"
                }
            }
        }
    },
    {
        "name": "news_content_fetcher",
        "description": "Retrieve detailed content of specified news headlines",
        "arguments": {
            "type": "object",
            "properties": {
                "headline": {
                    "type": "string",
                    "description": "News headline title"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Detailed content of the news"
                }
            }
        }
    },
    {
        "name": "extract_news_details",
        "description": "Extract detailed content of news related to specific keywords",
        "arguments": {
            "type": "object",
            "properties": {
                "headline_news": {
                    "type": "array",
                    "description": "List of headline news"
                },
                "keyword": {
                    "type": "string",
                    "description": "Keyword for filtering news"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "related_news_content": {
                    "type": "string",
                    "description": "Content of news related to the keyword"
                },
                "related_news_title": {
                    "type": "string",
                    "description": "Title of news related to the keyword"
                }
            }
        }
    },
    {
        "name": "search_news_by_date",
        "description": "Search for stock news by date",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "type": "string",
                    "description": "Stock code"
                },
                "fluctuation_dates": {
                    "type": "array",
                    "description": "List of dates with significant fluctuations"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "news": {
                    "type": "array",
                    "description": "List of news links and summaries"
                }
            }
        }
    },
    {
        "name": "generate_short_news_report",
        "description": "Generate a brief news report based on key points of news",
        "arguments": {
            "type": "object",
            "properties": {
                "news_points": {
                    "type": "string",
                    "description": "Key points of the news"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "short_news_report": {
                    "type": "string",
                    "description": "Generated brief news report content"
                }
            }
        }
    },
    {
        "name": "headline_news_generator",
        "description": "Headline News Generation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "keyword": {
                    "description": "Keyword",
                    "type": "string"
                },
                "date": {
                    "description": "Date of the news",
                    "type": "string",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$"
                },
                "region": {
                    "description": "Region where the news occurred",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "headline_news": {
                    "description": "Generated headline news",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "home_cleaning_booking",
        "description": "Home Cleaning Booking Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "cleaningDate": {
                    "description": "Cleaning Date",
                    "type": "string"
                },
                "cleaningTime": {
                    "description": "Cleaning Time",
                    "type": "string"
                },
                "city": {
                    "description": "City where the home is located",
                    "type": "string"
                },
                "address": {
                    "description": "Address of the house to be cleaned",
                    "type": "string"
                },
                "contact_info": {
                    "description": "User's contact information",
                    "type": "string"
                },
                "payment_info": {
                    "description": "User's payment information",
                    "type": "string"
                },
                "cleaning_details": {
                    "description": "Scope and special requirements of the cleaning service",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cleaning_status": {
                    "description": "Home Cleaning Booking Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "home_cleaning_changing",
        "description": "Home Cleaning Reservation Change Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "originalCleaningDate": {
                    "description": "The cleaning date that needs to be changed",
                    "type": "string"
                },
                "originalCleaningTime": {
                    "description": "The cleaning time that needs to be changed",
                    "type": "string"
                },
                "originalAddress": {
                    "description": "The home address that needs to be changed",
                    "type": "string"
                },
                "originalCity": {
                    "description": "The city of the home that needs to be changed",
                    "type": "string"
                },
                "newCleaningDate": {
                    "description": "The new cleaning date. If not provided, the default is that the cleaning date remains unchanged.",
                    "type": "string"
                },
                "newCleaningTime": {
                    "description": "The new cleaning time. If not provided, the default is that the cleaning time remains unchanged.",
                    "type": "string"
                },
                "newAddress": {
                    "description": "The new home address. If not provided, the default is that the address remains unchanged.",
                    "type": "string"
                },
                "newCity": {
                    "description": "The city of the home after the change. If not provided, the default is that the city remains unchanged.",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cleaning_status": {
                    "description": "Home Cleaning Change Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "compare_cleaning_services",
        "description": "Compare the services, prices, and reviews of cleaning companies",
        "arguments": {
            "type": "object",
            "properties": {
                "query_results": {
                    "type": "string",
                    "description": "List of cleaning company query results"
                },
                "address": {
                    "type": "string",
                    "description": "Address of the house that needs cleaning"
                },
                "city": {
                    "type": "string",
                    "description": "City where the home is located"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "best_provider": {
                    "type": "string",
                    "description": "Best service provider"
                },
                "comparison_table": {
                    "type": "string",
                    "description": "Cleaning company comparison table"
                }
            }
        }
    },
    {
        "name": "browse_homepage",
        "description": "Browse Weibo homepage",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Browsing status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "payment_change_guide",
        "description": "Get the payment change guide tool",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "change_guide": {
                    "description": "Payment instructions after fee change",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "homestay_availability_check",
        "description": "Homestay Availability Check Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Check-in Date",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                },
                "duration": {
                    "description": "Length of Stay",
                    "type": "integer"
                },
                "location": {
                    "description": "Location of the Homestay",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "description": "Availability of the Property",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "homestay_price_search",
        "description": "Homestay Price Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "checkInDate": {
                    "description": "Check-in Date",
                    "type": "string",
                    "format": "date-time"
                },
                "checkOutDate": {
                    "description": "Check-out Date",
                    "type": "string",
                    "format": "date-time"
                },
                "location": {
                    "description": "Geographical Location of the Homestay",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "homestay_price": {
                    "description": "Homestay Price",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "filter_cleaning_service",
        "description": "Filter home cleaning service providers offering eco-friendly cleaning options in specific cities and districts",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The city where the service is located"
                },
                "district": {
                    "type": "string",
                    "description": "The district where the service is located"
                },
                "eco_friendly": {
                    "type": "boolean",
                    "description": "Whether eco-friendly cleaning options are provided"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_providers": {
                    "type": "array",
                    "description": "List of qualified service providers"
                }
            }
        }
    },
    {
        "name": "homestay_id_search",
        "description": "Search for homestay ID based on homestay name and location",
        "arguments": {
            "type": "object",
            "properties": {
                "homestay_name": {
                    "type": "string",
                    "description": "Homestay name"
                },
                "location": {
                    "type": "string",
                    "description": "Homestay location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "homestay_id": {
                    "type": "string",
                    "description": "Homestay ID"
                }
            }
        }
    },
    {
        "name": "filter_good_reputation_cleaners",
        "description": "Filter service providers with good reputation within a specified location range",
        "arguments": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address of the service provider"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "providers": {
                    "type": "array",
                    "description": "List of qualified service providers"
                }
            }
        }
    },
    {
        "name": "check_provider_reputation",
        "description": "Check the reputation score of the service provider",
        "arguments": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": "Service provider"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reputation_score": {
                    "type": "string",
                    "description": "Reputation score of the service provider"
                }
            }
        }
    },
    {
        "name": "confirm_cleaning_availability",
        "description": "Confirm the booking availability of the service provider for the specified date and time slot",
        "arguments": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": "Service provider"
                },
                "date": {
                    "type": "string",
                    "description": "Booking date"
                },
                "time": {
                    "type": "string",
                    "description": "Booking time slot"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Booking availability status of the service provider"
                }
            }
        }
    },
    {
        "name": "confirm_additional_charges",
        "description": "Confirm whether there are additional charges after the order is modified",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "additional_charges": {
                    "type": "boolean",
                    "description": "Whether there are additional charges"
                }
            }
        }
    },
    {
        "name": "filter_transactions_by_date",
        "description": "Filter transactions by date",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "days": {
                    "type": "integer",
                    "description": "Number of past days"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Filter status",
                    "type": "string"
                },
                "filtered_transactions": {
                    "description": "Filtered transactions",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "provider_availability_and_professionalism_check",
        "description": "Confirm the availability and professionalism of service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "provider_list": {
                    "type": "array",
                    "description": "List of maintenance service providers"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "available_providers": {
                    "type": "array",
                    "description": "List of available and professional service providers"
                }
            }
        }
    },
    {
        "name": "arrange_driver",
        "description": "Arrange driver for airport pickup service",
        "arguments": {
            "type": "object",
            "properties": {
                "pickup_time": {
                    "type": "string",
                    "description": "Pickup time"
                },
                "guest_names": {
                    "type": "string",
                    "description": "Guest names"
                },
                "flight_info": {
                    "type": "string",
                    "description": "Guest flight information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "arrangement_status": {
                    "type": "string",
                    "description": "Driver arrangement status"
                }
            }
        }
    },
    {
        "name": "email_marketing_tool",
        "description": "Email marketing tool that can send marketing emails to specified recipients",
        "arguments": {
            "type": "object",
            "properties": {
                "senderEmail": {
                    "type": "string",
                    "description": "The sender's email address, must conform to the email address format",
                    "format": "email"
                },
                "receiverEmails": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "The recipient's email address, must conform to the email address format",
                        "format": "email"
                    },
                    "description": "The email addresses of the recipients, can be one or multiple",
                    "example": [
                        "example1@gmail.com",
                        "example2@gmail.com"
                    ]
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the email"
                },
                "content": {
                    "type": "string",
                    "description": "The content of the email"
                },
                "attachment": {
                    "type": "string",
                    "description": "The attachment of the email, a full file path is required",
                    "example": "D:/example.docx"
                },
                "isHtml": {
                    "type": "boolean",
                    "description": "Whether the email is an HTML email",
                    "default": false
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the email was sent successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "part_time_job_tool",
        "description": "Part-time job information collection and management tool, only applicable to college students",
        "arguments": {
            "type": "object",
            "properties": {
                "jobType": {
                    "type": "string",
                    "enum": [
                        "Education",
                        "Sales",
                        "Media",
                        "Service Industry",
                        "IT"
                    ],
                    "description": "Type of part-time job, only supports five types: Education, Sales, Media, Service Industry, IT",
                    "example": "Education"
                },
                "hourlyWage": {
                    "type": "number",
                    "min": 1,
                    "description": "Hourly wage, must be a number greater than or equal to 1",
                    "example": 15
                },
                "workingHours": {
                    "type": "string",
                    "pattern": "^([01]\\d|2[0-3]):([0-5]\\d)-([01]\\d|2[0-3]):([0-5]\\d)$",
                    "description": "Working hours, format 'HH:MM-HH:MM'",
                    "example": "09:00-18:00"
                },
                "jobLocation": {
                    "type": "string",
                    "description": "Job location",
                    "example": "No. 888, West Zhongshan Road, Xuhui District, Shanghai"
                },
                "experienceRequired": {
                    "type": "boolean",
                    "description": "Whether experience is required"
                },
                "studentIdentityRequired": {
                    "type": "boolean",
                    "description": "Whether it is required to be a current student"
                },
                "jobDescription": {
                    "type": "string",
                    "description": "Job description"
                },
                "contact": {
                    "type": "string",
                    "description": "Contact information, such as phone or email, etc."
                },
                "postDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of information posting",
                    "example": "2022-02-24"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "description": "Whether the information was successfully collected and saved"
                },
                "jobId": {
                    "type": "string",
                    "description": "Unique identifier of the successfully created part-time job information"
                }
            }
        }
    },
    {
        "name": "create_encrypted_email",
        "description": "Create encrypted email content",
        "arguments": {
            "type": "object",
            "properties": {
                "recipient": {
                    "type": "string",
                    "description": "Recipient email address"
                },
                "subject": {
                    "type": "string",
                    "description": "Email subject"
                },
                "message_body": {
                    "type": "string",
                    "description": "Email body content"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "encrypted_message": {
                    "type": "string",
                    "description": "Encrypted email content"
                }
            }
        }
    },
    {
        "name": "custom_product_service_messenger",
        "description": "Custom messenger tool for designated product services",
        "arguments": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "description": "Phone Number",
                    "type": "string"
                },
                "alias": {
                    "description": "Alias",
                    "type": "string"
                },
                "email": {
                    "description": "E-Mail",
                    "type": "string"
                },
                "defaultPaymentAccount": {
                    "description": "Default Payment Account",
                    "type": "string"
                },
                "verificationCode": {
                    "description": "Verification Code",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "custom_service_status": {
                    "description": "Custom Service Status (Success, Failure)",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "service_point_search",
        "description": "Service Point/Self-service Inquiry Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "description": "City for the inquiry",
                    "type": "string"
                },
                "area": {
                    "description": "Area for the inquiry",
                    "type": "string"
                },
                "servicePointType": {
                    "description": "Type of service point (Service Point/Self-service Point)",
                    "type": "string"
                },
                "businessType": {
                    "description": "Business type (All/Personal including foreign exchange/Personal excluding foreign exchange/Corporate/By appointment)",
                    "type": "string"
                },
                "keyword": {
                    "description": "Keyword",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "business_location": {
                    "description": "Location for business processing",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "create_email_draft_with_file",
        "description": "Create a new email draft and insert the content of the specified text file into the body of the email",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path of the content to be inserted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the draft creation and content insertion were successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "create_email_with_document_content",
        "description": "Create an email and copy the content of the specified document into the email body",
        "arguments": {
            "type": "object",
            "properties": {
                "subject": {
                    "type": "string",
                    "description": "Email subject"
                },
                "document_path": {
                    "type": "string",
                    "description": "File path of the document"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the email creation and content copying operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "create_timeline",
        "description": "Draw a timeline based on the schedule details",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_details": {
                    "type": "string",
                    "description": "Details of the afternoon schedule"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "timeline": {
                    "type": "string",
                    "description": "Generated timeline chart"
                }
            }
        }
    },
    {
        "name": "convert_document_to_pdf",
        "description": "Convert document to PDF format",
        "arguments": {
            "type": "object",
            "properties": {
                "document": {
                    "description": "The document object to be converted",
                    "type": "object"
                },
                "input_format": {
                    "description": "The format of the input file",
                    "type": "string"
                },
                "output_format": {
                    "description": "The format of the output file",
                    "type": "string"
                },
                "editable": {
                    "type": "string",
                    "description": "Whether the converted PDF file is editable"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "pdf": {
                    "description": "The converted PDF file",
                    "type": "object"
                },
                "status": {
                    "description": "Whether the conversion operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "grammar_and_spelling_checker",
        "description": "Check the grammar and spelling errors in the document",
        "arguments": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "string",
                    "description": "The document to be checked"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "corrections": {
                    "type": "array",
                    "description": "Suggested grammar and spelling corrections"
                }
            }
        }
    },
    {
        "name": "cover_letter_creator",
        "description": "Generate a customized cover letter based on the provided job title, company name, and applicant's name",
        "arguments": {
            "type": "object",
            "properties": {
                "jobTitle": {
                    "type": "string",
                    "description": "Job Title"
                },
                "companyName": {
                    "type": "string",
                    "description": "Company Name"
                },
                "applicantName": {
                    "type": "string",
                    "description": "Applicant's Name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cover_letter": {
                    "type": "string",
                    "description": "Generated Cover Letter"
                }
            }
        }
    },
    {
        "name": "job_hiring_tool",
        "description": "Job hiring tool, used for posting job vacancies and filtering qualified candidates",
        "arguments": {
            "type": "object",
            "properties": {
                "jobPosition": {
                    "type": "string",
                    "description": "Recruitment position, e.g.: Java Developer",
                    "example": "Java Developer"
                },
                "educationRequirement": {
                    "type": "string",
                    "description": "Educational background requirement",
                    "enum": [
                        "Doctorate",
                        "Master's",
                        "Bachelor's",
                        "Associate",
                        "Other"
                    ]
                },
                "workExperience": {
                    "type": "string",
                    "description": "Work experience requirement, e.g.: More than 2 years, no work experience, etc.",
                    "format": "number range",
                    "example": "More than 2 years"
                },
                "salaryRange": {
                    "type": "string",
                    "description": "Salary range, e.g.: 5k-10k, negotiable, etc.",
                    "example": "5k-10k"
                },
                "jobLocation": {
                    "type": "string",
                    "description": "Job location, e.g.: Beijing, Shanghai, etc.",
                    "example": "Beijing"
                },
                "companySize": {
                    "type": "string",
                    "description": "Company size, e.g.: 50-100 people, 100-500 people, etc.",
                    "example": "50-100 people"
                },
                "requiredSkills": {
                    "type": "string",
                    "description": "Required skills, e.g.: Java, Python, etc., separate multiple skills with commas",
                    "example": "Java,Python"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "candidates": {
                    "type": "array",
                    "description": "List of candidates who meet the requirements",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Candidate's name"
                            },
                            "contact": {
                                "type": "string",
                                "description": "Candidate's contact information"
                            },
                            "education": {
                                "type": "string",
                                "description": "Candidate's educational background"
                            },
                            "experience": {
                                "type": "string",
                                "description": "Candidate's work experience"
                            },
                            "skills": {
                                "type": "array",
                                "description": "List of candidate's skills",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "jobPosted": {
                    "type": "boolean",
                    "description": "Whether the job position has been posted"
                }
            }
        }
    },
    {
        "name": "job_post_generator",
        "description": "Job Post Generator Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "jobTitle": {
                    "description": "Job Title",
                    "type": "string"
                },
                "companyName": {
                    "description": "Company Name",
                    "type": "string"
                },
                "publishDate": {
                    "description": "Publish Date",
                    "type": "string"
                },
                "jobDescription": {
                    "description": "Job Description",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "job_post": {
                    "description": "Generated Job Advertisement",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_encrypted_email",
        "description": "Send encrypted ticket information to a specified email address",
        "arguments": {
            "type": "object",
            "properties": {
                "recipient": {
                    "type": "string",
                    "description": "The recipient's email address"
                },
                "encrypted_ticket_info": {
                    "type": "string",
                    "description": "Encrypted ticket information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "email_status": {
                    "type": "string",
                    "description": "Email sending status"
                }
            }
        }
    },
    {
        "name": "check_security_level",
        "description": "Check the security level of the current logged-in account",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "security_level": {
                    "type": "string",
                    "description": "The security level of the account"
                }
            }
        }
    },
    {
        "name": "verify_technician_qualification",
        "description": "Confirm the technician's repair experience and qualifications for the specified appliance model",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceType": {
                    "type": "string",
                    "description": "Appliance type"
                },
                "applianceBrand": {
                    "type": "string",
                    "description": "Appliance brand"
                },
                "applianceModel": {
                    "type": "string",
                    "description": "Appliance model"
                },
                "time": {
                    "type": "string",
                    "description": "Scheduled service time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "type": "string",
                    "description": "Verification status"
                },
                "technician_availability": {
                    "type": "string",
                    "description": "Technician availability"
                },
                "experience_status": {
                    "type": "string",
                    "description": "Status of the technician's repair experience"
                },
                "qualification_status": {
                    "type": "string",
                    "description": "Technician qualification confirmation status"
                }
            }
        }
    },
    {
        "name": "verify_employment",
        "description": "Verify an individual's employment record",
        "arguments": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string",
                    "description": "Full name of the person to be verified"
                },
                "employmentDetails": {
                    "type": "string",
                    "description": "Employment history information provided by the candidate"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "type": "string",
                    "description": "Employment record verification status"
                }
            }
        }
    },
    {
        "name": "verify_education",
        "description": "Verify educational background information",
        "arguments": {
            "type": "object",
            "properties": {
                "fullName": {
                    "type": "string",
                    "description": "Candidate's full name"
                },
                "educationDetails": {
                    "type": "string",
                    "description": "Education information"
                },
                "dateOfBirth": {
                    "type": "string",
                    "description": "Date of birth"
                },
                "degree": {
                    "type": "string",
                    "description": "Degree"
                },
                "school": {
                    "type": "string",
                    "description": "Graduated school"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "type": "string",
                    "description": "Education information verification status"
                }
            }
        }
    },
    {
        "name": "online_meeting_booking",
        "description": "Create an online meeting and set the time",
        "arguments": {
            "type": "object",
            "properties": {
                "start_time": {
                    "description": "Meeting start time",
                    "type": "string"
                },
                "end_time": {
                    "description": "Meeting end time",
                    "type": "string"
                },
                "platform": {
                    "type": "string",
                    "description": "Online meeting platform"
                },
                "attendees": {
                    "type": "integer",
                    "description": "Number of participants"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation": {
                    "description": "Booking confirmation information",
                    "type": "string"
                },
                "booking_status": {
                    "description": "Meeting booking status",
                    "type": "string"
                },
                "meeting_id": {
                    "description": "Created meeting ID",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_reminder_notification",
        "description": "Set reminder notification tool",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Time of the reminder notification"
                },
                "message": {
                    "type": "string",
                    "description": "Content of the reminder notification"
                },
                "frequency": {
                    "type": "string",
                    "description": "Frequency of sending the reminder notification, options: once, daily, weekly (Monday to Sunday), default is once"
                },
                "start_date": {
                    "type": "string",
                    "description": "Start date of the reminder notification"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Result of the reminder notification setting"
                }
            }
        }
    },
    {
        "name": "academic_achievement_query",
        "description": "Academic Achievement Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "researcherName": {
                    "description": "Name of the researcher",
                    "type": "string"
                },
                "publicationPeriod": {
                    "description": "Publication period eg. 2020-01-01 00:00 TO 2021-12-31 23:59",
                    "type": "string"
                },
                "researchField": {
                    "description": "Research field",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "numberOfPublications": {
                    "description": "Number of published academic articles",
                    "type": "integer"
                },
                "citation_count": {
                    "description": "Citation count within the selected time frame",
                    "type": "integer"
                },
                "impact_factor": {
                    "description": "Impact factor",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "temperature_query",
        "description": "Query the highest and lowest temperature of a specified location and date",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Location for querying temperature"
                },
                "date": {
                    "type": "string",
                    "description": "Date for querying temperature"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "max_temperature": {
                    "description": "Highest temperature",
                    "type": "number"
                },
                "min_temperature": {
                    "description": "Lowest temperature",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "ai_search_tool",
        "description": "An intelligent search tool capable of fuzzy and deep search",
        "arguments": {
            "type": "object",
            "properties": {
                "query": {
                    "description": "Search keywords, must be between 2 to 50 characters",
                    "type": "string"
                },
                "language": {
                    "description": "The language used for searching, such as English, Chinese, etc.",
                    "type": "string",
                    "enum": [
                        "English",
                        "Chinese",
                        "Japanese",
                        "Spanish",
                        "French",
                        "German"
                    ]
                },
                "type": {
                    "description": "Type of search, includes fuzzy search and deep search",
                    "type": "string",
                    "enum": [
                        "fuzzy",
                        "deep"
                    ]
                },
                "region": {
                    "description": "Search region, must be an ISO 3166-1 alpha-2 country code",
                    "type": "string",
                    "format": "ISO 3166-1 alpha-2",
                    "example": "US"
                },
                "category": {
                    "description": "Search category, such as books, movies, people, etc.",
                    "type": "string"
                },
                "start_date": {
                    "description": "Search start date, must not be earlier than 1990-01-01",
                    "type": "string",
                    "format": "date",
                    "example": "2010-01-01"
                },
                "end_date": {
                    "description": "Search end date, must not be later than the current date",
                    "type": "string",
                    "format": "date",
                    "example": "2022-12-30"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_results": {
                    "description": "Search results",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "hand_eye_coordination_analysis",
        "description": "Analyze the user's hand-eye coordination abilities and provide a graded assessment",
        "arguments": {
            "type": "object",
            "properties": {
                "computer_use_time": {
                    "type": "integer",
                    "description": "Daily computer usage time in hours"
                },
                "mobile_use_time": {
                    "type": "integer",
                    "description": "Daily mobile phone usage time in hours"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "coordination_grade": {
                    "type": "string",
                    "description": "Hand-eye coordination grade"
                }
            }
        }
    },
    {
        "name": "search_and_select_file",
        "description": "Search for a file in a specified location and select it",
        "arguments": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string",
                    "description": "The file name to search for"
                },
                "file_location": {
                    "type": "string",
                    "description": "The location of the file"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The path of the file found"
                },
                "status": {
                    "type": "boolean",
                    "description": "Whether the search and select operation was successful"
                }
            }
        }
    },
    {
        "name": "movie_recommendation_tool",
        "description": "Personalized Movie Recommendation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "preferredGenres": {
                    "type": "array",
                    "description": "User's Preferred Movie Genres",
                    "items": {
                        "type": "string",
                        "enum": [
                            "action",
                            "drama",
                            "comedy",
                            "thriller",
                            "romance"
                        ]
                    }
                },
                "ratingRange": {
                    "type": "string",
                    "description": "Acceptable Movie Rating Range for User",
                    "pattern": "^\\d+(\\.\\d+)?-\\d+(\\.\\d+)?$",
                    "example": "7-9"
                },
                "yearRange": {
                    "type": "string",
                    "description": "Acceptable Movie Era Range for User",
                    "pattern": "^\\d{4}-\\d{4}$",
                    "example": "2000-2020"
                },
                "language": {
                    "type": "string",
                    "description": "User's Preferred Movie Language",
                    "enum": [
                        "English",
                        "Spanish",
                        "Chinese",
                        "Hindi",
                        "Japanese"
                    ]
                },
                "durationRange": {
                    "type": "string",
                    "description": "Acceptable Movie Duration Range for User",
                    "pattern": "^\\d+-\\d+$",
                    "example": "90-120"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the Recommendation Operation was Successful",
                    "type": "string"
                },
                "recommended_movies": {
                    "description": "List of Recommended Movies",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "product_service_selection",
        "description": "Product Service Selection Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "productType": {
                    "description": "Product type, divided into business reminder/marketing service/information categories",
                    "type": "string"
                },
                "productName": {
                    "description": "Product name, select the corresponding product according to the product type",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "fee": {
                    "description": "Product service fee standard",
                    "type": "string"
                },
                "customizable": {
                    "description": "Whether the product service is customizable",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "app_store_tool",
        "description": "This tool is used for information retrieval and related operations in the app store, such as obtaining a list of apps, searching for apps, etc.",
        "arguments": {
            "type": "object",
            "properties": {
                "action": {
                    "enum": [
                        "get_app_list",
                        "search_app",
                        "download_app"
                    ],
                    "description": "Type of operation: 'get_app_list' to obtain a list of apps, 'search_app' to search for a specific app, 'download_app' to download an app",
                    "example": "get_app_list",
                    "type": "string"
                },
                "appName": {
                    "type": "string",
                    "description": "The name of the app to search for or download, default is empty. This parameter is required if 'action' is 'search_app' or 'download_app'"
                },
                "appCategory": {
                    "type": "string",
                    "description": "Valid only when 'action' is 'get_app_list', allows users to filter for specific types of apps, such as 'game', 'education', etc., if empty returns all types of apps",
                    "example": "game"
                },
                "platform": {
                    "enum": [
                        "Android",
                        "iOS"
                    ],
                    "description": "Type of app platform",
                    "example": "Android",
                    "type": "string"
                },
                "sortBy": {
                    "enum": [
                        "popularity",
                        "rating",
                        "release_date"
                    ],
                    "description": "Sorting method, options include 'popularity' (popularity), 'rating' (rating), or 'release_date' (release date), default is 'popularity'",
                    "example": "popularity",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "description": "Whether the operation was successfully executed"
                },
                "data": {
                    "type": "array",
                    "description": "Returns corresponding data based on 'action', which may be a list of apps, search results, or download confirmation information"
                },
                "message": {
                    "type": "string",
                    "description": "Additional information about the operation result, such as error messages or confirmation of successful operation"
                }
            }
        }
    },
    {
        "name": "travel_camera_recommender",
        "description": "Travel Camera Recommendation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "purpose": {
                    "description": "Photography Purpose",
                    "type": "string"
                },
                "budget": {
                    "description": "Budget",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recommended_camera": {
                    "description": "Recommended Camera",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "update_financial_report",
        "description": "Update the transaction records in the financial report",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                },
                "new_amount": {
                    "type": "integer",
                    "description": "New transaction amount, unit: RMB"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the report update"
                }
            }
        }
    },
    {
        "name": "retrieve_login_history",
        "description": "Retrieve the login history of a specified account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_history": {
                    "description": "Login history of the account",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "real_name_authentication",
        "description": "Verify if the user's ID number and name meet the real-name authentication requirements",
        "arguments": {
            "type": "object",
            "properties": {
                "identity_number": {
                    "type": "string",
                    "description": "The user's ID card number"
                },
                "name": {
                    "type": "string",
                    "description": "The user's name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "authentication_status": {
                    "type": "string",
                    "description": "The status of the real-name authentication"
                }
            }
        }
    },
    {
        "name": "check_recent_login_activities",
        "description": "Check the account's recent login activities",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "recent_activities": {
                    "description": "Detailed information of recent login activities",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "format_document",
        "description": "Format document content",
        "arguments": {
            "type": "object",
            "properties": {
                "document_name": {
                    "type": "string",
                    "description": "Document name"
                },
                "file_path": {
                    "description": "Document path",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the document formatting was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "timer_stop_music",
        "description": "Set the music player to automatically stop playing after a specified time",
        "arguments": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer",
                    "description": "The duration before automatic stop of playback, in minutes",
                    "minimum": 1
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the timer stop was successfully set",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "free_reading_tool",
        "description": "Free reading tool, supports multiple document formats such as doc, pdf, txt, and provides various page-turning modes",
        "arguments": {
            "type": "object",
            "properties": {
                "filePath": {
                    "type": "string",
                    "description": "The document path to be read, currently supports documents in formats such as doc, pdf, txt, and must be a file under the C drive",
                    "example": "C:/Documents/book.doc"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "The number of text lines displayed per page, ranging between 10-50, any number beyond or below will be adjusted to the default value of 25 lines",
                    "minimum": 10,
                    "maximum": 50
                },
                "flipMode": {
                    "type": "string",
                    "description": "Page-turning mode, including: 'normal' regular page-turning; 'roll' scrolling page-turning",
                    "enum": [
                        "normal",
                        "roll"
                    ]
                },
                "fontSize": {
                    "type": "integer",
                    "description": "Font size, ranging between 10-20",
                    "minimum": 10,
                    "maximum": 20
                },
                "colorMode": {
                    "type": "string",
                    "description": "Color mode, including: 'dark' dark mode; 'light' light mode",
                    "enum": [
                        "dark",
                        "light"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "currentPageContent": {
                    "type": "string",
                    "description": "The content of the current page"
                },
                "totalPages": {
                    "type": "integer",
                    "description": "The total number of pages in the document"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the reader, for example: 'ready' ready; 'error' error"
                }
            }
        }
    },
    {
        "name": "music_playback",
        "description": "Music Player Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "songName": {
                    "description": "The song name must consist of 1 to 30 characters made up of letters, numbers, spaces, or '-'",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9 -]{1,30}$",
                    "example": "Hello world"
                },
                "artistName": {
                    "description": "Artist name is optional and should be less than 50 characters",
                    "type": "string",
                    "maxLength": 50
                },
                "albumName": {
                    "description": "Album name, if known",
                    "type": "string",
                    "maxLength": 100
                },
                "genre": {
                    "description": "The genre of the music, such as rock, pop, classic, etc.",
                    "type": "string",
                    "enum": [
                        "rock",
                        "pop",
                        "classic",
                        "jazz",
                        "hiphop",
                        "country"
                    ]
                },
                "year": {
                    "description": "The release year of the song",
                    "type": "integer",
                    "minimum": 1900,
                    "maximum": 2022
                },
                "startTime": {
                    "description": "The start time of playback, in the format mm:ss, between 0 to 5 minutes",
                    "type": "string",
                    "pattern": "^([0-4]:[0-5][0-9]|5:00)$"
                },
                "volume": {
                    "description": "The volume, from 0 (mute) to 100 (maximum volume)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100,
                    "example": 75
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "music_info": {
                    "description": "Music playback information",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "book_audio_equipment_if_unavailable",
        "description": "Book audio equipment if the conference room's audio equipment is unavailable",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The city where the conference room is located"
                },
                "roomID": {
                    "type": "string",
                    "description": "Conference room number"
                },
                "date": {
                    "type": "string",
                    "description": "The date when the audio equipment is needed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Audio equipment booking status"
                }
            }
        }
    },
    {
        "name": "morning_time_range",
        "description": "Determine the specific time range for the morning period",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "timeRange": {
                    "type": "string",
                    "description": "The time range of the morning period"
                }
            }
        }
    },
    {
        "name": "document_reader",
        "description": "Download and read the specified document",
        "arguments": {
            "type": "object",
            "properties": {
                "documentUrl": {
                    "type": "string",
                    "description": "The URL of the document"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "readStatus": {
                    "type": "boolean",
                    "description": "Whether the document has been read"
                }
            }
        }
    },
    {
        "name": "special_personality_test",
        "description": "Personality test tool that allows you to choose your favorite color, season, and music genre to generate a personality report",
        "arguments": {
            "type": "object",
            "properties": {
                "color_preference": {
                    "description": "Color Preference",
                    "type": "string",
                    "enum": [
                        "Red",
                        "Orange",
                        "Yellow",
                        "Green",
                        "Blue",
                        "Purple"
                    ]
                },
                "season_preference": {
                    "description": "Season Preference",
                    "type": "string",
                    "enum": [
                        "Spring",
                        "Summer",
                        "Autumn",
                        "Winter"
                    ]
                },
                "music_genre": {
                    "description": "Music Genre",
                    "type": "string",
                    "enum": [
                        "Pop",
                        "Classical",
                        "Rock",
                        "Jazz",
                        "Electronic",
                        "Country"
                    ]
                },
                "age": {
                    "description": "Age of the person taking the test",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 130,
                    "example": 25
                },
                "gender": {
                    "description": "Gender of the person taking the test",
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female",
                        "Other"
                    ]
                },
                "occupation": {
                    "description": "Occupation of the person taking the test",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "personality_report": {
                    "description": "Personality Report",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "music_discovery",
        "description": "Music discovery tool that provides recommendations based on the user's music taste, current time, and location",
        "arguments": {
            "type": "object",
            "properties": {
                "genre": {
                    "description": "Music genre",
                    "type": "string"
                },
                "period": {
                    "description": "Time period when the music was released",
                    "type": "string",
                    "format": "date-time"
                },
                "artist": {
                    "description": "Name of the artist",
                    "type": "string"
                },
                "musicTaste": {
                    "description": "User's music taste",
                    "type": "string"
                },
                "current_time": {
                    "description": "Current time",
                    "type": "string",
                    "format": "date-time"
                },
                "location": {
                    "description": "User's location",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "new_music": {
                    "description": "Newly discovered music",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "filter_music_by_weather",
        "description": "Filter suitable relaxing music based on current weather conditions",
        "arguments": {
            "type": "object",
            "properties": {
                "music_list": {
                    "type": "array",
                    "description": "List of music found"
                },
                "weather": {
                    "type": "string",
                    "description": "Current weather conditions"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_music": {
                    "type": "array",
                    "description": "Filtered list of music"
                }
            }
        }
    },
    {
        "name": "select_relaxing_music",
        "description": "Select relaxing music suitable for listening while watching anime",
        "arguments": {
            "type": "object",
            "properties": {
                "genre": {
                    "type": "string",
                    "description": "Music genre"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "song_name": {
                    "type": "string",
                    "description": "Selected music name"
                }
            }
        }
    },
    {
        "name": "event_atmosphere_match",
        "description": "Select matching tracks from a given music list based on the characteristics of the event's atmosphere",
        "arguments": {
            "type": "object",
            "properties": {
                "event_atmosphere": {
                    "type": "string",
                    "description": "The characteristics of the event's atmosphere"
                },
                "music_list": {
                    "type": "array",
                    "description": "The music list to be selected from"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "matched_music_list": {
                    "type": "array",
                    "description": "The list of music tracks that match the event's atmosphere"
                }
            }
        }
    },
    {
        "name": "play_music",
        "description": "Play the specified music",
        "arguments": {
            "type": "object",
            "properties": {
                "track_name": {
                    "type": "string",
                    "description": "The name of the music to play"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "play_status": {
                    "type": "string",
                    "description": "Music playback status"
                }
            }
        }
    },
    {
        "name": "get_selected_tour_group_details",
        "description": "Get the detailed information of the selected tour group",
        "arguments": {
            "type": "object",
            "properties": {
                "tour_group_name": {
                    "type": "string",
                    "description": "The name of the tour group"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "tour_group_id": {
                    "type": "string",
                    "description": "The unique identifier ID of the tour group"
                },
                "details": {
                    "type": "string",
                    "description": "The detailed information of the tour group"
                }
            }
        }
    },
    {
        "name": "get_artist_from_song",
        "description": "Get artist information based on the song name",
        "arguments": {
            "type": "object",
            "properties": {
                "song_name": {
                    "type": "string",
                    "description": "Song name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "artist_name": {
                    "description": "Artist name",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "style_similarity_filter",
        "description": "Filter out music tracks with similar styles based on a given artist's style",
        "arguments": {
            "type": "object",
            "properties": {
                "artist_style": {
                    "type": "string",
                    "description": "The style of the artist"
                },
                "music_list": {
                    "type": "array",
                    "description": "The music list to be filtered"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_music_list": {
                    "type": "array",
                    "description": "A list of music tracks with similar styles"
                }
            }
        }
    },
    {
        "name": "search_popular_attractions",
        "description": "Search for popular tourist attractions in a specified destination",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Travel destination"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "attractions": {
                    "type": "array",
                    "description": "List of popular tourist attractions"
                }
            }
        }
    },
    {
        "name": "get_popular_songs_by_artist",
        "description": "Query other popular songs by a specified artist",
        "arguments": {
            "type": "object",
            "properties": {
                "artist_name": {
                    "type": "string",
                    "description": "Artist name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "popular_songs": {
                    "description": "List of popular songs by the artist",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "random_music_selector",
        "description": "Randomly select music of a specified genre",
        "arguments": {
            "type": "object",
            "properties": {
                "genre": {
                    "type": "string",
                    "description": "Music genre"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "song_name": {
                    "type": "string",
                    "description": "Name of the randomly selected song"
                }
            }
        }
    },
    {
        "name": "artist_discovery",
        "description": "Discover popular artists based on specified music genre and time range",
        "arguments": {
            "type": "object",
            "properties": {
                "genre": {
                    "type": "string",
                    "description": "The genre of music"
                },
                "period": {
                    "type": "string",
                    "description": "The specified time range, formatted as within the recent X years"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "artists": {
                    "type": "array",
                    "description": "List of recommended artists",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "test_alarm_music",
        "description": "Test alarm ringtone",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "test_status": {
                    "type": "string",
                    "description": "Alarm ringtone test status"
                }
            }
        }
    },
    {
        "name": "calculate_periodic_dates",
        "description": "Calculate and return all periodic dates within a specified time range",
        "arguments": {
            "type": "object",
            "properties": {
                "start_date": {
                    "type": "string",
                    "description": "The start date of the periodic event"
                },
                "frequency": {
                    "type": "integer",
                    "description": "The frequency of the event (days)"
                },
                "end_date": {
                    "type": "string",
                    "description": "The end date of the periodic event"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "dates": {
                    "type": "array",
                    "description": "All the calculated periodic dates",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "find_transaction_id",
        "description": "Find transaction ID based on account ID, transaction date, amount, and description",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "date": {
                    "type": "string",
                    "description": "Transaction date",
                    "format": "date-time"
                },
                "amount": {
                    "type": "integer",
                    "description": "Transaction amount in RMB"
                },
                "description": {
                    "type": "string",
                    "description": "Transaction description"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Found transaction ID"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the search"
                }
            }
        }
    },
    {
        "name": "set_schedule_repetition",
        "description": "Set the repetition type and end date of the schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_title": {
                    "type": "string",
                    "description": "Title of the schedule"
                },
                "repetition_type": {
                    "type": "string",
                    "description": "Type of repetition"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date of repetition"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "repetition_status": {
                    "description": "Whether the repetition setting is successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_schedule_priority",
        "description": "Set priority for schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_title": {
                    "type": "string",
                    "description": "Title of the schedule"
                },
                "priority": {
                    "type": "string",
                    "description": "Priority of the schedule"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "priority_status": {
                    "description": "Whether the priority was successfully set",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "desensitize_transaction_info",
        "description": "Desensitize transaction record information",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_info": {
                    "description": "Transaction record information that needs to be desensitized",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "desensitized_transactions": {
                    "description": "Desensitized transaction record information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "confirm_transfer_with_code",
        "description": "Enter the transfer verification code and confirm the transfer operation",
        "arguments": {
            "type": "object",
            "properties": {
                "transfer_code": {
                    "type": "string",
                    "description": "The verification code required for the transfer operation"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "The confirmation status of the transfer operation"
                }
            }
        }
    },
    {
        "name": "check_car_availability",
        "description": "Check the availability of cars on a specified date and city",
        "arguments": {
            "type": "object",
            "properties": {
                "car_type": {
                    "type": "string",
                    "description": "Car model"
                },
                "start_date": {
                    "type": "string",
                    "description": "Car rental start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "Car rental end date"
                },
                "city": {
                    "type": "string",
                    "description": "Car rental city"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "string",
                    "description": "Car model availability"
                }
            }
        }
    },
    {
        "name": "book_camera_rental",
        "description": "Book camera rental service using user information",
        "arguments": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": "Selected rental service provider"
                },
                "cameraModel": {
                    "type": "string",
                    "description": "Camera model"
                },
                "rentalPeriod": {
                    "type": "integer",
                    "description": "Rental period (in days)"
                },
                "renterInfo": {
                    "type": "object",
                    "description": "Renter's identity information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                }
            }
        }
    },
    {
        "name": "delete_report_section",
        "description": "Delete a specific content section from a designated document",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path of the work report"
                },
                "section": {
                    "type": "string",
                    "description": "The report section to be deleted, for example, the market analysis section"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the delete operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "change_schedule_time",
        "description": "Change the time of a specified schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_id": {
                    "type": "string",
                    "description": "Schedule ID"
                },
                "new_time": {
                    "type": "string",
                    "description": "New time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the schedule time change was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "fetch_login_records",
        "description": "Retrieve login records of a specified account within a certain time range",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                },
                "time_range": {
                    "type": "string",
                    "description": "Time range for the query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_records": {
                    "type": "string",
                    "description": "Obtained login records"
                }
            }
        }
    },
    {
        "name": "navigate_to_borrowing_records",
        "description": "Navigate to the borrowing records page of the online library",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "navigation_status": {
                    "description": "Whether the navigation to the borrowing records page was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "view_login_records",
        "description": "View and retrieve login records of a specified account within a specified time range",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "time_range": {
                    "type": "string",
                    "description": "Time range to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_records": {
                    "description": "Obtained login record information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_recent_login_activity",
        "description": "Check and retrieve recent login activity records",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "activity_status": {
                    "description": "Login activity record status",
                    "type": "string"
                },
                "recent_activities": {
                    "description": "Details of recent login activities",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "inventory_check",
        "description": "Inventory Check Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "productName": {
                    "description": "Product Name",
                    "type": "string"
                },
                "storeId": {
                    "description": "Store ID",
                    "type": "integer"
                },
                "checkDate": {
                    "description": "Check Date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "inventory_status": {
                    "description": "Inventory Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "flight_info_query",
        "description": "Flight Information Query",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight Number"
                },
                "departureDate": {
                    "description": "Departure Date",
                    "type": "string"
                },
                "airlineName": {
                    "description": "Airline Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "arrival_time": {
                    "type": "string",
                    "description": "Arrival Time"
                },
                "terminal": {
                    "type": "string",
                    "description": "Terminal Information"
                },
                "boarding_time": {
                    "description": "Boarding Time",
                    "type": "string"
                },
                "boarding_gate": {
                    "description": "Boarding Gate Information",
                    "type": "string"
                },
                "flight_status": {
                    "description": "Flight Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_stock_portfolio_details",
        "description": "Get detailed information of the stock portfolio",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "stock_names": {
                    "description": "List of stock names",
                    "type": "array"
                },
                "stock_codes": {
                    "description": "List of stock codes",
                    "type": "array"
                },
                "stock_quantities": {
                    "description": "List of stock holding quantities",
                    "type": "array"
                },
                "stock_values": {
                    "description": "List of current stock values",
                    "type": "array"
                },
                "stock_costs": {
                    "description": "List of stock purchase costs",
                    "type": "array"
                },
                "stock_returns": {
                    "description": "List of total stock returns",
                    "type": "array"
                }
            }
        },
        "principle": "You must first call account_login to log in to the tool, and then you can use this tool to obtain portfolio information"
    },
    {
        "name": "market_trend_analysis",
        "description": "Market Price Trend Analysis Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "product": {
                    "type": "string",
                    "description": "Specified agricultural product"
                },
                "data": {
                    "type": "string",
                    "description": "Historical price data to be analyzed"
                },
                "analysis_type": {
                    "type": "string",
                    "description": "Type of analysis",
                    "enum": [
                        "Trend Analysis",
                        "Volatility Analysis",
                        "Forecast Analysis"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "analysis_status": {
                    "type": "string",
                    "description": "Market Trend Analysis Status"
                },
                "trend_report": {
                    "type": "object",
                    "description": "Generated Market Trend Report"
                }
            }
        }
    },
    {
        "name": "tutorial_generator",
        "description": "Generate tutorial materials, including step-by-step instructions and graphic or video tutorials",
        "arguments": {
            "type": "object",
            "properties": {
                "operation": {
                    "type": "string",
                    "description": "The name of the operation for which the tutorial is to be generated"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "tutorial_info": {
                    "type": "string",
                    "description": "Information about the generated tutorial materials"
                }
            }
        }
    },
    {
        "name": "select_latest_flight",
        "description": "Select the latest flight from the provided list of flights",
        "arguments": {
            "type": "object",
            "properties": {
                "flights_list": {
                    "type": "array",
                    "description": "The list of all flights for the day"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "The flight number of the latest flight"
                }
            }
        }
    },
    {
        "name": "detect_temperature_drop",
        "description": "Analyze continuous weather data to determine if a temperature drop has occurred",
        "arguments": {
            "type": "object",
            "properties": {
                "temperature_data": {
                    "type": "string",
                    "description": "Continuous weather data"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "temperature_drop_data": {
                    "type": "string",
                    "description": "Temperature drop analysis results"
                }
            }
        }
    },
    {
        "name": "summarize_trade_volume",
        "description": "Summarize the trading volume data for specified exchange and product",
        "arguments": {
            "type": "object",
            "properties": {
                "exchange": {
                    "type": "string",
                    "description": "Exchange name"
                },
                "product": {
                    "type": "string",
                    "description": "Product name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "trade_volume": {
                    "type": "array",
                    "description": "Trading volume data"
                }
            }
        }
    },
    {
        "name": "undo_transaction_deletion",
        "description": "Undo the previously incorrectly deleted transaction",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "description": "The transaction ID to undo deletion",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the undo operation was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "search_cleaning_providers",
        "description": "Search for home cleaning service providers in a specified city and district",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City name"
                },
                "district": {
                    "type": "string",
                    "description": "District name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "providers_list": {
                    "type": "string",
                    "description": "List of service providers"
                }
            }
        }
    },
    {
        "name": "activate_credit_card",
        "description": "Activate the user's credit card and set the withdrawal password",
        "arguments": {
            "type": "object",
            "properties": {
                "withdrawal_password": {
                    "description": "The withdrawal password set by the user",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "activation_status": {
                    "description": "Credit card activation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "review_report_content",
        "description": "Review the content of the report document",
        "arguments": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "string",
                    "description": "Report document"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "review_status": {
                    "type": "boolean",
                    "description": "Whether the content review was successful"
                }
            }
        }
    },
    {
        "name": "retrieve_latest_announcement",
        "description": "Retrieve and obtain the latest announcement information for a specified department on a specific date",
        "arguments": {
            "type": "object",
            "properties": {
                "department_name": {
                    "type": "string",
                    "description": "Department Name"
                },
                "date": {
                    "type": "string",
                    "description": "Specified Date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "announcement_info": {
                    "description": "Content of the latest announcement",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "verify_account_status",
        "description": "Verify the status of a specified account",
        "arguments": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "Account tail number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "accountStatus": {
                    "type": "string",
                    "description": "Account status"
                }
            }
        }
    },
    {
        "name": "download_photo",
        "description": "Download the photo from the specified URL",
        "arguments": {
            "type": "object",
            "properties": {
                "photo_url": {
                    "type": "string",
                    "description": "The URL of the photo",
                    "format": "uri"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "photo_path": {
                    "description": "The local path of the downloaded photo",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_vaccine_reminder",
        "description": "Set a schedule reminder for pet vaccination",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Reminder date",
                    "format": "date",
                    "example": "2024-01-15"
                },
                "content": {
                    "type": "string",
                    "description": "Reminder content"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Status of whether the reminder was successfully set"
                }
            }
        }
    },
    {
        "name": "generate_verification_code",
        "description": "Tool for generating verification codes",
        "arguments": {
            "type": "object",
            "properties": {
                "identity": {
                    "type": "string",
                    "description": "Card (account) number / mobile phone number / username"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_code": {
                    "type": "string",
                    "description": "Generated verification code"
                }
            }
        }
    },
    {
        "name": "get_flight_reviews",
        "description": "Get passenger reviews for a specific flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reviews": {
                    "type": "array",
                    "description": "List of passenger reviews"
                }
            }
        }
    },
    {
        "name": "get_current_time",
        "description": "Get the current time",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "current_time": {
                    "description": "Current time",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "train_arrival_time_comparison",
        "description": "Compare the estimated arrival times of trains and select the ones that are close to the originally planned train's arrival time",
        "arguments": {
            "type": "object",
            "properties": {
                "originalTrainID": {
                    "description": "Original planned train ID",
                    "type": "string"
                },
                "candidateTrains": {
                    "description": "List of candidate trains",
                    "type": "array"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "similar_arrival_trains": {
                    "description": "List of trains with arrival times close to the original planned train",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "appliance_common_issues_list",
        "description": "Get a list of common issues and their possible causes for a specific brand and model of appliance",
        "arguments": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "description": "Appliance brand"
                },
                "model": {
                    "type": "string",
                    "description": "Appliance model"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "issue_list": {
                    "type": "array",
                    "description": "List of common issues and their possible causes"
                }
            }
        }
    },
    {
        "name": "click_renew_option",
        "description": "Click the renew option to renew the book",
        "arguments": {
            "type": "object",
            "properties": {
                "book_id": {
                    "description": "The book ID that needs to be renewed",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "renew_click_status": {
                    "description": "Renew option click status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "monitor_refund_status",
        "description": "Monitor refund progress",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Refund progress status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_service_quote",
        "description": "Provide users with an estimated service quote for repairs",
        "arguments": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string",
                    "description": "User contact information"
                },
                "quote": {
                    "type": "string",
                    "description": "Estimated repair service quote"
                },
                "method": {
                    "type": "string",
                    "description": "Notification method, such as SMS or email"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Send status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "local_time_converter",
        "description": "Convert reference date and time to local time in a specified timezone",
        "arguments": {
            "type": "object",
            "properties": {
                "timezone": {
                    "type": "string",
                    "description": "Target timezone"
                },
                "reference_date": {
                    "type": "string",
                    "description": "Reference date"
                },
                "reference_time": {
                    "type": "string",
                    "description": "Reference time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "local_time": {
                    "type": "string",
                    "description": "Converted local time"
                }
            }
        }
    },
    {
        "name": "confirm_transaction_correction",
        "description": "Confirm whether the transaction amount has been corrected using the transaction ID",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "The transaction ID to be confirmed"
                },
                "corrected_amount": {
                    "type": "integer",
                    "description": "The corrected transaction amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of the amount correction confirmation"
                }
            }
        }
    },
    {
        "name": "analyze_login_attempts",
        "description": "Analyze if there are any anomalies in login attempt records",
        "arguments": {
            "type": "object",
            "properties": {
                "failed_logins": {
                    "type": "string",
                    "description": "Failed login records"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "analysis_results": {
                    "type": "string",
                    "description": "Analysis results of abnormal login attempts"
                }
            }
        }
    },
    {
        "name": "summarize_analysis_results",
        "description": "Summarize and describe the statistical characteristics of stock price fluctuations",
        "arguments": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "description": "Data on price fluctuations"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "summary": {
                    "type": "object",
                    "description": "Summary of statistical characteristics of price fluctuations"
                }
            }
        }
    },
    {
        "name": "check_statement_snapshot_availability",
        "description": "Check the availability of the statement snapshot for the specified bank card within a given time range",
        "arguments": {
            "type": "object",
            "properties": {
                "bank_card_number": {
                    "type": "string",
                    "description": "Bank card number"
                },
                "time_range": {
                    "type": "string",
                    "description": "Time range for the statement query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Status of the statement snapshot availability"
                }
            }
        }
    },
    {
        "name": "international_roaming_search",
        "description": "International Roaming Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "country_name": {
                    "description": "Name of the country to roam in",
                    "type": "string"
                },
                "service_provider": {
                    "description": "Name of the mobile network service provider",
                    "type": "string"
                },
                "roaming_duration": {
                    "description": "Duration of roaming",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "roaming_fees": {
                    "description": "Roaming fees",
                    "type": "number"
                },
                "data_package": {
                    "description": "Available data packages",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "package_name": {
                                "description": "Data package name",
                                "type": "string"
                            },
                            "price": {
                                "description": "Data package price",
                                "type": "number"
                            },
                            "data_limit": {
                                "description": "Data limit (GB)",
                                "type": "number"
                            }
                        },
                        "required": [
                            "package_name",
                            "price",
                            "data_limit"
                        ]
                    }
                },
                "roaming_status": {
                    "description": "Whether international roaming service is available",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "select_flight",
        "description": "Select the best flight from a given list of flight information",
        "arguments": {
            "type": "object",
            "properties": {
                "flights": {
                    "type": "array",
                    "description": "List of available flight information"
                },
                "preferred_time": {
                    "type": "string",
                    "description": "Preferred departure time"
                },
                "criteria": {
                    "type": "object",
                    "description": "Criteria for selecting flights, such as price, airline, and time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_flight": {
                    "type": "object",
                    "description": "The best flight information selected based on criteria"
                }
            }
        }
    },
    {
        "name": "search_notifications",
        "description": "Retrieve all message notifications within a specified date range",
        "arguments": {
            "type": "object",
            "properties": {
                "start_date": {
                    "type": "string",
                    "description": "Start date of the retrieval"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date of the retrieval"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notifications": {
                    "description": "All message notifications retrieved",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "assign_task",
        "description": "Assign tasks to specified team members and update task status",
        "arguments": {
            "type": "object",
            "properties": {
                "task": {
                    "type": "string",
                    "description": "The task to be assigned"
                },
                "assignee": {
                    "type": "string",
                    "description": "The executor of the task"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "assignment_status": {
                    "type": "boolean",
                    "description": "Whether the task has been successfully assigned"
                }
            }
        }
    },
    {
        "name": "confirm_schedule_receipt",
        "description": "Confirm whether the user has received the schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "The ID of the user"
                },
                "schedule_id": {
                    "type": "string",
                    "description": "The ID of the schedule"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "description": "Whether the user confirms receipt of the schedule",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "beach_resort_finder",
        "description": "Beach Resort Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination city or country",
                    "type": "string"
                },
                "minimum_rating": {
                    "description": "Minimum required rating",
                    "type": "number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "resort_name": {
                    "description": "Beach Resort Name",
                    "type": "string"
                },
                "rating": {
                    "description": "Resort Rating",
                    "type": "number"
                },
                "availability": {
                    "description": "Availability for adults and children",
                    "type": "object",
                    "properties": {
                        "adults": {
                            "description": "Adults",
                            "type": "integer"
                        },
                        "children": {
                            "description": "Children",
                            "type": "integer"
                        }
                    }
                }
            }
        }
    },
    {
        "name": "search_double_room",
        "description": "Search for double rooms that meet specific check-in and check-out dates",
        "arguments": {
            "type": "object",
            "properties": {
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "check_out": {
                    "type": "string",
                    "description": "Check-out date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel ID that meets the criteria"
                }
            }
        }
    },
    {
        "name": "sort_reviews_by_positivity",
        "description": "Sort reviews by level of positivity",
        "arguments": {
            "type": "object",
            "properties": {
                "reviews": {
                    "type": "array",
                    "description": "List of positive reviews to be sorted",
                    "items": {
                        "type": "object",
                        "properties": {
                            "sentiment_score": {
                                "type": "number",
                                "description": "Sentiment score of the review"
                            },
                            "text": {
                                "type": "string",
                                "description": "Text content of the review"
                            }
                        },
                        "required": [
                            "sentiment_score",
                            "text"
                        ]
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sorted_reviews": {
                    "type": "array",
                    "description": "List of reviews sorted by level of positivity",
                    "items": {
                        "type": "object",
                        "properties": {
                            "sentiment_score": {
                                "type": "number"
                            },
                            "text": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "notify_user_on_change",
        "description": "Notify the user when the flight status changes",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Expected departure date and time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Whether the notification was successfully sent"
                }
            }
        }
    },
    {
        "name": "view_profile",
        "description": "View Weibo profile",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "View status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "luggage_check_in",
        "description": "Luggage Check-in Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "luggage_weight": {
                    "description": "Luggage Weight",
                    "type": "integer"
                },
                "check_in_time": {
                    "description": "Check-in Time",
                    "type": "string"
                },
                "flight_number": {
                    "description": "Flight Number",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "check_in_status": {
                    "description": "Check-in Status",
                    "type": "string"
                },
                "luggage_tag_number": {
                    "description": "Luggage Tag Number",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "view_annual_transactions",
        "description": "View all transaction records of a specified account in a certain year",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "year": {
                    "type": "string",
                    "description": "Year of inquiry"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the inquiry"
                },
                "transactions": {
                    "type": "array",
                    "description": "List of annual transaction records"
                }
            }
        }
    },
    {
        "name": "create_vacation_schedule",
        "description": "Create vacation schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_name": {
                    "type": "string",
                    "description": "Schedule name"
                },
                "start_date": {
                    "type": "string",
                    "description": "Start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_status": {
                    "type": "string",
                    "description": "Schedule creation status"
                }
            }
        }
    },
    {
        "name": "rebalancing_strategy",
        "description": "A tool for designing asset rebalancing strategies",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "strategy": {
                    "type": "string",
                    "description": "Details of the generated rebalancing strategy"
                },
                "success": {
                    "type": "boolean",
                    "description": "Whether the strategy was successfully generated"
                }
            }
        }
    },
    {
        "name": "online_bank_login",
        "description": "Used for logging into online banking account",
        "arguments": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "type": "string",
                    "description": "User's mobile number"
                },
                "verificationCode": {
                    "type": "string",
                    "description": "Verification code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "type": "string",
                    "description": "Login status"
                }
            }
        }
    },
    {
        "name": "brand_service_filter",
        "description": "Filter out service companies that provide maintenance for specific appliance brands",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceBrand": {
                    "type": "string",
                    "description": "Appliance brand"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filter_status": {
                    "type": "string",
                    "description": "Filtering result"
                }
            }
        }
    },
    {
        "name": "estimated_delivery_time",
        "description": "Query the estimated delivery time based on the tracking number and delivery address",
        "arguments": {
            "type": "object",
            "properties": {
                "parcelNumber": {
                    "type": "string",
                    "description": "Tracking number"
                },
                "deliveryAddress": {
                    "type": "string",
                    "description": "Delivery address"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "estimatedTime": {
                    "description": "Estimated delivery time",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "choose_best_hotel",
        "description": "Select the best hotel from the comparison results",
        "arguments": {
            "type": "object",
            "properties": {
                "hotels": {
                    "type": "array",
                    "description": "List of hotels to be selected"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "ID of the best hotel"
                }
            }
        }
    },
    {
        "name": "start_timer",
        "description": "Start a timer and wait for a specified duration",
        "arguments": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "string",
                    "description": "The length of time to wait"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the timer has completed",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "send_guide",
        "description": "Send content to the user-specified receiving method",
        "arguments": {
            "type": "object",
            "properties": {
                "receive_method": {
                    "type": "string",
                    "description": "The user's receiving method, such as email, SMS, etc."
                },
                "guide_content": {
                    "type": "string",
                    "description": "The guide content to be sent"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "The result of the guide being sent"
                }
            }
        }
    },
    {
        "name": "extract_sales_data",
        "description": "Extract the latest sales data from a specified data source",
        "arguments": {
            "type": "object",
            "properties": {
                "source": {
                    "type": "string",
                    "description": "Data source, for example, sales database"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the data extraction operation was successful",
                    "type": "boolean"
                },
                "data": {
                    "description": "The extracted sales data",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "sort_flights_by_punctuality_and_price",
        "description": "Sort flights by punctuality and economy class fare",
        "arguments": {
            "type": "object",
            "properties": {
                "flights_info": {
                    "type": "string",
                    "description": "Acquired flight information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sorted_flights": {
                    "type": "string",
                    "description": "Sorted list of flights"
                }
            }
        }
    },
    {
        "name": "send_price_table_to_user",
        "description": "Send the price information table to the user",
        "arguments": {
            "type": "object",
            "properties": {
                "table": {
                    "description": "The table object to send",
                    "type": "object"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the sending was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "get_name_from_identity_number",
        "description": "Get name from identity card number",
        "arguments": {
            "type": "object",
            "properties": {
                "identityNumber": {
                    "type": "string",
                    "description": "Identity card number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "market_data_collection",
        "description": "Collect market data for specific agricultural products",
        "arguments": {
            "type": "object",
            "properties": {
                "data_type": {
                    "type": "string",
                    "description": "The type of data to be collected"
                },
                "product": {
                    "type": "string",
                    "description": "The specified agricultural product"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "collection_status": {
                    "type": "string",
                    "description": "Data collection status"
                },
                "market_data": {
                    "type": "object",
                    "description": "The market data collected"
                }
            }
        }
    },
    {
        "name": "recommend_staff",
        "description": "Recommend necessary staff such as security, technical support, and guides based on the type of event and the estimated number of attendees",
        "arguments": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string",
                    "description": "Type of event"
                },
                "guestNumber": {
                    "type": "integer",
                    "description": "Estimated number of attendees"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "staff_recommendations": {
                    "type": "array",
                    "description": "List of recommended staff",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "Type of staff"
                            },
                            "number": {
                                "type": "integer",
                                "description": "Recommended quantity"
                            },
                            "company": {
                                "type": "string",
                                "description": "Recommended service company"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "search_early_flight",
        "description": "Search for the earliest flight on a specific date, from a departure city to a destination city",
        "arguments": {
            "type": "object",
            "properties": {
                "departureCity": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrivalCity": {
                    "type": "string",
                    "description": "Destination city"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number of the earliest flight"
                }
            }
        }
    },
    {
        "name": "query_flight_change_policy",
        "description": "Inquire about the change policy and fees for a specific flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "airline": {
                    "type": "string",
                    "description": "Airline name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_policy": {
                    "type": "string",
                    "description": "Change policy"
                },
                "change_fee": {
                    "type": "string",
                    "description": "Change fee"
                }
            }
        }
    },
    {
        "name": "query_book_prices",
        "description": "Query the prices of specified books on different e-commerce platforms",
        "arguments": {
            "type": "object",
            "properties": {
                "item_name": {
                    "type": "string",
                    "description": "Book name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "amazon_price": {
                    "type": "number",
                    "description": "Amazon platform price"
                },
                "alibaba_price": {
                    "type": "number",
                    "description": "Alibaba platform price"
                },
                "jd_price": {
                    "type": "number",
                    "description": "JD platform price"
                }
            }
        }
    },
    {
        "name": "compare_hotels",
        "description": "Compare hotel prices, locations, amenities, and user reviews to select the most suitable hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_list": {
                    "type": "array",
                    "description": "List of hotels to compare"
                },
                "criteria": {
                    "type": "array",
                    "description": "Comparison criteria",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "best_hotel_id": {
                    "type": "string",
                    "description": "ID of the best hotel"
                },
                "best_hotel": {
                    "type": "object",
                    "description": "The hotel that best meets the requirements"
                }
            }
        }
    },
    {
        "name": "send_price_info",
        "description": "Send price information to users via email or instant messaging tools",
        "arguments": {
            "type": "object",
            "properties": {
                "email_or_message": {
                    "description": "The user's email or instant messaging tool",
                    "type": "string"
                },
                "price_info": {
                    "description": "Summarized price information",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sendStatus": {
                    "description": "Whether the send operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "get_technician_info",
        "description": "Get the name and contact information of the maintenance personnel",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "staff_name": {
                    "type": "string",
                    "description": "Maintenance staff name"
                },
                "staff_contact": {
                    "type": "string",
                    "description": "Maintenance staff contact information"
                }
            }
        }
    },
    {
        "name": "search_common_issues",
        "description": "Search for common problems and their solutions for specific appliance models",
        "arguments": {
            "type": "object",
            "properties": {
                "appliance_model": {
                    "type": "string",
                    "description": "Appliance model"
                },
                "appliance_type": {
                    "type": "string",
                    "description": "Appliance type"
                },
                "issue": {
                    "type": "string",
                    "description": "Issue to search for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "issues": {
                    "type": "array",
                    "description": "List of common issues"
                },
                "solutions": {
                    "type": "array",
                    "description": "List of solutions"
                }
            }
        }
    },
    {
        "name": "display_agenda_details",
        "description": "Display the detailed information of a specified agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The agenda ID for which detailed information is required"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the retrieval of agenda details was successful",
                    "type": "string"
                },
                "details": {
                    "description": "The detailed information of the agenda",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_cancellation_message",
        "description": "Send a message to the service provider to cancel the service",
        "arguments": {
            "type": "object",
            "properties": {
                "contact_method": {
                    "type": "string",
                    "description": "The communication method chosen by the user"
                },
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                },
                "cancellationReason": {
                    "type": "string",
                    "description": "Reason for cancellation"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "message_status": {
                    "type": "string",
                    "description": "Message sending status"
                }
            }
        }
    },
    {
        "name": "write_summary",
        "description": "Write content summary",
        "arguments": {
            "type": "object",
            "properties": {
                "key_information": {
                    "type": "string",
                    "description": "Key information for writing the summary"
                },
                "document": {
                    "type": "object",
                    "description": "Document object"
                },
                "content": {
                    "type": "string",
                    "description": "Content to be summarized"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "summary": {
                    "type": "string",
                    "description": "The written content summary"
                }
            }
        }
    },
    {
        "name": "check_summary",
        "description": "Check if the specific part of the file content matches the expectation",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                },
                "expected_content": {
                    "type": "string",
                    "description": "Expected content"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "check_status": {
                    "type": "string",
                    "description": "Whether the content check is successful"
                },
                "is_match": {
                    "type": "boolean",
                    "description": "Whether the actual content matches the expected content"
                }
            }
        }
    },
    {
        "name": "get_insurance_purchase_process",
        "description": "Get the purchase process for a specified insurance product",
        "arguments": {
            "type": "object",
            "properties": {
                "productName": {
                    "type": "string",
                    "description": "Product Name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchaseProcess": {
                    "type": "string",
                    "description": "Product purchase process steps"
                }
            }
        }
    },
    {
        "name": "activate_progressive_ring",
        "description": "Activate progressive ring mode",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Alarm time"
                },
                "frequency": {
                    "type": "string",
                    "description": "Alarm frequency, e.g., 'weekends' means every Saturday and Sunday"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "progressive_ring_status": {
                    "type": "string",
                    "description": "Progressive ring mode activation status"
                }
            }
        }
    },
    {
        "name": "generate_weekly_report",
        "description": "Generate a weekly schedule report for a specified date range, including all meetings and events, as well as specific recurring meetings",
        "arguments": {
            "type": "object",
            "properties": {
                "date_range": {
                    "type": "string",
                    "description": "The date range covered by the report"
                },
                "include_event_id": {
                    "type": "string",
                    "description": "The event ID of the recurring meeting to be included in the report"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report_status": {
                    "type": "string",
                    "description": "The status of whether the report was successfully generated"
                },
                "report_content": {
                    "type": "string",
                    "description": "The content of the generated weekly schedule report"
                }
            }
        }
    },
    {
        "name": "search_hotels_with_good_reviews",
        "description": "Search for hotels with good customer reviews",
        "arguments": {
            "type": "object",
            "properties": {
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "check_in": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "stay_days": {
                    "type": "string",
                    "description": "Number of stay days"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel ID that meets the criteria"
                }
            }
        }
    },
    {
        "name": "retrieve_personal_info",
        "description": "Retrieve and display personal information of the account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "personal_info": {
                    "description": "Status of personal information display",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "search_economic_impact_of_population_growth",
        "description": "Retrieve studies and data related to the economic impact of population growth",
        "arguments": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string",
                    "description": "Country name"
                },
                "year": {
                    "type": "string",
                    "description": "Year"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "research_data": {
                    "type": "string",
                    "description": "Research data on the economic impact of population growth"
                }
            }
        }
    },
    {
        "name": "confirm_order_via_email_or_sms",
        "description": "Confirm order information with customers via email or SMS",
        "arguments": {
            "type": "object",
            "properties": {
                "order_details": {
                    "type": "string",
                    "description": "Order details"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Confirmation information sending status"
                }
            }
        }
    },
    {
        "name": "get_seat_and_price_info",
        "description": "Get seat class and fare information for train services",
        "arguments": {
            "type": "object",
            "properties": {
                "train_id": {
                    "type": "string",
                    "description": "Train service number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "seat_info": {
                    "type": "string",
                    "description": "Seat class information"
                },
                "price_info": {
                    "type": "string",
                    "description": "Fare information"
                }
            }
        }
    },
    {
        "name": "retrieve_meeting_documents",
        "description": "Retrieve presentations and documents related to the meeting",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_name": {
                    "type": "string",
                    "description": "Meeting name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "documents": {
                    "type": "string",
                    "description": "Documents related to the meeting"
                }
            }
        }
    },
    {
        "name": "select_tea_service",
        "description": "Select an afternoon tea set from the cafe's menu",
        "arguments": {
            "type": "object",
            "properties": {
                "cafe_id": {
                    "type": "string",
                    "description": "Cafe ID"
                },
                "menu_type": {
                    "type": "string",
                    "description": "Menu type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selection_status": {
                    "description": "Selection status of the set",
                    "type": "string"
                },
                "service_id": {
                    "description": "ID of the selected afternoon tea service",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_invoice_status",
        "description": "Check the issuance status of the invoice for the new transaction",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "invoice_status": {
                    "type": "string",
                    "description": "The issuance status of the invoice"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the query"
                }
            }
        }
    },
    {
        "name": "luxury_car_booking",
        "description": "Book luxury sedan service, ensuring pickup time is coordinated with flight arrival time",
        "arguments": {
            "type": "object",
            "properties": {
                "pickup_time": {
                    "type": "string",
                    "description": "Pickup time"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "confirmation_details": {
                    "type": "string",
                    "description": "Booking confirmation details"
                }
            }
        }
    },
    {
        "name": "select_morning_train_with_lowest_price",
        "description": "Select the second-class train ticket with the lowest price among the trains with free Wi-Fi service that depart in the morning",
        "arguments": {
            "type": "object",
            "properties": {
                "trains_with_wifi": {
                    "type": "string",
                    "description": "List of train services with free Wi-Fi"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_train": {
                    "type": "string",
                    "description": "The selected train service"
                }
            }
        }
    },
    {
        "name": "open_new_messages",
        "description": "Open and display the content of new messages",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "open_status": {
                    "description": "Message open status",
                    "type": "string"
                },
                "messages_content": {
                    "description": "Content of new messages",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "contact_customer_for_availability",
        "description": "Contact customer to obtain their available time slots",
        "arguments": {
            "type": "object",
            "properties": {
                "contactNumber": {
                    "type": "string",
                    "description": "Customer's contact phone number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "string",
                    "description": "Available time slots provided by the customer"
                }
            }
        }
    },
    {
        "name": "check_publication_acceptance",
        "description": "Check the publication status of a specified paper and confirm whether it is accepted by academic journals or conferences",
        "arguments": {
            "type": "object",
            "properties": {
                "publicationTitle": {
                    "type": "string",
                    "description": "The title of the paper to be checked"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "accepted": {
                    "type": "boolean",
                    "description": "Whether the paper is accepted"
                },
                "publicationStatus": {
                    "type": "string",
                    "description": "The publication status of the paper"
                }
            }
        }
    },
    {
        "name": "provider_availability_check",
        "description": "Check the availability of the service provider at a specific time",
        "arguments": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": "Service provider"
                },
                "time": {
                    "type": "string",
                    "description": "Appointment time"
                },
                "providerID": {
                    "type": "string",
                    "description": "Service provider ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "description": "Availability of the service provider",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "route_query",
        "description": "Query the transportation route from the starting point to the destination",
        "arguments": {
            "type": "object",
            "properties": {
                "startPoint": {
                    "type": "string",
                    "description": "Starting station"
                },
                "endPoint": {
                    "type": "string",
                    "description": "Destination station"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "route": {
                    "type": "string",
                    "description": "Details of the transportation route"
                }
            }
        }
    },
    {
        "name": "check_connected_devices",
        "description": "Check all currently connected devices",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "connected_devices": {
                    "description": "List of connected devices",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "record_price_info",
        "description": "Record the price information of a specified device into a file",
        "arguments": {
            "type": "object",
            "properties": {
                "productName": {
                    "description": "Product Name",
                    "type": "string"
                },
                "price": {
                    "description": "Product Price",
                    "type": "number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recordStatus": {
                    "description": "Whether the record operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "advanced_disaster_warning",
        "description": "Provides disaster warnings based on geographic location, anticipated environmental changes, and individual behavior",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "Current geographic location, including longitude and latitude",
                    "type": "object",
                    "properties": {
                        "longitude": {
                            "description": "Longitude",
                            "type": "number",
                            "minimum": -180,
                            "maximum": 180
                        },
                        "latitude": {
                            "description": "Latitude",
                            "type": "number",
                            "minimum": -90,
                            "maximum": 90
                        }
                    }
                },
                "environment_change": {
                    "description": "Anticipated environmental changes",
                    "type": "string",
                    "enum": [
                        "Flood",
                        "Earthquake",
                        "Landslide",
                        "Volcanic Eruption",
                        "Tornado"
                    ]
                },
                "individual_behavior": {
                    "description": "Possible individual behaviors, including indoor and outdoor activities",
                    "type": "string",
                    "enum": [
                        "Indoor",
                        "Outdoor"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "warning_message": {
                    "description": "Warning message",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "sort_hotels_by_rating",
        "description": "Sort the list of hotels by user ratings from high to low",
        "arguments": {
            "type": "object",
            "properties": {
                "hotels_list": {
                    "type": "array",
                    "description": "The list of hotels to be sorted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sorted_hotels_list": {
                    "type": "array",
                    "description": "The list of hotels sorted by user ratings"
                }
            }
        }
    },
    {
        "name": "access_security_settings",
        "description": "Access the security settings page of a specified account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "security_settings": {
                    "description": "Details of the account's security settings",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "monitor_trade_execution",
        "description": "Monitor stock trade execution",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "type": "string",
                    "description": "Stock code"
                },
                "deadline": {
                    "type": "string",
                    "description": "Trade deadline"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "trade_execution_status": {
                    "type": "string",
                    "description": "Trade execution status"
                }
            }
        }
    },
    {
        "name": "get_next_week_date_range",
        "description": "Get the start and end dates of the upcoming week",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "start_date": {
                    "description": "Start date of the upcoming week",
                    "type": "string"
                },
                "end_date": {
                    "description": "End date of the upcoming week",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "update_appointment_status",
        "description": "Update the user's appointment status record in the appointment management system",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "The unique identifier of the user"
                },
                "requestID": {
                    "type": "string",
                    "description": "The maintenance request number"
                },
                "new_status": {
                    "type": "string",
                    "description": "The new appointment status"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "type": "string",
                    "description": "Whether the update operation was successful"
                }
            }
        }
    },
    {
        "name": "collect_daily_prices",
        "description": "Collect daily prices of a specific product from a designated exchange over a certain period of time",
        "arguments": {
            "type": "object",
            "properties": {
                "exchange": {
                    "type": "string",
                    "description": "Name of the exchange"
                },
                "product": {
                    "type": "string",
                    "description": "Name of the product"
                },
                "duration": {
                    "type": "string",
                    "description": "Time span"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "daily_prices": {
                    "type": "array",
                    "description": "List of daily prices"
                }
            }
        }
    },
    {
        "name": "set_sms_notification",
        "description": "Set SMS notification preferences for specific transaction types",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                },
                "transaction_type": {
                    "type": "string",
                    "description": "Transaction Type"
                },
                "notification_preference": {
                    "type": "string",
                    "description": "Notification Preference (Receive/Do Not Receive)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "SMS Notification Setting Status"
                }
            }
        }
    },
    {
        "name": "set_do_not_disturb_mode",
        "description": "Set the start time and repeat frequency of Do Not Disturb mode",
        "arguments": {
            "type": "object",
            "properties": {
                "start_time": {
                    "type": "string",
                    "description": "Start time of Do Not Disturb mode"
                },
                "frequency": {
                    "type": "string",
                    "description": "Repeat frequency of Do Not Disturb mode, for example: weekends"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "do_not_disturb_info": {
                    "type": "string",
                    "description": "Result of the Do Not Disturb mode setting"
                }
            }
        }
    },
    {
        "name": "personal_information_query",
        "description": "Query and return all personal information of the account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "personal_info": {
                    "description": "Personal information of the account",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "update_scheduled_task_trigger_date",
        "description": "Update the trigger date of the automated task",
        "arguments": {
            "type": "object",
            "properties": {
                "taskId": {
                    "type": "string",
                    "description": "Automated task ID"
                },
                "newTriggerDate": {
                    "type": "string",
                    "description": "New trigger date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "type": "string",
                    "description": "Task update status"
                }
            }
        }
    },
    {
        "name": "list_temp_files",
        "description": "List all temporary files in the specified path",
        "arguments": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string",
                    "description": "File search path"
                },
                "file_type": {
                    "type": "string",
                    "description": "Type of temporary files"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "file_list": {
                    "type": "array",
                    "description": "List of found temporary files",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "optimize_itinerary",
        "description": "Optimize travel itinerary, including flights, hotels, attractions, and transportation",
        "arguments": {
            "type": "object",
            "properties": {
                "itinerary": {
                    "type": "array",
                    "description": "Preliminary itinerary generated by the travel planning tool"
                },
                "preferences": {
                    "type": "array",
                    "description": "User's travel preferences"
                },
                "budget": {
                    "type": "integer",
                    "description": "User's travel budget"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "optimized_itinerary": {
                    "type": "array",
                    "description": "Optimized detailed travel itinerary"
                }
            }
        }
    },
    {
        "name": "upload_to_shared_location",
        "description": "Upload files to a specified shared location or platform",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path to be uploaded"
                },
                "shared_location": {
                    "type": "string",
                    "description": "Information about the shared location or platform"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the upload operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "book_guide_service",
        "description": "Booking service for a specific guide",
        "arguments": {
            "type": "object",
            "properties": {
                "guide_name": {
                    "type": "string",
                    "description": "Name of the guide"
                },
                "date": {
                    "type": "string",
                    "description": "Date of the booking service",
                    "format": "date-time"
                },
                "location": {
                    "type": "string",
                    "description": "Location of the service"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_confirmation": {
                    "type": "string",
                    "description": "Booking confirmation information"
                }
            }
        }
    },
    {
        "name": "get_risk_assessment_report",
        "description": "Get the risk assessment report for the specified product",
        "arguments": {
            "type": "object",
            "properties": {
                "product": {
                    "type": "string",
                    "description": "Product name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report": {
                    "type": "string",
                    "description": "Risk assessment report"
                }
            }
        }
    },
    {
        "name": "cooking_class_search",
        "description": "Search for cooking classes related to specific types of food",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "Event date and time"
                },
                "location": {
                    "type": "string",
                    "description": "Event location"
                },
                "food_type": {
                    "type": "string",
                    "description": "Type of food"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "classes": {
                    "type": "array",
                    "description": "List of related cooking classes"
                }
            }
        }
    },
    {
        "name": "check_agenda_conflicts",
        "description": "Check if there are any conflicts in the schedule for the specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date for which the schedule needs to be checked"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "conflict_status": {
                    "type": "string",
                    "description": "Schedule conflict status"
                }
            }
        }
    },
    {
        "name": "copy_file",
        "description": "Copy the file from the source path to the target path",
        "arguments": {
            "type": "object",
            "properties": {
                "source_file_path": {
                    "type": "string",
                    "description": "Source file path"
                },
                "destination_folder_path": {
                    "type": "string",
                    "description": "Destination folder path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the file copy operation was successful"
                }
            }
        }
    },
    {
        "name": "query_ticket_refund_policy",
        "description": "Query the refund policy and fees for a specific train ticket",
        "arguments": {
            "type": "object",
            "properties": {
                "identityNumber": {
                    "type": "string",
                    "description": "The identity card number of the person who purchased the ticket"
                },
                "ticketID": {
                    "type": "string",
                    "description": "Train ticket number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "refund_policy": {
                    "type": "string",
                    "description": "Details of the refund policy"
                },
                "refund_fee": {
                    "type": "string",
                    "description": "Refund fee"
                }
            }
        }
    },
    {
        "name": "check_common_issues_and_repair_records",
        "description": "Check common issues and repair records for specific TV models",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceModel": {
                    "type": "string",
                    "description": "Appliance model to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "common_issues": {
                    "type": "array",
                    "description": "List of common issues"
                },
                "repair_records": {
                    "type": "array",
                    "description": "List of repair records"
                }
            }
        }
    },
    {
        "name": "bank_bond_purchase_guide",
        "description": "Bank Treasury Bond Purchase Guide Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "bank_name": {
                    "type": "string",
                    "description": "Bank Name"
                },
                "bond_type": {
                    "type": "string",
                    "description": "Treasury Bond Type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchase_guide_info": {
                    "description": "Purchase Guide Information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "submit_verification_code",
        "description": "Submit the secondary verification code to complete the verification",
        "arguments": {
            "type": "object",
            "properties": {
                "verification_code": {
                    "type": "string",
                    "description": "Secondary verification code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "description": "Whether the secondary verification is successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "ssh_disconnect",
        "description": "Safely exit the SSH client and disconnect.",
        "arguments": {
            "type": "object",
            "properties": {
                "ssh_session": {
                    "type": "string",
                    "description": "SSH connection session"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the disconnection operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "generate_complex_password",
        "description": "Generate a password that meets complexity requirements",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "new_password": {
                    "description": "The newly generated password",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "confirm_welcome_sign",
        "description": "Confirm the driver holds the welcome sign and is aware of the greeting location",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Reservation confirmation number"
                },
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "welcome_sign_status": {
                    "type": "string",
                    "description": "Welcome sign confirmation status"
                }
            }
        }
    },
    {
        "name": "complete_payment_for_change",
        "description": "Complete the payment process for flight change",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "name": {
                    "type": "string",
                    "description": "Passenger name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_status": {
                    "type": "string",
                    "description": "Payment status"
                }
            }
        }
    },
    {
        "name": "sum_amounts",
        "description": "Calculate the total sum of two amounts",
        "arguments": {
            "type": "object",
            "properties": {
                "amount1": {
                    "type": "number",
                    "description": "The first amount"
                },
                "amount2": {
                    "type": "number",
                    "description": "The second amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "totalAmount": {
                    "type": "number",
                    "description": "The total sum of the two amounts"
                }
            }
        }
    },
    {
        "name": "mark_activities_on_timeline",
        "description": "Mark the timing of various activities on the timeline",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_details": {
                    "type": "string",
                    "description": "Details of the afternoon schedule"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "marked_timeline": {
                    "type": "string",
                    "description": "Timeline graph after marking activities"
                }
            }
        }
    },
    {
        "name": "arrange_projector_repair_or_replacement",
        "description": "Arrange for repair or replacement if the projector is unavailable",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_room": {
                    "type": "string",
                    "description": "Meeting room number"
                },
                "date": {
                    "type": "string",
                    "description": "Date when repair or replacement is needed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "repair_status": {
                    "type": "string",
                    "description": "Status of the repair or replacement"
                }
            }
        }
    },
    {
        "name": "check_self_service_ticketing",
        "description": "Check if tickets can be collected from the station's self-service machine using an ID card number",
        "arguments": {
            "type": "object",
            "properties": {
                "identityNumber": {
                    "type": "string",
                    "description": "The ticket purchaser's ID card number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "self_service_status": {
                    "type": "string",
                    "description": "The status of whether self-service ticket collection is available"
                }
            }
        }
    },
    {
        "name": "analyze_speed_data",
        "description": "Analyze vehicle speed data, identify abnormal speed points and calculate average speed",
        "arguments": {
            "type": "object",
            "properties": {
                "track_data": {
                    "type": "array",
                    "description": "Vehicle tracking data"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "speed_analysis": {
                    "type": "object",
                    "description": "Speed data analysis results"
                }
            }
        }
    },
    {
        "name": "compare_device_ids",
        "description": "Compare the last login device ID with the current device identifier to ensure security",
        "arguments": {
            "type": "object",
            "properties": {
                "last_device_id": {
                    "type": "string",
                    "description": "The device ID used during the last login"
                },
                "current_device_id": {
                    "type": "string",
                    "description": "The identifier of the current device"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "match_status": {
                    "type": "boolean",
                    "description": "The status of whether the two device IDs match"
                }
            }
        }
    },
    {
        "name": "industry_budget_lookup",
        "description": "Query the average project budget data for a specific industry",
        "arguments": {
            "type": "object",
            "properties": {
                "industry": {
                    "type": "string",
                    "description": "The name of the industry to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "average_budget": {
                    "description": "The average project budget of the industry",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "configure_email_service",
        "description": "Configure the email service to send scheduled reminders",
        "arguments": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string",
                    "description": "The user's email address"
                },
                "trigger_time": {
                    "type": "string",
                    "description": "The trigger time for the email reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "configuration_status": {
                    "type": "string",
                    "description": "The configuration status of the email service"
                }
            }
        }
    },
    {
        "name": "create_shopping_list",
        "description": "Create a shopping list based on the weekly healthy diet menu",
        "arguments": {
            "type": "object",
            "properties": {
                "weekly_menu": {
                    "type": "string",
                    "description": "Weekly healthy diet menu"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "shopping_list": {
                    "description": "Generated shopping list",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "collect_historical_prices",
        "description": "Collect historical price data for specified products",
        "arguments": {
            "type": "object",
            "properties": {
                "product_list": {
                    "type": "array",
                    "description": "List of products to collect historical price data for"
                },
                "exchange": {
                    "type": "string",
                    "description": "Name of the exchange"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "historical_price_data": {
                    "type": "array",
                    "description": "Historical price data of the products"
                }
            }
        }
    },
    {
        "name": "photo_link_collector",
        "description": "Collect photo links from provided URL",
        "arguments": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The URL where photos are stored"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "photo_links": {
                    "type": "array",
                    "description": "List of collected photo links",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "save_as_pdf",
        "description": "Save the document in PDF format",
        "arguments": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "object",
                    "description": "Document object"
                },
                "content": {
                    "type": "string",
                    "description": "Text content to be saved"
                },
                "title": {
                    "type": "string",
                    "description": "Title of the PDF file"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "pdf_document": {
                    "type": "object",
                    "description": "Document saved in PDF format"
                },
                "status": {
                    "type": "string",
                    "description": "Whether the save operation was successful"
                },
                "file_path": {
                    "type": "string",
                    "description": "Path of the PDF file"
                }
            }
        }
    },
    {
        "name": "archive_records",
        "description": "Create archive files and save specified schedule records",
        "arguments": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "Schedule records to be archived"
                },
                "file_path": {
                    "type": "string",
                    "description": "The save path for the archive file"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the archiving operation was successful"
                }
            }
        }
    },
    {
        "name": "online_payment",
        "description": "Online Payment Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "product": {
                    "type": "string",
                    "description": "Name of the product to be paid for"
                },
                "price": {
                    "type": "integer",
                    "description": "Product price"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_status": {
                    "type": "string",
                    "description": "Status of whether the payment was successful"
                }
            }
        }
    },
    {
        "name": "send_technician_info",
        "description": "Send technician contact information to the user",
        "arguments": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string",
                    "description": "User contact method"
                },
                "technician_contact": {
                    "type": "string",
                    "description": "Technician's contact information"
                },
                "method": {
                    "type": "string",
                    "description": "Notification method, such as SMS or email"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Send status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "news_analysis",
        "description": "In-depth analysis of news content, extracting core highlights",
        "arguments": {
            "type": "object",
            "properties": {
                "news_content": {
                    "type": "string",
                    "description": "The news content to be analyzed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "highlights": {
                    "type": "array",
                    "description": "The core highlights of the news content"
                }
            }
        }
    },
    {
        "name": "manage_ticketing",
        "description": "Ticketing Management",
        "arguments": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string",
                    "description": "Event Type"
                },
                "location": {
                    "type": "string",
                    "description": "Event Location"
                },
                "date": {
                    "type": "string",
                    "description": "Event Date",
                    "format": "date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ticketing_status": {
                    "type": "string",
                    "description": "Ticketing Management Status"
                }
            }
        }
    },
    {
        "name": "check_merchant_complaints",
        "description": "Check if the specified merchant ID has a record of complaints",
        "arguments": {
            "type": "object",
            "properties": {
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "complaints": {
                    "description": "The merchant's record of complaints",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "get_room_types_prices",
        "description": "Get the price information of different room types in a hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotelName": {
                    "type": "string",
                    "description": "Hotel name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "prices": {
                    "type": "array",
                    "description": "List of different room types and their prices",
                    "items": {
                        "type": "object",
                        "properties": {
                            "room_type": {
                                "type": "string",
                                "description": "Room type"
                            },
                            "price": {
                                "type": "number",
                                "description": "Price"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "get_user_schedule",
        "description": "Retrieve the schedule list of a specified user on a specific date",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "The ID of the user"
                },
                "date": {
                    "type": "string",
                    "description": "The date being queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the retrieval of the schedule was successful",
                    "type": "string"
                },
                "schedules": {
                    "description": "The list of schedules for the user on that day",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "street_name_lookup",
        "description": "Retrieve the main street name based on postal code",
        "arguments": {
            "type": "object",
            "properties": {
                "postal_code": {
                    "type": "string",
                    "description": "Postal code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "street_name": {
                    "type": "string",
                    "description": "Street name"
                }
            }
        }
    },
    {
        "name": "attempt_database_connection",
        "description": "Attempt to connect to the database and verify the validity of the connection",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "connection_status": {
                    "description": "Whether the database connection was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "check_free_admission_policy",
        "description": "Check if the scenic spot implements a free admission policy on the specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "scenicSpotName": {
                    "type": "string",
                    "description": "Scenic Spot Name"
                },
                "visitDate": {
                    "type": "string",
                    "description": "Visit Date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "free_admission": {
                    "type": "boolean",
                    "description": "Whether it is free to enter"
                }
            }
        }
    },
    {
        "name": "notify_technician_to_update_status",
        "description": "Notify the technician to update the maintenance status after the service is completed",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "insert_overall_trend_analysis",
        "description": "Insert overall trend analysis into the report document",
        "arguments": {
            "type": "object",
            "properties": {
                "document": {
                    "description": "Report document",
                    "type": "string"
                },
                "trend_data": {
                    "description": "Overall trend data",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "description": "Whether the analysis was successfully inserted"
                }
            }
        }
    },
    {
        "name": "check_power_socket_availability",
        "description": "Check if the specified train provides power socket service",
        "arguments": {
            "type": "object",
            "properties": {
                "trainID": {
                    "type": "string",
                    "description": "The train number to check"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "The status of power socket availability"
                }
            }
        }
    },
    {
        "name": "analyze_parking_data",
        "description": "Analyze vehicle parking data, identify frequent parking spots and calculate the duration of each parking",
        "arguments": {
            "type": "object",
            "properties": {
                "track_data": {
                    "type": "array",
                    "description": "Vehicle tracking data"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "parking_analysis": {
                    "type": "object",
                    "description": "Parking data analysis results"
                }
            }
        }
    },
    {
        "name": "bank_registration_check",
        "description": "Electronic Banking Registration Status Check Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "personalInfo": {
                    "description": "Personal Basic Information",
                    "type": "object",
                    "properties": {
                        "fullName": {
                            "description": "User Full Name",
                            "type": "string"
                        },
                        "idNumber": {
                            "description": "Identity Card Number",
                            "type": "string"
                        },
                        "phoneNumber": {
                            "description": "Mobile Phone Number",
                            "type": "string"
                        },
                        "email": {
                            "description": "Email Address",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "registered": {
                    "description": "Whether Registered",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "query_inflight_meal_options",
        "description": "Query inflight meal options",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "meal_options": {
                    "type": "array",
                    "description": "List of meal options"
                }
            }
        }
    },
    {
        "name": "exhibition_info_extractor",
        "description": "Extract special exhibition information from websites",
        "arguments": {
            "type": "object",
            "properties": {
                "website_url": {
                    "type": "string",
                    "description": "Website URL"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "exhibitions": {
                    "type": "array",
                    "description": "List of special exhibition information",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Exhibition name"
                            },
                            "time": {
                                "type": "string",
                                "description": "Exhibition time"
                            },
                            "location": {
                                "type": "string",
                                "description": "Exhibition location"
                            },
                            "ticket_info": {
                                "type": "string",
                                "description": "Ticket information"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "send_training_notification",
        "description": "Send training notification to participants",
        "arguments": {
            "type": "object",
            "properties": {
                "training_content": {
                    "type": "string",
                    "description": "Training content"
                },
                "attendees": {
                    "type": "string",
                    "description": "List of participants"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "copy_file_to_directory",
        "description": "Copy the specified file to another directory",
        "arguments": {
            "type": "object",
            "properties": {
                "source_file_path": {
                    "type": "string",
                    "description": "The source file path that needs to be copied"
                },
                "destination_directory_path": {
                    "type": "string",
                    "description": "The path of the target directory"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "copy_status": {
                    "type": "boolean",
                    "description": "The status of whether the file was successfully copied to the target directory"
                }
            }
        }
    },
    {
        "name": "remind_document_preparation",
        "description": "Remind users to prepare the purchase proof and warranty documents needed for the repair day",
        "arguments": {
            "type": "object",
            "properties": {
                "contactNumber": {
                    "type": "string",
                    "description": "The contact number of the user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "The status of the reminder sent"
                }
            }
        }
    },
    {
        "name": "compare_schedules",
        "description": "Compare two schedule lists to find time conflicts",
        "arguments": {
            "type": "object",
            "properties": {
                "annual_schedule": {
                    "type": "string",
                    "description": "Annual schedule list"
                },
                "personal_schedule": {
                    "type": "string",
                    "description": "Personal schedule list"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "conflicts": {
                    "type": "array",
                    "description": "Detailed list of time conflicts"
                }
            }
        }
    },
    {
        "name": "search_movie_showtimes",
        "description": "Query the showtimes of a specified movie on a specific date",
        "arguments": {
            "type": "object",
            "properties": {
                "movie_name": {
                    "type": "string",
                    "description": "Movie name"
                },
                "date": {
                    "type": "string",
                    "description": "Show date, format as 'month day'"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "showtimes": {
                    "type": "array",
                    "description": "List of movie showtimes",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "technician_dispatch",
        "description": "Technician Dispatch Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance Request ID"
                },
                "toolsRequired": {
                    "type": "boolean",
                    "description": "Whether the technician needs to carry tools"
                },
                "sparePartsRequired": {
                    "type": "boolean",
                    "description": "Whether the technician needs to carry common spare parts"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "dispatch_status": {
                    "type": "string",
                    "description": "Technician Dispatch Status"
                },
                "technicianID": {
                    "type": "string",
                    "description": "Dispatched Technician ID"
                }
            }
        }
    },
    {
        "name": "inquire_replacement_parts_availability",
        "description": "Ask the service provider if they carry common replacement parts",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "parts_availability": {
                    "description": "The carrying status of replacement parts",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_recent_transactions",
        "description": "Check recent transaction records",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                },
                "bank_card_number": {
                    "description": "Bank card number",
                    "type": "string"
                },
                "transaction_count": {
                    "type": "integer",
                    "description": "Number of transaction records to check"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_history": {
                    "type": "array",
                    "description": "Transaction history list"
                },
                "check_status": {
                    "type": "string",
                    "description": "Transaction records check status"
                }
            }
        }
    },
    {
        "name": "travel_camera_rental",
        "description": "Travel Camera Rental Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "cameraModel": {
                    "description": "Camera Model",
                    "type": "string"
                },
                "rentalPeriod": {
                    "description": "Rental Period (in days)",
                    "type": "integer"
                },
                "renterName": {
                    "description": "Renter's Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "rental_cost": {
                    "description": "Rental Cost (including tax)",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "pay_for_service",
        "description": "Provide payment information and complete the payment process",
        "arguments": {
            "type": "object",
            "properties": {
                "payment_details": {
                    "type": "string",
                    "description": "Detailed information about the service fee payment"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_status": {
                    "description": "Whether the payment is successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_current_timestamp",
        "description": "Get the current system timestamp",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "description": "The current system timestamp",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "generate_reschedule_time",
        "description": "Generate a new appointment time",
        "arguments": {
            "type": "object",
            "properties": {
                "currentDate": {
                    "description": "Current date",
                    "type": "string"
                },
                "desiredDayOfWeek": {
                    "description": "Desired day of the week",
                    "type": "string"
                },
                "desiredTime": {
                    "description": "Desired time",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "newTime": {
                    "description": "New appointment time",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_e_ticket",
        "description": "Get electronic ticket information",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "user_name": {
                    "type": "string",
                    "description": "Passenger name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "e_ticket": {
                    "type": "string",
                    "description": "Electronic ticket information"
                }
            }
        }
    },
    {
        "name": "check_flight_status_updates",
        "description": "Regularly check for flight status updates tool",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "departureCity": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrivalCity": {
                    "type": "string",
                    "description": "Arrival city"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "type": "string",
                    "description": "Flight status update details"
                }
            }
        }
    },
    {
        "name": "set_alarm_ignore_battery_optimization",
        "description": "Set the alarm app to be exempt from battery optimization, ensuring it can be triggered even at low battery levels",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "ignore_battery_optimization_status": {
                    "description": "Setting result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "find_financial_report",
        "description": "Find and retrieve financial reports within a specified date range",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date range for which to find the reports"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report_status": {
                    "type": "string",
                    "description": "The status of the report search"
                },
                "report_content": {
                    "type": "string",
                    "description": "The content of the financial report"
                }
            }
        }
    },
    {
        "name": "zoom_create_meeting",
        "description": "A tool for creating new meetings on Zoom",
        "arguments": {
            "type": "object",
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Meeting topic"
                },
                "date": {
                    "type": "string",
                    "description": "Meeting date"
                },
                "duration": {
                    "type": "string",
                    "description": "Meeting duration"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "meeting_id": {
                    "description": "Meeting ID",
                    "type": "string"
                },
                "meeting_password": {
                    "description": "Meeting password",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "query_delivery_time",
        "description": "Query the estimated delivery time for a specified order",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "description": "New order ID",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "delivery_time": {
                    "description": "Estimated delivery time",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "develop_preventive_measures",
        "description": "Develop preventive measures for identified potential risks",
        "arguments": {
            "type": "object",
            "properties": {
                "risks": {
                    "type": "array",
                    "description": "List of risks that require preventive measures",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "preventive_measures": {
                    "type": "array",
                    "description": "List of preventive measures developed for each risk"
                }
            }
        }
    },
    {
        "name": "check_alarm_schedule_conflict",
        "description": "Check if the alarm time conflicts with existing schedule arrangements",
        "arguments": {
            "type": "object",
            "properties": {
                "new_time": {
                    "type": "string",
                    "description": "New alarm time"
                },
                "date": {
                    "type": "string",
                    "description": "Date"
                },
                "alarm_frequency": {
                    "type": "string",
                    "description": "Alarm frequency"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "conflict_check_status": {
                    "type": "string",
                    "description": "Conflict check status"
                }
            }
        }
    },
    {
        "name": "confirm_insurance_booking",
        "description": "Confirm insurance booking",
        "arguments": {
            "type": "object",
            "properties": {
                "booking_details": {
                    "type": "string",
                    "description": "Content of the insurance confirmation letter"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Whether the booking is confirmed successfully"
                }
            }
        }
    },
    {
        "name": "secure_delete",
        "description": "Securely delete files and prevent data recovery",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path to be permanently deleted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the file has been securely deleted"
                }
            }
        }
    },
    {
        "name": "calculate_next_weekday_date",
        "description": "Calculate the date of a specific day next week",
        "arguments": {
            "type": "object",
            "properties": {
                "current_date": {
                    "type": "string",
                    "description": "Current date"
                },
                "weekday": {
                    "type": "string",
                    "description": "The weekday to calculate"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "next_weekday_date": {
                    "type": "string",
                    "description": "The date of the corresponding weekday next week"
                }
            }
        }
    },
    {
        "name": "save_cancellation_and_refund_proof",
        "description": "Save evidence of order cancellation and refund",
        "arguments": {
            "type": "object",
            "properties": {
                "ticketID": {
                    "type": "string",
                    "description": "Train ticket number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "save_status": {
                    "type": "string",
                    "description": "Save status"
                }
            }
        }
    },
    {
        "name": "update_password",
        "description": "Update account password",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Account name"
                },
                "new_password": {
                    "type": "string",
                    "description": "New password for the account"
                },
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "type": "string",
                    "description": "Password update status"
                }
            }
        }
    },
    {
        "name": "filter_bonds_by_issue_date",
        "description": "Filter treasury bonds by issue date",
        "arguments": {
            "type": "object",
            "properties": {
                "bond_list": {
                    "type": "string",
                    "description": "Filtered list of treasury bonds"
                },
                "issue_date": {
                    "type": "string",
                    "description": "Specified issue date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_bonds": {
                    "description": "List of treasury bonds filtered by issue date",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "analyze_impact_on_economy",
        "description": "Analyze the potential impact on the economy based on population growth rate and related research data",
        "arguments": {
            "type": "object",
            "properties": {
                "research_data": {
                    "type": "string",
                    "description": "Research data on the impact of population growth on the economy"
                },
                "population_growth_rate": {
                    "type": "float",
                    "description": "Population growth rate"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "economic_impact_analysis": {
                    "type": "string",
                    "description": "Analysis results of the economic impact"
                }
            }
        }
    },
    {
        "name": "login_equip_tool",
        "description": "User Login Device Verification Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "description": "User ID",
                    "type": "integer"
                },
                "device_id": {
                    "description": "Device Identifier",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_status": {
                    "description": "User Login Status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "confirm_additional_schedule_adjustments",
        "description": "Confirm if additional adjustments or reminders are needed after cancelling the alarm",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_info": {
                    "type": "string",
                    "description": "Schedule information after cancelling the alarm"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "adjustment_needed": {
                    "type": "boolean",
                    "description": "Whether additional schedule adjustments are needed"
                },
                "reminder_needed": {
                    "type": "boolean",
                    "description": "Whether a new reminder is needed"
                }
            }
        }
    },
    {
        "name": "get_product_actual_price",
        "description": "Get the actual price of the product in the transaction record",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction record ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "actual_price": {
                    "type": "integer",
                    "description": "Actual price of the product"
                }
            }
        }
    },
    {
        "name": "train_stops_query",
        "description": "Query all stopover station information of the train",
        "arguments": {
            "type": "object",
            "properties": {
                "trainID": {
                    "type": "string",
                    "description": "Train number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "stops": {
                    "type": "array",
                    "description": "List of train stopover stations"
                }
            }
        }
    },
    {
        "name": "confirm_change_and_select_window_seat",
        "description": "Confirm the change of booking is successful and select a window seat for the passenger",
        "arguments": {
            "type": "object",
            "properties": {
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_status": {
                    "type": "string",
                    "description": "Change of booking status"
                },
                "seat_status": {
                    "type": "string",
                    "description": "Seat selection status"
                }
            }
        }
    },
    {
        "name": "check_insurance_included",
        "description": "Check if the car rental service includes insurance",
        "arguments": {
            "type": "object",
            "properties": {
                "carID": {
                    "type": "string",
                    "description": "Car ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "insurance_status": {
                    "type": "string",
                    "description": "Insurance inclusion status"
                }
            }
        }
    },
    {
        "name": "check_breakfast_inclusion",
        "description": "Check if the specified hotel and room type include free breakfast service",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "breakfast_inclusion": {
                    "type": "boolean",
                    "description": "Whether free breakfast is included"
                }
            }
        }
    },
    {
        "name": "compare_files",
        "description": "Compare the contents of two files to ensure that only the expected text is replaced",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path1": {
                    "type": "string",
                    "description": "The path of the first file"
                },
                "file_path2": {
                    "type": "string",
                    "description": "The path of the second file"
                },
                "exclude_lines_containing": {
                    "type": "string",
                    "description": "Exclude lines containing specific content during comparison"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the contents of the two files are the same"
                },
                "differences": {
                    "type": "array",
                    "description": "Content differences between files"
                }
            }
        }
    },
    {
        "name": "open_selected_book",
        "description": "Open the selected book for reading",
        "arguments": {
            "type": "object",
            "properties": {
                "selected_book": {
                    "description": "Selected book",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reading_status": {
                    "description": "Book open status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_study_reminder",
        "description": "Set up a study reminder tool that can set specific times and durations for reminders",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "The time of the reminder, in the format 'Every week X, at Y PM'"
                },
                "duration": {
                    "type": "number",
                    "description": "The duration of the reminder, in minutes"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "The status of whether the reminder was set successfully"
                }
            }
        }
    },
    {
        "name": "get_breakfast_details",
        "description": "Get detailed information about the complimentary breakfast service provided by the hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "description": "Hotel identifier ID",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "breakfast_details": {
                    "description": "Detailed information about the complimentary breakfast service",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "validate_link",
        "description": "Verify if the provided purchase link is valid and confirm if the book is available for pre-order",
        "arguments": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string",
                    "description": "The purchase link to be verified"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "is_valid": {
                    "description": "Whether the link is valid",
                    "type": "boolean"
                },
                "can_preorder": {
                    "description": "Whether the book can be pre-ordered",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "contact_support",
        "description": "Contact customer service to correct booking information",
        "arguments": {
            "type": "object",
            "properties": {
                "booking_number": {
                    "type": "string",
                    "description": "Booking number"
                },
                "personal_info": {
                    "type": "string",
                    "description": "Personal information"
                },
                "correct_info": {
                    "type": "string",
                    "description": "Information to be corrected"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "correction_status": {
                    "type": "string",
                    "description": "Correction status"
                }
            }
        }
    },
    {
        "name": "filter_scenic_spots",
        "description": "Filter for highly-rated and nearby attractions around specific scenic spots",
        "arguments": {
            "type": "object",
            "properties": {
                "scenicSpotName": {
                    "type": "string",
                    "description": "The name of the main scenic spot for which to filter surrounding attractions"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recommended_spots": {
                    "type": "array",
                    "description": "List of recommended attractions",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the attraction"
                            },
                            "description": {
                                "type": "string",
                                "description": "Brief introduction of the attraction"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "update_hyperlinks_anchor",
        "description": "Update all hyperlinks in the document that reference a specified anchor, updating the anchor to a new one",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                },
                "old_anchor": {
                    "type": "string",
                    "description": "Original hyperlink anchor"
                },
                "new_anchor": {
                    "type": "string",
                    "description": "New hyperlink anchor"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the hyperlink anchor update operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "get_room_facilities",
        "description": "Get the specific facilities information of a designated hotel room type",
        "arguments": {
            "type": "object",
            "properties": {
                "hotelName": {
                    "type": "string",
                    "description": "The name of the hotel"
                },
                "roomType": {
                    "type": "string",
                    "description": "Room type (e.g., double room, single room)"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "facilities": {
                    "type": "array",
                    "description": "The specific list of room facilities",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "get_security_requirements",
        "description": "Get the security check requirements for carry-on items on flights",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "security_requirements": {
                    "type": "string",
                    "description": "Details of the security check requirements"
                }
            }
        }
    },
    {
        "name": "send_schedule_change_notification",
        "description": "Send schedule change notifications to all relevant personnel",
        "arguments": {
            "type": "object",
            "properties": {
                "participants_list": {
                    "type": "string",
                    "description": "List of meeting participants"
                },
                "new_meeting_time": {
                    "type": "string",
                    "description": "New meeting time"
                },
                "adjust_reason": {
                    "type": "string",
                    "description": "Reason for adjustment"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Status of whether the notification was successfully sent"
                }
            }
        }
    },
    {
        "name": "manufacturer_stock_check",
        "description": "Check the drug inventory of a specific manufacturer on a specific date",
        "arguments": {
            "type": "object",
            "properties": {
                "medicineName": {
                    "type": "string",
                    "description": "The name of the medicine"
                },
                "manufacturer": {
                    "type": "string",
                    "description": "The name of the manufacturer"
                },
                "currentDate": {
                    "type": "string",
                    "description": "The date for querying the inventory"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "stock": {
                    "type": "string",
                    "description": "The inventory status of the manufacturer"
                }
            }
        }
    },
    {
        "name": "extract_meeting_details",
        "description": "Extract detailed information of the meeting, including time, location, participants, and agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_info": {
                    "type": "array",
                    "description": "List of meeting information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the extraction is successful",
                    "type": "string"
                },
                "meeting_details": {
                    "description": "Detailed information of the meeting",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "get_parental_consent",
        "description": "Obtain parental consent for flight booking changes",
        "arguments": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string",
                    "description": "Father's contact information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "consent_status": {
                    "type": "string",
                    "description": "Status of consent obtained"
                }
            }
        }
    },
    {
        "name": "receive_cancellation_confirmation",
        "description": "Tool for receiving order cancellation confirmation notifications",
        "arguments": {
            "type": "object",
            "properties": {
                "orderID": {
                    "description": "Order ID for which cancellation confirmation is to be received",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "description": "Order cancellation confirmation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "draw_dependencies",
        "description": "Depict the dependencies among activities on a timeline chart",
        "arguments": {
            "type": "object",
            "properties": {
                "schedule_details": {
                    "type": "string",
                    "description": "Details of the afternoon schedule"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "dependency_graph": {
                    "type": "string",
                    "description": "A timeline chart with dependencies"
                }
            }
        }
    },
    {
        "name": "login_authenticator",
        "description": "Login authentication equipment tool",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "description": "User's login name",
                    "type": "string"
                },
                "password": {
                    "description": "User's password",
                    "type": "string"
                },
                "lastLogin": {
                    "description": "Last login time",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "successful": {
                    "description": "Whether login was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "confirm_included_services",
        "description": "Confirm the services included in the reservation order",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Reservation confirmation number"
                },
                "service": {
                    "type": "string",
                    "description": "Name of the service to confirm"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_included": {
                    "type": "boolean",
                    "description": "Whether the service is included in the reservation"
                }
            }
        }
    },
    {
        "name": "collect_transfer_details",
        "description": "Collect and summarize detailed information of transfer services",
        "arguments": {
            "type": "object",
            "properties": {
                "departure_confirmation_info": {
                    "type": "string",
                    "description": "Confirmation information of the departure transfer service"
                },
                "pickup_confirmation_info": {
                    "type": "string",
                    "description": "Confirmation information of the arrival pickup service"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "collected_details": {
                    "type": "string",
                    "description": "Summarized detailed information of the transfer services"
                }
            }
        }
    },
    {
        "name": "get_latest_exchange_rate",
        "description": "Get the latest currency exchange rate",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "type": "string",
                    "description": "The currency type for which the exchange rate is being queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "exchange_rate": {
                    "type": "number",
                    "description": "The latest currency exchange rate"
                }
            }
        }
    },
    {
        "name": "search_and_confirm_restaurant",
        "description": "Search and confirm restaurants that meet the criteria",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Location to search"
                },
                "stars": {
                    "type": "integer",
                    "description": "Minimum star rating requirement"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Success of the search and confirmation",
                    "type": "string"
                },
                "restaurant_name": {
                    "description": "Name of the selected restaurant",
                    "type": "string"
                },
                "restaurant_address": {
                    "description": "Detailed address of the restaurant",
                    "type": "string"
                },
                "restaurant_coordinates": {
                    "description": "Geographic coordinates of the restaurant",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "mark_backup",
        "description": "Add specific marks in the backup file",
        "arguments": {
            "type": "object",
            "properties": {
                "backup_id": {
                    "type": "string",
                    "description": "The id of the backup"
                },
                "mark_description": {
                    "type": "string",
                    "description": "Detailed description of the mark"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the mark was successfully added",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "verify_and_save_file",
        "description": "Verify data integrity and save file",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "description": "Data integrity verification status",
                    "type": "boolean"
                },
                "save_status": {
                    "description": "File save status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "boarding_advice_query",
        "description": "Query the boarding regulations for a flight and provide boarding advice",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "advice": {
                    "type": "string",
                    "description": "Boarding advice"
                }
            }
        }
    },
    {
        "name": "calculate_growth_rate",
        "description": "Tool for calculating population growth rate",
        "arguments": {
            "type": "object",
            "properties": {
                "previous_population": {
                    "description": "Previous population quantity",
                    "type": "integer"
                },
                "current_population": {
                    "description": "Current population quantity",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "growth_rate": {
                    "description": "Population growth rate",
                    "type": "float"
                }
            }
        }
    },
    {
        "name": "set_reminder_on_event",
        "description": "Set a reminder when a specific event occurs",
        "arguments": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "string",
                    "description": "The event that triggers the reminder"
                },
                "reminder_content": {
                    "type": "string",
                    "description": "The content of the reminder"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "The status of whether the reminder was successfully set"
                }
            }
        }
    },
    {
        "name": "calculate_file_hash",
        "description": "Calculate the hash value of a specified file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hash_value": {
                    "type": "string",
                    "description": "Hash value of the file"
                }
            }
        }
    },
    {
        "name": "book_search_tool",
        "description": "Book Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "title": {
                    "description": "Title",
                    "type": "string"
                },
                "author": {
                    "description": "Author Name",
                    "type": "string"
                },
                "publish_date": {
                    "description": "Publication Date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "books": {
                    "description": "List of books that meet the search criteria",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "calculate_md5",
        "description": "Calculate the MD5 hash of a specified file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path for which to calculate the MD5 hash"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "md5": {
                    "type": "string",
                    "description": "The MD5 hash of the file"
                }
            }
        }
    },
    {
        "name": "sum_nutrients",
        "description": "Summarize the nutritional components of various foods",
        "arguments": {
            "type": "object",
            "properties": {
                "nutrients_list": {
                    "description": "A list containing the nutritional components of each food",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "calories": {
                                "type": "number"
                            },
                            "protein": {
                                "type": "number"
                            },
                            "carbohydrate": {
                                "type": "number"
                            },
                            "fat": {
                                "type": "number"
                            }
                        },
                        "required": [
                            "calories",
                            "protein",
                            "carbohydrate",
                            "fat"
                        ]
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "total_calories": {
                    "description": "Total calories",
                    "type": "number"
                },
                "total_carbs": {
                    "description": "Total carbohydrates",
                    "type": "number"
                },
                "total_proteins": {
                    "description": "Total proteins",
                    "type": "number"
                },
                "total_fats": {
                    "description": "Total fats",
                    "type": "number"
                }
            }
        }
    },
    {
        "name": "move_agenda_item_to_end",
        "description": "Move the specified agenda item to the last position in the agenda list",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The id of the agenda to be edited"
                },
                "agenda_item": {
                    "type": "string",
                    "description": "The agenda item to be moved"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the agenda item was successfully moved",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "export_document",
        "description": "Export the document in the specified format",
        "arguments": {
            "type": "object",
            "properties": {
                "document_name": {
                    "type": "string",
                    "description": "The name of the document to be exported"
                },
                "document_id": {
                    "description": "The ID of the document to be exported",
                    "type": "string"
                },
                "format": {
                    "description": "The format of the export file",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the document export was successful",
                    "type": "boolean"
                },
                "file_path": {
                    "description": "The path of the exported file",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_first_day_of_current_month",
        "description": "Get the date of the first day of the current month",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "The date of the first day of the current month",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "login_gear",
        "description": "Login Equipment Lookup Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "description": "Username of the login user",
                    "type": "string"
                },
                "platform": {
                    "description": "Name of the online platform",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_gear": {
                    "description": "Recommended login equipment",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "book_family_suite",
        "description": "Book a family suite that accommodates the specified number of people",
        "arguments": {
            "type": "object",
            "properties": {
                "cruise_name": {
                    "type": "string",
                    "description": "The name of the cruise"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "people_count": {
                    "type": "integer",
                    "description": "Number of people to accommodate"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Suite booking status"
                }
            }
        }
    },
    {
        "name": "analyze_investment_potential",
        "description": "Analyze the investment potential of a product",
        "arguments": {
            "type": "object",
            "properties": {
                "productData": {
                    "type": "object",
                    "description": "Historical transaction data of the product"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "investmentAnalysis": {
                    "type": "object",
                    "description": "Investment potential analysis of the product"
                }
            }
        }
    },
    {
        "name": "refresh_messages",
        "description": "Refresh the message list and retrieve the latest messages",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "refresh_status": {
                    "description": "Whether the message list was successfully refreshed",
                    "type": "string"
                },
                "latest_message": {
                    "description": "Content of the latest message retrieved",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "book_outdoor_activity",
        "description": "Book outdoor expansion activities",
        "arguments": {
            "type": "object",
            "properties": {
                "activity_type": {
                    "type": "string",
                    "description": "Activity type"
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Activity date"
                },
                "location": {
                    "type": "string",
                    "description": "Activity location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                }
            }
        }
    },
    {
        "name": "service_price_list_search",
        "description": "Service Price List Query Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "bankName": {
                    "description": "Name of the bank",
                    "type": "string"
                },
                "serviceType": {
                    "description": "Type of service",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_price": {
                    "description": "Price of the service",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "search_meetings",
        "description": "Search for all meetings within a specified date range",
        "arguments": {
            "type": "object",
            "properties": {
                "start_date": {
                    "type": "string",
                    "description": "Start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the search was successful",
                    "type": "string"
                },
                "meetings": {
                    "description": "List of meetings found",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "validate_format",
        "description": "Verify if the document format conforms to the specified template and make necessary adjustments",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The path of the document to validate"
                },
                "template_path": {
                    "type": "string",
                    "description": "The path of the standard template"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the verification and adjustment operations were successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "fetch_historical_data",
        "description": "Retrieve historical transaction data for a specified product",
        "arguments": {
            "type": "object",
            "properties": {
                "productName": {
                    "type": "string",
                    "description": "Product Name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "productData": {
                    "type": "object",
                    "description": "Historical transaction data of the product"
                }
            }
        }
    },
    {
        "name": "inquire_room_upgrade",
        "description": "Inquire about the possibility of getting a room upgrade",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "upgrade_options": {
                    "type": "array",
                    "description": "Available upgrade options"
                },
                "upgrade_prices": {
                    "type": "array",
                    "description": "Prices of the upgrade options"
                }
            }
        }
    },
    {
        "name": "check_equipment",
        "description": "Check the status of equipment in the conference room and perform necessary maintenance",
        "arguments": {
            "type": "object",
            "properties": {
                "roomID": {
                    "type": "string",
                    "description": "Conference room ID"
                },
                "equipment_type": {
                    "type": "string",
                    "description": "Type of equipment to be checked"
                },
                "city": {
                    "type": "string",
                    "description": "City where the conference room is located"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "equipment_status": {
                    "type": "string",
                    "description": "Status of equipment inspection and maintenance"
                }
            }
        }
    },
    {
        "name": "confirm_arrival_time",
        "description": "Confirm the service provider's arrival time",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "arrival_time": {
                    "type": "string",
                    "description": "The estimated arrival time of the service provider"
                }
            }
        }
    },
    {
        "name": "monitor_exchange_rate",
        "description": "Real-time monitoring of the exchange rate for a specified currency pair, and trigger a purchase operation when it falls below a set threshold",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_pair": {
                    "type": "string",
                    "description": "The currency pair to monitor"
                },
                "threshold": {
                    "type": "number",
                    "description": "The set exchange rate threshold"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "monitoring_status": {
                    "type": "string",
                    "description": "Monitoring status"
                },
                "triggered": {
                    "type": "boolean",
                    "description": "Whether a purchase operation was triggered"
                }
            }
        }
    },
    {
        "name": "final_loan_verification",
        "description": "Complete the final verification steps for the loan",
        "arguments": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string",
                    "description": "Card (account) number / Mobile number / Username"
                },
                "password": {
                    "type": "string",
                    "description": "Account password"
                },
                "final_captcha": {
                    "type": "string",
                    "description": "Final verification code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "type": "string",
                    "description": "Loan final verification status"
                }
            }
        }
    },
    {
        "name": "get_jd_price",
        "description": "Get the price of a specified product on JD platform",
        "arguments": {
            "type": "object",
            "properties": {
                "item_name": {
                    "type": "string",
                    "description": "Product name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Product price"
                }
            }
        }
    },
    {
        "name": "check_refund_fee_and_payment_method",
        "description": "Check refund fee and confirm payment method",
        "arguments": {
            "type": "object",
            "properties": {
                "ticketID": {
                    "type": "string",
                    "description": "Train ticket number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "refund_fee": {
                    "type": "string",
                    "description": "Refund fee"
                },
                "payment_method": {
                    "type": "string",
                    "description": "Payment method"
                }
            }
        }
    },
    {
        "name": "get_technician_arrival_time",
        "description": "Get the estimated arrival time of the maintenance technician",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "arrival_time": {
                    "type": "string",
                    "description": "Estimated arrival time of the technician"
                }
            }
        }
    },
    {
        "name": "confirm_off_peak_hours",
        "description": "Confirm if the current time is off-peak hours",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "off_peak_status": {
                    "description": "Whether it is off-peak hours",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "average_house_price_lookup",
        "description": "Query average house price by postal code",
        "arguments": {
            "type": "object",
            "properties": {
                "postal_code": {
                    "type": "string",
                    "description": "Postal code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "average_price": {
                    "type": "string",
                    "description": "Average house price"
                }
            }
        }
    },
    {
        "name": "hotel_booking",
        "description": "Complete the hotel room booking process",
        "arguments": {
            "type": "object",
            "properties": {
                "hotelName": {
                    "type": "string",
                    "description": "Hotel Name"
                },
                "checkInDate": {
                    "type": "string",
                    "description": "Check-in Date"
                },
                "checkOutDate": {
                    "type": "string",
                    "description": "Check-out Date"
                },
                "room_orientation": {
                    "type": "string",
                    "description": "Room Orientation"
                },
                "roomType": {
                    "type": "string",
                    "description": "Room Type"
                },
                "contactPhone": {
                    "type": "string",
                    "description": "Contact Phone"
                },
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel Identifier ID"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of Rooms Booked"
                },
                "city": {
                    "type": "string",
                    "description": "City of Stay"
                },
                "area": {
                    "type": "string",
                    "description": "Area of Stay"
                },
                "brand": {
                    "type": "string",
                    "description": "Hotel Brand"
                },
                "contact_info": {
                    "type": "integer",
                    "description": "Contact Information"
                },
                "budget": {
                    "type": "integer",
                    "description": "Accommodation Budget"
                },
                "nights": {
                    "type": "integer",
                    "description": "Number of Nights"
                },
                "personal_info": {
                    "type": "string",
                    "description": "Personal Information of the User"
                },
                "payment_info": {
                    "type": "string",
                    "description": "Payment Information of the User"
                },
                "breakfast_included": {
                    "type": "string",
                    "description": "Breakfast Included"
                },
                "special_request": {
                    "type": "string",
                    "description": "Special Request"
                },
                "guestName": {
                    "type": "string",
                    "description": "Guest Name"
                },
                "guestID": {
                    "type": "string",
                    "description": "Guest ID Number"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "Customer Phone Number"
                },
                "email": {
                    "type": "string",
                    "description": "Customer Email"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_status": {
                    "type": "string",
                    "description": "Reservation Status"
                },
                "reservation_details": {
                    "type": "string",
                    "description": "Reservation Details"
                },
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking Confirmation Number"
                },
                "bookingDetails": {
                    "type": "object",
                    "properties": {
                        "confirmationNumber": {
                            "type": "string",
                            "description": "Booking Confirmation Number"
                        },
                        "totalPrice": {
                            "type": "integer",
                            "description": "Total Price"
                        }
                    }
                }
            }
        }
    },
    {
        "name": "show_agenda",
        "description": "Display the schedule for a specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "start_date": {
                    "type": "string",
                    "description": "Start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the schedule display was successful",
                    "type": "string"
                },
                "agenda": {
                    "description": "Details of the agenda",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "calculate_daily_change",
        "description": "Calculate the daily price change percentage of stocks within a specified period",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "type": "string",
                    "description": "Stock code"
                },
                "start_date": {
                    "type": "string",
                    "description": "Start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "daily_changes": {
                    "type": "array",
                    "description": "Daily change percentage data"
                }
            }
        }
    },
    {
        "name": "train_similar_stop_time_filter",
        "description": "Filter out trains with stop times similar to the reference train",
        "arguments": {
            "type": "object",
            "properties": {
                "departure_time": {
                    "type": "string",
                    "description": "Expected departure time"
                },
                "reference_stop_time": {
                    "type": "string",
                    "description": "Stop time of the reference train"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "similar_trains": {
                    "type": "array",
                    "description": "List of trains with similar stop times"
                }
            }
        }
    },
    {
        "name": "insert_photos_to_diary",
        "description": "Insert photo links into the specified location in the travel diary",
        "arguments": {
            "type": "object",
            "properties": {
                "photo_urls": {
                    "type": "array",
                    "description": "Array of photo links to be inserted",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "diary_entry": {
                    "type": "string",
                    "description": "Unique identifier of the diary entry"
                },
                "diary_content": {
                    "type": "string",
                    "description": "Content of the travel diary draft"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "insertion_status": {
                    "type": "boolean",
                    "description": "Whether the photos were successfully inserted"
                },
                "updated_diary": {
                    "description": "Updated content of the travel diary",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_cabin_luggage_policy",
        "description": "Check if the carry-on luggage complies with the airline's carry-on standards",
        "arguments": {
            "type": "object",
            "properties": {
                "luggage_size": {
                    "type": "string",
                    "description": "Carry-on luggage size"
                },
                "luggage_weight": {
                    "type": "string",
                    "description": "Carry-on luggage weight"
                },
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "policy_status": {
                    "type": "string",
                    "description": "Compliance with carry-on standards"
                }
            }
        }
    },
    {
        "name": "change_to_earliest_available_train",
        "description": "Change to the earliest available train service, ensuring the seat type remains the same",
        "arguments": {
            "type": "object",
            "properties": {
                "originalTicketID": {
                    "type": "string",
                    "description": "Original train ticket number"
                },
                "identityNumber": {
                    "type": "string",
                    "description": "Ticket purchaser's identity card number"
                },
                "newSeatType": {
                    "type": "string",
                    "description": "Seat type to be retained"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_status": {
                    "description": "Status of the train ticket change",
                    "type": "string"
                },
                "newTrainID": {
                    "description": "Train number after change",
                    "type": "string"
                },
                "newDepartureDate": {
                    "description": "Departure date after change",
                    "type": "string"
                },
                "newArrivalTime": {
                    "description": "Estimated arrival time",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "search_food_preparation",
        "description": "Search for the preparation methods of specific cuisines, including allergy component filtering",
        "arguments": {
            "type": "object",
            "properties": {
                "dish": {
                    "type": "string",
                    "description": "The name of the cuisine to search for"
                },
                "allergies": {
                    "type": "string",
                    "description": "The allergens to be excluded"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "preparation": {
                    "type": "string",
                    "description": "The preparation method of the cuisine"
                }
            }
        }
    },
    {
        "name": "select_and_book_resort",
        "description": "Select a resort that fits the budget from the provided resort options and complete the booking",
        "arguments": {
            "type": "object",
            "properties": {
                "resort_options": {
                    "type": "array",
                    "description": "List of resort options",
                    "items": {
                        "type": "object",
                        "properties": {
                            "resort_name": {
                                "type": "string",
                                "description": "Resort name"
                            },
                            "price": {
                                "type": "integer",
                                "description": "Price"
                            }
                        }
                    }
                },
                "budget": {
                    "type": "integer",
                    "description": "Budget"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "selected_resort": {
                    "type": "string",
                    "description": "Name of the booked resort"
                }
            }
        }
    },
    {
        "name": "review_schedule_post_cancellation",
        "description": "After cancelling the alarm, check the schedule to determine if additional adjustments or reminders are needed",
        "arguments": {
            "type": "object",
            "properties": {
                "cancellation_time": {
                    "type": "string",
                    "description": "The time of the cancelled alarm"
                },
                "cancellation_frequency": {
                    "type": "string",
                    "description": "The frequency of the cancelled alarm"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_info": {
                    "type": "string",
                    "description": "Schedule information after the alarm is cancelled"
                }
            }
        }
    },
    {
        "name": "upload_diary_to_blog",
        "description": "Upload the travel diary content and photos to the user's travel blog and publish",
        "arguments": {
            "type": "object",
            "properties": {
                "account_info": {
                    "type": "string",
                    "description": "User's blog account information"
                },
                "diary_content": {
                    "type": "string",
                    "description": "Generated travel diary content"
                },
                "photos": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    },
                    "description": "User travel photos information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "upload_status": {
                    "type": "string",
                    "description": "Diary upload and publication status"
                }
            }
        }
    },
    {
        "name": "calculate_next_weekday",
        "description": "Calculate the date of the next specified weekday from the current date",
        "arguments": {
            "type": "object",
            "properties": {
                "current_date": {
                    "type": "string",
                    "description": "The current date"
                },
                "weekday": {
                    "type": "string",
                    "description": "The weekday to be calculated, such as 'Wednesday'"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "next_weekday_date": {
                    "type": "string",
                    "description": "The date of the next specified weekday"
                }
            }
        }
    },
    {
        "name": "add_event_after_meeting",
        "description": "Add a new event after a specified meeting",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_time": {
                    "type": "string",
                    "description": "Specific time of the meeting"
                },
                "event_details": {
                    "type": "string",
                    "description": "Details of the new event, such as time and location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "add_status": {
                    "type": "string",
                    "description": "Status of the event addition"
                }
            }
        }
    },
    {
        "name": "navigate_to_messages",
        "description": "Navigate to the messages page",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "navigation_status": {
                    "description": "Whether the navigation to the messages page was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "update_email_service_with_content",
        "description": "Update email service, including stills and synopsis information",
        "arguments": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string",
                    "description": "The user's email address"
                },
                "content": {
                    "type": "string",
                    "description": "The content to be included in the email"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "type": "string",
                    "description": "Email content update status"
                }
            }
        }
    },
    {
        "name": "research_publication_search",
        "description": "Academic Achievement Search Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "researcher": {
                    "description": "Researcher Name",
                    "type": "string"
                },
                "field": {
                    "description": "Research Field",
                    "type": "string"
                },
                "publish_period": {
                    "description": "Publication Period",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2} TO \\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}$"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "publication_title": {
                    "description": "Publication Title",
                    "type": "string"
                },
                "publication_date": {
                    "description": "Publication Date",
                    "type": "string",
                    "format": "date-time"
                },
                "publication_journal": {
                    "description": "Publication Journal",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "confirm_spare_parts",
        "description": "Confirm the spare parts carried by the maintenance personnel",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                },
                "spare_parts": {
                    "type": "string",
                    "description": "Spare parts to be confirmed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "description": "Spare parts confirmation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "review_document",
        "description": "For reviewing the accuracy and completeness of document content",
        "arguments": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "object",
                    "description": "Document object"
                },
                "file_path": {
                    "type": "string",
                    "description": "File path of the document"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the document content has passed the review"
                }
            }
        }
    },
    {
        "name": "confirm_refund",
        "description": "Confirm refund matters",
        "arguments": {
            "type": "object",
            "properties": {
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "refund_status": {
                    "type": "string",
                    "description": "Refund status"
                }
            }
        }
    },
    {
        "name": "upgrade_to_first_class",
        "description": "Upgrade an already booked economy class ticket to first class",
        "arguments": {
            "type": "object",
            "properties": {
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "upgrade_status": {
                    "type": "string",
                    "description": "Ticket upgrade status"
                }
            }
        }
    },
    {
        "name": "select_earliest_train",
        "description": "Select the train with the earliest departure time",
        "arguments": {
            "type": "object",
            "properties": {
                "train_list": {
                    "type": "array",
                    "description": "List of train schedules"
                },
                "seat_type": {
                    "type": "string",
                    "description": "Seat type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "earliest_train": {
                    "type": "object",
                    "description": "Information of the train with the earliest departure time"
                }
            }
        }
    },
    {
        "name": "get_bond_interest_details",
        "description": "Get the interest rate details of a specific government bond",
        "arguments": {
            "type": "object",
            "properties": {
                "bond_identifier": {
                    "type": "string",
                    "description": "The unique identifier of the government bond"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "interest_details": {
                    "description": "The interest rate details of the government bond",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "integrate_report_sections",
        "description": "Integrate multiple analytical sections into one report",
        "arguments": {
            "type": "object",
            "properties": {
                "sections": {
                    "type": "string",
                    "description": "All analytical sections"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "integrated_report": {
                    "type": "string",
                    "description": "Integrated report"
                }
            }
        }
    },
    {
        "name": "library_book_reserve",
        "description": "Reserve a specific book in the library system using user information",
        "arguments": {
            "type": "object",
            "properties": {
                "book_title": {
                    "type": "string",
                    "description": "The title of the book to reserve"
                },
                "member_info": {
                    "type": "string",
                    "description": "The user's membership number or ID number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_status": {
                    "type": "boolean",
                    "description": "Whether the reservation is successful"
                },
                "pickup_location": {
                    "type": "string",
                    "description": "Location to pick up the book"
                }
            }
        }
    },
    {
        "name": "enable_two_factor_authentication",
        "description": "Enable two-factor authentication for the account",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Account name"
                },
                "phone_number": {
                    "type": "string",
                    "description": "Phone number to receive the verification code"
                },
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "setup_status": {
                    "type": "string",
                    "description": "Two-factor authentication setup status"
                },
                "two_factor_status": {
                    "type": "string",
                    "description": "Status of whether two-factor authentication is successfully enabled"
                }
            }
        }
    },
    {
        "name": "calculate_next_week_date",
        "description": "Calculate the date of the same day of the week in the next week",
        "arguments": {
            "type": "object",
            "properties": {
                "original_date": {
                    "type": "string",
                    "description": "Original date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "new_date": {
                    "type": "string",
                    "description": "Calculated new date"
                }
            }
        }
    },
    {
        "name": "flight_landing_time_query",
        "description": "Query the specific landing time of a designated flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "The flight number for which the landing time is to be queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "landing_time": {
                    "type": "string",
                    "description": "The landing time of the flight"
                }
            }
        }
    },
    {
        "name": "filter_flights_with_priority_boarding",
        "description": "Filter out flights that are after the specified flight and ensure these flights offer priority boarding service",
        "arguments": {
            "type": "object",
            "properties": {
                "flights": {
                    "type": "string",
                    "description": "List of all available flights"
                },
                "originalFlightNumber": {
                    "type": "string",
                    "description": "Original flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_flights": {
                    "type": "string",
                    "description": "List of filtered flights"
                }
            }
        }
    },
    {
        "name": "technician_schedule_check",
        "description": "Check if the technician's schedule has any conflicts",
        "arguments": {
            "type": "object",
            "properties": {
                "technician_contact": {
                    "type": "string",
                    "description": "Contact information of the technician"
                },
                "desired_time": {
                    "type": "string",
                    "description": "Desired new appointment time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Technician's availability status at the desired time"
                }
            }
        }
    },
    {
        "name": "login_equipment",
        "description": "Login Equipment Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "description": "User Name",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "equipment_list": {
                    "description": "User's Login Equipment List",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "retrieve_online_banking_password",
        "description": "Retrieve the online banking password associated with the account ID and related to the user's birthday",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                },
                "birth_date": {
                    "type": "string",
                    "description": "User's Birthday"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "recovery_status": {
                    "type": "string",
                    "description": "Password recovery status"
                },
                "new_password": {
                    "type": "string",
                    "description": "Newly set password"
                }
            }
        }
    },
    {
        "name": "check_hotel_facilities",
        "description": "Check if the hotel has specified facilities",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel ID"
                },
                "required_facilities": {
                    "type": "array",
                    "description": "List of hotel facilities to check",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "facilities_status": {
                    "type": "array",
                    "description": "The inspection results of each facility",
                    "items": {
                        "type": "object",
                        "properties": {
                            "facility": {
                                "type": "string",
                                "description": "Facility name"
                            },
                            "availability": {
                                "type": "boolean",
                                "description": "Whether the facility is available"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "confirm_service_cost_and_payment",
        "description": "Confirm the price and payment method of the repair service",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Repair request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_cost": {
                    "type": "string",
                    "description": "Repair service cost"
                },
                "payment_method": {
                    "type": "string",
                    "description": "Payment method"
                }
            }
        }
    },
    {
        "name": "customer_service_contact",
        "description": "Tool for obtaining customer service contact information",
        "arguments": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "description": "Brand name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "type": "string",
                    "description": "Contact information of customer service"
                }
            }
        }
    },
    {
        "name": "select_and_check_product",
        "description": "Select a specific product and check its details",
        "arguments": {
            "type": "object",
            "properties": {
                "product_name": {
                    "type": "string",
                    "description": "The name of the product to select"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selection_status": {
                    "description": "Whether the product selection and check are successful",
                    "type": "string"
                },
                "stock_status": {
                    "description": "The stock status of the product",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_meeting_update_notification",
        "description": "Send a notification to meeting participants about the updated meeting time and location",
        "arguments": {
            "type": "object",
            "properties": {
                "participants": {
                    "type": "string",
                    "description": "List of meeting participants"
                },
                "new_meeting_time": {
                    "type": "string",
                    "description": "New meeting time"
                },
                "new_meeting_location": {
                    "type": "string",
                    "description": "New meeting location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "complete_payment_with_coupon",
        "description": "Complete payment with coupon",
        "arguments": {
            "type": "object",
            "properties": {
                "budget": {
                    "type": "integer",
                    "description": "Budget"
                },
                "coupon_code": {
                    "type": "string",
                    "description": "Coupon code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_status": {
                    "type": "string",
                    "description": "Payment status"
                },
                "booking_details": {
                    "type": "object",
                    "description": "Booking details"
                }
            }
        }
    },
    {
        "name": "check_5g_support",
        "description": "Check if the phone supports 5G network",
        "arguments": {
            "type": "object",
            "properties": {
                "product_type": {
                    "type": "string",
                    "description": "Product Type"
                },
                "brand": {
                    "type": "string",
                    "description": "Brand"
                },
                "model": {
                    "type": "string",
                    "description": "Model"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "support_5g": {
                    "type": "boolean",
                    "description": "Supports 5G Network"
                }
            }
        }
    },
    {
        "name": "confirm_delivery_before_date",
        "description": "Confirm whether the seller can deliver the goods before the specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "product": {
                    "type": "string",
                    "description": "The product to confirm delivery for"
                },
                "delivery_date": {
                    "type": "string",
                    "description": "The expected delivery date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "boolean",
                    "description": "Whether it can be delivered on time"
                }
            }
        }
    },
    {
        "name": "create_sleep_schedule",
        "description": "Develop a reasonable sleep schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "time_schedule": {
                    "type": "string",
                    "description": "User's work and life schedule"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sleep_schedule": {
                    "description": "Developed sleep schedule",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "contact_venue",
        "description": "Contact the venue to confirm availability and sign the contract",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Event location"
                },
                "date": {
                    "type": "string",
                    "description": "Event date",
                    "format": "date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Venue booking confirmation status"
                }
            }
        }
    },
    {
        "name": "filter_successful_logins",
        "description": "Filter out successful login records from login history",
        "arguments": {
            "type": "object",
            "properties": {
                "login_records": {
                    "type": "string",
                    "description": "Login history"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "successful_logins": {
                    "type": "string",
                    "description": "Successful login records"
                }
            }
        }
    },
    {
        "name": "record_confirmation_details",
        "description": "Record the confirmation information of the maintenance provider",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Confirmation status"
                },
                "provider_details": {
                    "type": "string",
                    "description": "Detailed information of the maintenance provider"
                }
            }
        }
    },
    {
        "name": "arrange_additional_seating",
        "description": "Arrange additional seating for a designated conference room",
        "arguments": {
            "type": "object",
            "properties": {
                "roomID": {
                    "type": "string",
                    "description": "Conference room ID"
                },
                "city": {
                    "type": "string",
                    "description": "City where the conference room is located"
                },
                "additional_seats": {
                    "type": "string",
                    "description": "Number of additional seats required"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "arrangement_status": {
                    "type": "string",
                    "description": "Status of the additional seating arrangement"
                }
            }
        }
    },
    {
        "name": "train_best_value_selection",
        "description": "Compare ticket prices among the filtered trains and select the one with the highest cost performance",
        "arguments": {
            "type": "object",
            "properties": {
                "seat_type": {
                    "type": "string",
                    "description": "Seat type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "best_value_train": {
                    "type": "string",
                    "description": "Train number with the highest cost performance"
                }
            }
        }
    },
    {
        "name": "get_specific_train_departure_time",
        "description": "Get the specific departure time of a particular train",
        "arguments": {
            "type": "object",
            "properties": {
                "train_number": {
                    "type": "string",
                    "description": "The train number for which the departure time is to be queried"
                },
                "train_schedule": {
                    "type": "string",
                    "description": "Train schedule list"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "departure_time": {
                    "type": "string",
                    "description": "The specific departure time of the train"
                }
            }
        }
    },
    {
        "name": "train_stop_time_query",
        "description": "Query the stopover time information for a specified train",
        "arguments": {
            "type": "object",
            "properties": {
                "train_id": {
                    "type": "string",
                    "description": "Train number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "stop_time": {
                    "type": "string",
                    "description": "The stopover time of the train"
                }
            }
        }
    },
    {
        "name": "health_monitor_tool",
        "description": "Health monitoring tool, used for measuring and tracking a range of health-related data",
        "arguments": {
            "type": "object",
            "properties": {
                "userInfo": {
                    "type": "object",
                    "description": "User's personal information",
                    "properties": {
                        "age": {
                            "type": "integer",
                            "description": "User's age"
                        },
                        "height": {
                            "type": "number",
                            "description": "User's height (in meters)"
                        },
                        "weight": {
                            "type": "number",
                            "description": "User's weight (in kilograms)"
                        },
                        "sex": {
                            "type": "string",
                            "description": "User's gender (male or female)",
                            "enum": [
                                "male",
                                "female"
                            ]
                        },
                        "name": {
                            "type": "string",
                            "description": "User's name"
                        }
                    }
                },
                "monitorType": {
                    "type": "string",
                    "description": "The item to be monitored (such as heart rate, blood pressure, etc.)",
                    "enum": [
                        "heart rate",
                        "blood pressure",
                        "blood sugar",
                        "steps taken"
                    ]
                },
                "familyHistory": {
                    "type": "object",
                    "description": "Family medical history",
                    "properties": {
                        "diabetes": {
                            "type": "boolean",
                            "description": "Whether there is a history of diabetes"
                        },
                        "hypertension": {
                            "type": "boolean",
                            "description": "Whether there is a history of hypertension"
                        },
                        "cardioDisease": {
                            "type": "boolean",
                            "description": "Whether there is a history of heart disease"
                        }
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "measurement": {
                    "type": "object",
                    "description": "Monitoring results",
                    "properties": {
                        "value": {
                            "type": "number",
                            "description": "Measured value"
                        },
                        "unit": {
                            "type": "string",
                            "description": "Measurement unit"
                        },
                        "normalRange": {
                            "type": "object",
                            "description": "Normal range",
                            "properties": {
                                "min": {
                                    "type": "number",
                                    "description": "Minimum of the normal range"
                                },
                                "max": {
                                    "type": "number",
                                    "description": "Maximum of the normal range"
                                }
                            }
                        },
                        "timestamp": {
                            "type": "string",
                            "description": "Measurement timestamp"
                        }
                    }
                },
                "recommendations": {
                    "type": "array",
                    "description": "Health recommendations",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "get_alibaba_price",
        "description": "Get the price of a specified product on Alibaba platform",
        "arguments": {
            "type": "object",
            "properties": {
                "item_name": {
                    "type": "string",
                    "description": "Product name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Product price"
                }
            }
        }
    },
    {
        "name": "compare_room_facilities",
        "description": "Compare the facility differences between two types of rooms",
        "arguments": {
            "type": "object",
            "properties": {
                "luxury_facilities": {
                    "type": "string",
                    "description": "List of facilities for the luxury double room"
                },
                "executive_facilities": {
                    "type": "string",
                    "description": "List of facilities for the executive double room"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "comparison_result": {
                    "type": "string",
                    "description": "Comparison result of room facilities"
                }
            }
        }
    },
    {
        "name": "export_and_send_report",
        "description": "Export the generated report in the specified format and send it to the user",
        "arguments": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string",
                    "description": "The file format of the exported report"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "export_status": {
                    "type": "string",
                    "description": "The status of whether the report export was successful"
                },
                "send_status": {
                    "type": "string",
                    "description": "The status of whether the report sending was successful"
                }
            }
        }
    },
    {
        "name": "select_books_of_interest",
        "description": "Select books of interest from the provided list of books",
        "arguments": {
            "type": "object",
            "properties": {
                "books_list": {
                    "description": "Available books list",
                    "type": "array"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_book": {
                    "description": "Selected book",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_login_records",
        "description": "Check the login status of a specified account ID today",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_records": {
                    "type": "string",
                    "description": "Details of today's login records"
                }
            }
        }
    },
    {
        "name": "insert_content_to_document",
        "description": "Insert content into the document",
        "arguments": {
            "type": "object",
            "properties": {
                "document_name": {
                    "type": "string",
                    "description": "The name of the document"
                },
                "content": {
                    "type": "string",
                    "description": "The content to insert"
                },
                "document": {
                    "type": "object",
                    "description": "The document object"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the content was successfully inserted",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "find_past_annual_meeting_dates",
        "description": "Search for information mentioning past annual meeting dates in the document and return their positions",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path to search"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "text_positions": {
                    "type": "array",
                    "description": "List of positions where past annual meeting date information is located in the file"
                }
            }
        }
    },
    {
        "name": "online_bank_registration_confirm",
        "description": "Online electronic banking registration application read registration instructions confirmation tool",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation": {
                    "description": "Confirm if the registration instructions have been read",
                    "type": "boolean"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "registration_status": {
                    "description": "Registration status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "contact_job_provider",
        "description": "Contact the part-time job provider to obtain job details and application process",
        "arguments": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string",
                    "description": "Contact information of the job provider"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contact_status": {
                    "type": "string",
                    "description": "Contact status"
                }
            }
        }
    },
    {
        "name": "search_second_hand_macbook",
        "description": "Search for second-hand Macbook Pro laptops, filtering out the most recently posted transactions with a price under 2000 yuan",
        "arguments": {
            "type": "object",
            "properties": {
                "item_name": {
                    "type": "string",
                    "description": "Item name"
                },
                "max_price": {
                    "type": "integer",
                    "description": "Maximum item price"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_status": {
                    "type": "string",
                    "description": "Search status"
                },
                "trade_info": {
                    "type": "object",
                    "description": "Filtered trade information"
                }
            }
        }
    },
    {
        "name": "check_emergency_exits",
        "description": "Check if the meeting room has a sufficient number of emergency exits",
        "arguments": {
            "type": "object",
            "properties": {
                "roomID": {
                    "type": "string",
                    "description": "Meeting room number"
                },
                "required_exits": {
                    "type": "number",
                    "description": "Required number of emergency exits"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "emergency_exits_status": {
                    "type": "string",
                    "description": "Status of whether the meeting room meets the required number of emergency exits"
                }
            }
        }
    },
    {
        "name": "delivery_history_analysis",
        "description": "Analyze customer's historical delivery data to calculate the average delivery time",
        "arguments": {
            "type": "object",
            "properties": {
                "customerID": {
                    "type": "string",
                    "description": "Customer ID"
                },
                "orderDate": {
                    "type": "string",
                    "description": "Order Date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "averageDeliveryTime": {
                    "description": "Calculated average delivery time",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "select_window_seat",
        "description": "Select a window seat",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selection_status": {
                    "type": "string",
                    "description": "Seat selection status"
                },
                "seat_number": {
                    "type": "string",
                    "description": "Selected seat number"
                }
            }
        }
    },
    {
        "name": "train_ticket_change_query",
        "description": "Query the remaining ticket availability for a specific train number and date",
        "arguments": {
            "type": "object",
            "properties": {
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "trainID": {
                    "type": "string",
                    "description": "Train number"
                },
                "seatType": {
                    "type": "string",
                    "description": "Seat type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "type": "string",
                    "description": "Availability status"
                }
            }
        }
    },
    {
        "name": "prepare_safety_and_medical",
        "description": "Safety and Medical Preparation",
        "arguments": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string",
                    "description": "Event Type"
                },
                "location": {
                    "type": "string",
                    "description": "Event Location"
                },
                "date": {
                    "type": "string",
                    "description": "Event Date",
                    "format": "date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "preparation_status": {
                    "type": "string",
                    "description": "Safety and Medical Preparation Status"
                }
            }
        }
    },
    {
        "name": "retrieve_upcoming_appointments",
        "description": "Retrieve all upcoming service appointments associated with a user ID",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "The unique identifier of the user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "retrieval_status": {
                    "type": "string",
                    "description": "Whether the retrieval operation was successful"
                },
                "appointments": {
                    "type": "array",
                    "description": "List of upcoming service appointments"
                }
            }
        }
    },
    {
        "name": "get_following_list",
        "description": "Get the list of people followed by a specified account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "TikTok account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "following_list": {
                    "type": "array",
                    "description": "List of followed people",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "enterprise_credit_rank",
        "description": "Enterprise Credit Rating Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "enterpriseID": {
                    "description": "Unique identifier of the enterprise",
                    "type": "string"
                },
                "assessmentDate": {
                    "description": "Assessment date",
                    "type": "string"
                },
                "industryType": {
                    "description": "Industry category of the enterprise",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "creditRating": {
                    "description": "Enterprise credit rating",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "close_banking_application",
        "description": "Tool for closing the official banking website or mobile application",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "close_status": {
                    "description": "Whether the closure was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "select_flight_and_seat",
        "description": "Select a specific flight and choose seat preference",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "The flight number to select"
                },
                "seat_preference": {
                    "type": "string",
                    "description": "Seat preference"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selection_status": {
                    "type": "string",
                    "description": "Flight and seat selection status"
                }
            }
        }
    },
    {
        "name": "prepare_notification",
        "description": "Prepare notification content",
        "arguments": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Notification content"
                },
                "recipients": {
                    "type": "string",
                    "description": "Email recipients"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "preparation_status": {
                    "type": "string",
                    "description": "Notification preparation status"
                }
            }
        }
    },
    {
        "name": "check_projector_status",
        "description": "Check the projector status of a specified meeting room",
        "arguments": {
            "type": "object",
            "properties": {
                "roomID": {
                    "type": "string",
                    "description": "Meeting room ID"
                },
                "city": {
                    "type": "string",
                    "description": "City where the meeting room is located"
                },
                "date": {
                    "type": "string",
                    "description": "Date of the check"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Projector check status"
                }
            }
        }
    },
    {
        "name": "get_luggage_collection_info",
        "description": "Get luggage collection information at the destination airport",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "collection_location": {
                    "type": "string",
                    "description": "Luggage collection location"
                },
                "collection_process": {
                    "type": "string",
                    "description": "Luggage collection process"
                }
            }
        }
    },
    {
        "name": "query_late_checkout_policy",
        "description": "Query the late checkout policy of a specified hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "late_checkout_policy": {
                    "type": "string",
                    "description": "Late checkout policy"
                }
            }
        }
    },
    {
        "name": "check_schedule_empty",
        "description": "Check if the user's schedule is empty on a specific date",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "The ID of the user"
                },
                "date": {
                    "type": "string",
                    "description": "The specific date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "empty_status": {
                    "type": "string",
                    "description": "The status of whether the schedule is empty"
                }
            }
        }
    },
    {
        "name": "check_and_change_room_type",
        "description": "Confirm the availability of the specified room type and request a change",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                },
                "room_type": {
                    "type": "string",
                    "description": "New room type"
                },
                "number_of_rooms": {
                    "type": "integer",
                    "description": "Number of new rooms"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "change_status": {
                    "type": "string",
                    "description": "Room type change status"
                }
            }
        }
    },
    {
        "name": "book_flight",
        "description": "Flight booking tool",
        "arguments": {
            "type": "object",
            "properties": {
                "ticket_info": {
                    "description": "Flight information, including flight number, date, time, departure place, and destination",
                    "type": "string"
                },
                "passenger_info": {
                    "description": "Passenger information, including name and ID number",
                    "type": "string"
                },
                "payment_info": {
                    "description": "Payment information, including payment method and amount",
                    "type": "string"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "departure_city": {
                    "type": "string",
                    "description": "Departure city"
                },
                "departure_time": {
                    "type": "string",
                    "description": "Departure time"
                },
                "destination_city": {
                    "type": "string",
                    "description": "Destination city"
                },
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "airline": {
                    "type": "string",
                    "description": "Airline"
                },
                "price": {
                    "type": "number",
                    "description": "Ticket price"
                },
                "seat_preference": {
                    "type": "string",
                    "description": "Seat preference"
                },
                "seat_class": {
                    "type": "string",
                    "description": "Seat class"
                },
                "passenger_name": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "passenger_id": {
                    "type": "string",
                    "description": "Passenger ID number"
                },
                "flight": {
                    "type": "object",
                    "description": "Selected flight"
                },
                "group_size": {
                    "type": "integer",
                    "description": "Group size for travel"
                },
                "amenities": {
                    "type": "array",
                    "description": "List of required amenities",
                    "items": {
                        "type": "string"
                    }
                },
                "flight_details": {
                    "type": "string",
                    "description": "Flight details"
                },
                "number_of_passengers": {
                    "type": "integer",
                    "description": "Number of passengers"
                },
                "passenger_details": {
                    "type": "string",
                    "description": "Passenger details"
                },
                "window_seat": {
                    "type": "boolean",
                    "description": "Whether a window seat is required"
                },
                "mealService": {
                    "description": "Whether meal service is provided",
                    "type": "boolean"
                },
                "mealPreference": {
                    "description": "Meal preference",
                    "type": "string"
                },
                "contactInfo": {
                    "description": "User contact information",
                    "type": "string"
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "cancellation": {
                            "type": "boolean",
                            "description": "Whether a free cancellation option is needed"
                        },
                        "change": {
                            "type": "boolean",
                            "description": "Whether a free change option is needed"
                        }
                    },
                    "required": [
                        "cancellation",
                        "change"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Booking status",
                    "type": "string"
                },
                "booking_details": {
                    "type": "string",
                    "description": "Booking details"
                },
                "e_ticket": {
                    "type": "string",
                    "description": "E-ticket information"
                },
                "booking_reference": {
                    "type": "string",
                    "description": "Booking reference information"
                },
                "ticket_price": {
                    "type": "number",
                    "description": "Ticket price"
                },
                "booking_confirmation": {
                    "type": "object",
                    "description": "Booking confirmation information, including booking status and ticket details"
                },
                "flight_details": {
                    "type": "object",
                    "description": "Flight details"
                },
                "ticket_info": {
                    "description": "Booked ticket information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_rental_confirmation",
        "description": "Get rental car confirmation voucher",
        "arguments": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string",
                    "description": "Rental car company name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Rental car confirmation voucher acquisition status"
                }
            }
        }
    },
    {
        "name": "restart_services",
        "description": "Execute service restart command.",
        "arguments": {
            "type": "object",
            "properties": {
                "service_name": {
                    "type": "string",
                    "description": "The name of the service to be restarted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the service was successfully restarted",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "confirm_renewal",
        "description": "Confirm the renewal operation of the book",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "renewal_confirmation_status": {
                    "description": "Renewal operation confirmation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "fill_price_table",
        "description": "Fill in the price information of the specified product at the specified location",
        "arguments": {
            "type": "object",
            "properties": {
                "productName": {
                    "description": "Product Name",
                    "type": "string"
                },
                "location": {
                    "description": "Location",
                    "type": "string"
                },
                "price": {
                    "description": "Product Price",
                    "type": "number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the filling was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "calculate_remaining_calories",
        "description": "Calculate the remaining caloric intake",
        "arguments": {
            "type": "object",
            "properties": {
                "daily_calorie_intake": {
                    "type": "number",
                    "description": "Daily caloric intake goal"
                },
                "consumed_calories": {
                    "type": "number",
                    "description": "Calories already consumed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "remaining_calories": {
                    "type": "number",
                    "description": "Remaining caloric intake"
                }
            }
        }
    },
    {
        "name": "send_test_notification",
        "description": "Send a test notification to confirm that the notification function is working properly",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Test notification sending result"
                }
            }
        }
    },
    {
        "name": "dosage_and_usage_recommendation",
        "description": "Get the recommended dosage and medication advice for a specific drug",
        "arguments": {
            "type": "object",
            "properties": {
                "medicineName": {
                    "type": "string",
                    "description": "The name of the medicine"
                },
                "manufacturer": {
                    "type": "string",
                    "description": "The manufacturer"
                },
                "function": {
                    "type": "string",
                    "description": "The specific function of the medicine"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "dosage": {
                    "type": "string",
                    "description": "Recommended dosage"
                },
                "usage": {
                    "type": "string",
                    "description": "Medication advice"
                }
            }
        }
    },
    {
        "name": "filter_agenda_records",
        "description": "Filter agenda records within a specified date range",
        "arguments": {
            "type": "object",
            "properties": {
                "start_date": {
                    "type": "string",
                    "description": "Start date"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the filter operation was successful"
                },
                "records": {
                    "type": "array",
                    "description": "Filtered agenda records"
                }
            }
        }
    },
    {
        "name": "check_late_checkout_policy",
        "description": "Confirm the selected hotel's checkout time policy",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "late_checkout_policy": {
                    "type": "object",
                    "description": "Hotel's checkout time policy"
                }
            }
        }
    },
    {
        "name": "flight_payment_processor",
        "description": "Process flight payment procedures",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Selected flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_status": {
                    "type": "string",
                    "description": "Whether the payment was successful"
                }
            }
        }
    },
    {
        "name": "select_suitable_provider",
        "description": "Select a suitable provider from the available service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "provider_list": {
                    "type": "array",
                    "description": "List of available and professional service providers"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_provider": {
                    "type": "object",
                    "description": "The selected service provider"
                }
            }
        }
    },
    {
        "name": "get_weekly_date_ranges",
        "description": "Get the start and end dates of each week from the beginning of this month to the present",
        "arguments": {
            "type": "object",
            "properties": {
                "start_date": {
                    "description": "Start date of the month",
                    "type": "string"
                },
                "end_date": {
                    "description": "End date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "weekly_ranges": {
                    "description": "List of weekly date ranges",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "calculate_annual_yield",
        "description": "Calculate the expected annualized yield of a fixed-rate bond",
        "arguments": {
            "type": "object",
            "properties": {
                "bond_details": {
                    "type": "string",
                    "description": "Detailed information of the government bond"
                },
                "formula": {
                    "type": "string",
                    "description": "Formula for calculating annualized yield"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "annual_yield": {
                    "type": "string",
                    "description": "Expected annualized yield"
                }
            }
        }
    },
    {
        "name": "verify_agenda_ownership",
        "description": "Verify whether a specific agenda belongs to a user",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The id of the agenda to be verified"
                },
                "user_id": {
                    "type": "string",
                    "description": "User id"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ownership_status": {
                    "description": "The status of whether the agenda belongs to the user",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "display_weekly_run_records",
        "description": "Display all running records of the user for this week",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "User account name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "display_status": {
                    "description": "Running records display status",
                    "type": "string"
                },
                "records": {
                    "description": "List of running records for this week",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "confirm_parking_availability",
        "description": "Confirm the availability of parking lots near the restaurants in the list",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant_list": {
                    "type": "array",
                    "description": "List of restaurants for which to confirm parking availability"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "restaurant_list": {
                    "type": "array",
                    "description": "List of restaurants with available parking nearby"
                }
            }
        }
    },
    {
        "name": "check_alarm_accuracy",
        "description": "Check the accuracy of the alarm for the next few days",
        "arguments": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "string",
                    "description": "Number of days to check"
                },
                "expected_time": {
                    "type": "string",
                    "description": "Expected alarm time"
                },
                "expected_frequency": {
                    "type": "string",
                    "description": "Expected alarm frequency"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "accuracy_status": {
                    "type": "string",
                    "description": "Alarm accuracy status"
                }
            }
        }
    },
    {
        "name": "rename_and_move_file",
        "description": "Rename and move file to a new path",
        "arguments": {
            "type": "object",
            "properties": {
                "original_path": {
                    "type": "string",
                    "description": "Original file path"
                },
                "new_path": {
                    "type": "string",
                    "description": "New file path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "confirm_notification_receipt",
        "description": "Confirm that the notification has been received",
        "arguments": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string",
                    "description": "Contact information of the contact person"
                },
                "notification_type": {
                    "type": "string",
                    "description": "Type of notification"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Notification confirmation status"
                }
            }
        }
    },
    {
        "name": "email_ticket",
        "description": "Send electronic ticket to the specified email",
        "arguments": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email address to receive the electronic ticket"
                },
                "ticket_info": {
                    "type": "object",
                    "properties": {
                        "flightNumber": {
                            "type": "string",
                            "description": "Flight number"
                        },
                        "departureDate": {
                            "type": "string",
                            "description": "Departure date"
                        },
                        "departureTime": {
                            "type": "string",
                            "description": "Departure time"
                        },
                        "bookingName": {
                            "type": "string",
                            "description": "Passenger name"
                        },
                        "identityNumber": {
                            "type": "string",
                            "description": "Passenger ID number"
                        }
                    },
                    "required": [
                        "flightNumber",
                        "departureDate",
                        "departureTime",
                        "bookingName",
                        "identityNumber"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "email_status": {
                    "type": "string",
                    "description": "Electronic ticket sending status"
                }
            }
        }
    },
    {
        "name": "set_landing_reminder",
        "description": "Set a reminder for the user before the friend's estimated landing time",
        "arguments": {
            "type": "object",
            "properties": {
                "landing_time": {
                    "type": "string",
                    "description": "Estimated landing time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "type": "string",
                    "description": "Reminder setup status"
                }
            }
        }
    },
    {
        "name": "create_price_record_file",
        "description": "Create a file for recording price information",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "filePath": {
                    "description": "The path of the record file",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_amazon_price",
        "description": "Get the price of a specified product on Amazon platform",
        "arguments": {
            "type": "object",
            "properties": {
                "item_name": {
                    "type": "string",
                    "description": "Product name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Product price"
                }
            }
        }
    },
    {
        "name": "transfer_file_to_device",
        "description": "Transfer files from the computer to the connected device",
        "arguments": {
            "type": "object",
            "properties": {
                "source_path": {
                    "type": "string",
                    "description": "Source file path"
                },
                "device_path": {
                    "type": "string",
                    "description": "Target device path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transfer_status": {
                    "type": "string",
                    "description": "File transfer status"
                }
            }
        }
    },
    {
        "name": "photo_editor",
        "description": "Adjust the size and resolution of photos to fit the diary format",
        "arguments": {
            "type": "object",
            "properties": {
                "photos": {
                    "type": "array",
                    "description": "Links of photos to be adjusted",
                    "items": {
                        "type": "string"
                    }
                },
                "quantity": {
                    "type": "integer",
                    "description": "The number of photos to be processed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "edited_photos": {
                    "type": "array",
                    "description": "Links of the adjusted photos",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "book_dinner",
        "description": "Book a dinner restaurant",
        "arguments": {
            "type": "object",
            "properties": {
                "venue_type": {
                    "type": "string",
                    "description": "Venue type"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Reservation date and time"
                },
                "location": {
                    "type": "string",
                    "description": "Restaurant location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                }
            }
        }
    },
    {
        "name": "inquire_wifi_strength",
        "description": "Inquire about the hotel's Wi-Fi signal strength",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "wifi_strength": {
                    "type": "string",
                    "description": "Wi-Fi signal strength"
                }
            }
        }
    },
    {
        "name": "clear_schedule_info_in_emails",
        "description": "Clear schedule information in emails",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the clear operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "check_luggage_policy",
        "description": "Query the luggage allowance policy for a specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departure_time": {
                    "type": "string",
                    "description": "Departure time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "policy_status": {
                    "type": "string",
                    "description": "Checked luggage policy status"
                },
                "allowed_weight": {
                    "type": "integer",
                    "description": "Maximum allowed weight"
                },
                "policy_details": {
                    "type": "string",
                    "description": "Detailed information of the checked luggage policy"
                }
            }
        }
    },
    {
        "name": "check_file_in_use",
        "description": "Check if the specified file is occupied by other programs",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "in_use": {
                    "description": "Whether the file is in use",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "inquire_room_orientation",
        "description": "Inquire whether the hotel room orientation offers a city view",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel identifier ID"
                },
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "orientation_status": {
                    "type": "string",
                    "description": "Room orientation status"
                }
            }
        }
    },
    {
        "name": "flight_departure_time",
        "description": "Query the specific departure time of the flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "flight_date": {
                    "type": "string",
                    "description": "Flight date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "departure_time": {
                    "type": "string",
                    "description": "Departure time of the flight"
                }
            }
        }
    },
    {
        "name": "check_unread_messages",
        "description": "Retrieve and count the number of unread messages",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "unread_count": {
                    "description": "The number of unread messages",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "assign_responsibility",
        "description": "Assign responsible persons for action items",
        "arguments": {
            "type": "object",
            "properties": {
                "action_items": {
                    "type": "array",
                    "description": "List of action items"
                },
                "team_members": {
                    "type": "array",
                    "description": "List of team members"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "assignments": {
                    "type": "array",
                    "description": "List of assignments for action items and responsible persons"
                }
            }
        }
    },
    {
        "name": "activate_auto_payment_service",
        "description": "Activate the automatic payment service and set the payment amount",
        "arguments": {
            "type": "object",
            "properties": {
                "paymentAmount": {
                    "description": "Payment amount",
                    "type": "string"
                },
                "paymentAccount": {
                    "description": "Payment account",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "activation_status": {
                    "description": "Automatic payment service activation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "list_available_books",
        "description": "List available books under specified category and filter conditions",
        "arguments": {
            "type": "object",
            "properties": {
                "book_category": {
                    "type": "string",
                    "description": "Book category"
                },
                "filter_condition": {
                    "type": "string",
                    "description": "Filter condition"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "books_list": {
                    "type": "array",
                    "description": "List of books that meet the criteria"
                }
            }
        }
    },
    {
        "name": "sms_notification_check",
        "description": "Check if transaction SMS notification is received",
        "arguments": {
            "type": "object",
            "properties": {
                "phone_number": {
                    "type": "string",
                    "description": "Phone number"
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "SMS notification status"
                }
            }
        }
    },
    {
        "name": "network_security_scan",
        "description": "Perform network security scanning and generate report",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "scan_status": {
                    "description": "Whether the scan was successfully completed",
                    "type": "string"
                },
                "scan_report": {
                    "description": "Network security scan report",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "extra_luggage_query",
        "description": "Query flights offering extra luggage allowance",
        "arguments": {
            "type": "object",
            "properties": {
                "departureCity": {
                    "type": "string",
                    "description": "Departure city"
                },
                "arrivalCity": {
                    "type": "string",
                    "description": "Arrival city"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "flights_with_extra_luggage": {
                    "type": "array",
                    "description": "List of flights offering extra luggage allowance"
                }
            }
        }
    },
    {
        "name": "combine_orders",
        "description": "Combine multiple orders into one order",
        "arguments": {
            "type": "object",
            "properties": {
                "dish_orders": {
                    "type": "array",
                    "description": "List of dish order IDs",
                    "items": {
                        "type": "integer"
                    }
                },
                "table_id": {
                    "type": "integer",
                    "description": "Table ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "combined_order_id": {
                    "type": "integer",
                    "description": "ID of the combined order"
                }
            }
        }
    },
    {
        "name": "filter_tour_groups_with_attractions",
        "description": "Filter out tour groups that include all must-visit attractions",
        "arguments": {
            "type": "object",
            "properties": {
                "tour_groups": {
                    "type": "array",
                    "description": "List of tour groups to be filtered"
                },
                "attractions": {
                    "type": "string",
                    "description": "List of required attractions, separated by commas"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_tour_groups": {
                    "type": "array",
                    "description": "List of filtered tour groups"
                }
            }
        }
    },
    {
        "name": "check_provider_availability_and_reviews",
        "description": "Check the reviews and availability of maintenance service providers",
        "arguments": {
            "type": "object",
            "properties": {
                "provider_list": {
                    "type": "array",
                    "description": "List of service providers"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_provider_list": {
                    "description": "Filtered list of service providers",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "write_itinerary_document",
        "description": "Write itinerary planning document",
        "arguments": {
            "type": "object",
            "properties": {
                "itinerary": {
                    "type": "string",
                    "description": "Planned daily itinerary"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "itinerary_document": {
                    "type": "string",
                    "description": "Itinerary planning document"
                }
            }
        }
    },
    {
        "name": "insert_text",
        "description": "Insert text at a specified position in the file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path where the text will be inserted"
                },
                "text": {
                    "type": "string",
                    "description": "The text to insert"
                },
                "position": {
                    "type": "string",
                    "description": "The position where the text will be inserted"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the insert operation was successful"
                }
            }
        }
    },
    {
        "name": "library_book_search",
        "description": "Search for the availability of specific books in the library database of a designated area",
        "arguments": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Book title"
                },
                "region": {
                    "type": "string",
                    "description": "User's location area"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether the book is available"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the book in the library"
                }
            }
        }
    },
    {
        "name": "check_refund_penalty",
        "description": "Check if there is a refund or penalty after canceling the flight ticket",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "refund_amount": {
                    "type": "number",
                    "description": "Refund amount"
                },
                "penalty_amount": {
                    "type": "number",
                    "description": "Penalty amount"
                }
            }
        }
    },
    {
        "name": "get_price_information",
        "description": "Get the price information of a specific product",
        "arguments": {
            "type": "object",
            "properties": {
                "product_name": {
                    "type": "string",
                    "description": "The name of the product to query the price for"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price_status": {
                    "description": "Whether the price information was successfully retrieved",
                    "type": "string"
                },
                "price": {
                    "description": "The price of the product",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "query_citation_count",
        "description": "Query the citation count of a specific paper",
        "arguments": {
            "type": "object",
            "properties": {
                "paper_title": {
                    "type": "string",
                    "description": "Paper title"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "citation_count": {
                    "type": "integer",
                    "description": "Citation count of the paper"
                }
            }
        }
    },
    {
        "name": "check_login_today",
        "description": "Check the account's login status for today",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "date": {
                    "type": "string",
                    "description": "Date of inquiry"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_records": {
                    "type": "array",
                    "description": "Login records for today"
                }
            }
        }
    },
    {
        "name": "sync_meeting_change_to_assistant",
        "description": "Synchronize the changes of meeting time to the assistant's schedule",
        "arguments": {
            "type": "object",
            "properties": {
                "assistant_user_id": {
                    "type": "string",
                    "description": "Assistant's user ID"
                },
                "meeting_name": {
                    "type": "string",
                    "description": "Meeting name"
                },
                "new_start_time": {
                    "type": "string",
                    "description": "New start time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "sync_status": {
                    "description": "Synchronization update status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "add_songs_to_playlist",
        "description": "Add specified songs to the user's music platform playlist",
        "arguments": {
            "type": "object",
            "properties": {
                "platform": {
                    "type": "string",
                    "description": "The user's music platform"
                },
                "songs": {
                    "type": "array",
                    "description": "List of songs to be added to the playlist",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "add_status": {
                    "type": "string",
                    "description": "The status of the songs added to the playlist"
                }
            }
        }
    },
    {
        "name": "verify_contact_information_updated",
        "description": "Verify whether contact information has been updated",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "description": "Whether contact information has been updated",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "get_restaurant_service_availability",
        "description": "Check if the restaurant offers reservation service",
        "arguments": {
            "type": "object",
            "properties": {
                "region": {
                    "type": "string",
                    "description": "The region where the user is located"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_available": {
                    "type": "boolean",
                    "description": "Whether the restaurant offers reservation service"
                }
            }
        }
    },
    {
        "name": "confirm_service_details",
        "description": "Confirm the availability of on-site service and estimated cost for the repair service",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Repair request number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "home_service_available": {
                    "type": "boolean",
                    "description": "Whether on-site service is provided"
                },
                "estimated_cost": {
                    "type": "string",
                    "description": "Estimated cost"
                }
            }
        }
    },
    {
        "name": "get_price_for_all_room_types",
        "description": "Get the price information for all room types of the specified hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "room_type_prices": {
                    "type": "array",
                    "description": "Price information for each room type"
                }
            }
        }
    },
    {
        "name": "ensure_contact_before_service",
        "description": "Ensure the service provider contacts the user for confirmation before service",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                },
                "contactInformation": {
                    "type": "string",
                    "description": "User contact information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contact_confirmation_status": {
                    "type": "string",
                    "description": "Contact confirmation status"
                }
            }
        }
    },
    {
        "name": "verify_repair_provider",
        "description": "Retrieve and verify the legal qualifications of the repair service provider",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "type": "string",
                    "description": "Qualification verification status of the service provider"
                },
                "provider_info": {
                    "type": "object",
                    "properties": {
                        "provider_name": {
                            "type": "string",
                            "description": "Name of the service provider"
                        },
                        "qualification_proof": {
                            "type": "string",
                            "description": "Proof of qualification"
                        }
                    }
                }
            }
        }
    },
    {
        "name": "check_network_connection",
        "description": "Check network connection status",
        "arguments": {
            "type": "object",
            "properties": {
                "roomID": {
                    "type": "string",
                    "description": "Conference room ID"
                },
                "date": {
                    "type": "string",
                    "description": "Check date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "connection_status": {
                    "description": "Network connection status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "confirm_projector_reservation",
        "description": "Confirm that the projector has been reserved for a specific meeting",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_room": {
                    "type": "string",
                    "description": "Meeting room number"
                },
                "date": {
                    "type": "string",
                    "description": "Date"
                },
                "time": {
                    "type": "string",
                    "description": "Time slot"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_status": {
                    "type": "string",
                    "description": "Projector reservation status"
                }
            }
        }
    },
    {
        "name": "extend_borrowing_period",
        "description": "Extend the borrowing period of a specific book",
        "arguments": {
            "type": "object",
            "properties": {
                "book_name": {
                    "type": "string",
                    "description": "The name of the book for which to extend the borrowing period"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "extension_status": {
                    "type": "string",
                    "description": "Whether the extension of borrowing was successful"
                }
            }
        }
    },
    {
        "name": "check_refund_amount_and_time",
        "description": "Check refund amount and arrival time",
        "arguments": {
            "type": "object",
            "properties": {
                "ticketID": {
                    "type": "string",
                    "description": "Train ticket number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "refund_amount": {
                    "type": "string",
                    "description": "Refund amount"
                },
                "arrival_time": {
                    "type": "string",
                    "description": "Arrival time"
                }
            }
        }
    },
    {
        "name": "create_data_file",
        "description": "Create a file for saving data",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "file_path": {
                    "description": "The path of the file created",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "store_backup",
        "description": "Store the backup file at the specified location",
        "arguments": {
            "type": "object",
            "properties": {
                "backup_id": {
                    "type": "string",
                    "description": "The ID of the backup"
                },
                "storage_location": {
                    "type": "string",
                    "description": "The geographical location of the backup storage"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the backup was successfully stored",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "refund_inquiry",
        "description": "Inquire about the refund policy and amount after canceling a flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "The flight number for which to inquire about the refund"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "refund_status": {
                    "description": "Refund status",
                    "type": "string"
                },
                "refund_amount": {
                    "description": "Refund amount",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_arrival_time",
        "description": "Send the estimated arrival time of the technician to the user",
        "arguments": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string",
                    "description": "User contact information"
                },
                "arrival_time": {
                    "type": "string",
                    "description": "Estimated arrival time of the technician"
                },
                "method": {
                    "type": "string",
                    "description": "Notification method, such as SMS or email"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Send status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "check_adjacent_seats",
        "description": "Check if the seats of two train tickets are adjacent",
        "arguments": {
            "type": "object",
            "properties": {
                "ticketID1": {
                    "type": "string",
                    "description": "The ID of the first train ticket"
                },
                "ticketID2": {
                    "type": "string",
                    "description": "The ID of the second train ticket"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "adjacent_status": {
                    "type": "string",
                    "description": "The status of whether the seats are adjacent"
                }
            }
        }
    },
    {
        "name": "link_alarm_to_dnd_end",
        "description": "Link the alarm to the end of the Do Not Disturb mode on the phone, so that the alarm is activated immediately after the Do Not Disturb mode ends",
        "arguments": {
            "type": "object",
            "properties": {
                "alarm_time": {
                    "type": "string",
                    "description": "Alarm time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "link_status": {
                    "type": "string",
                    "description": "The link status between the alarm and the end event of Do Not Disturb mode"
                }
            }
        }
    },
    {
        "name": "update_participant_schedule",
        "description": "Update the schedule of the meeting participant",
        "arguments": {
            "type": "object",
            "properties": {
                "participant_name": {
                    "type": "string",
                    "description": "The name of the participant whose schedule needs to be updated"
                },
                "meeting_id": {
                    "type": "string",
                    "description": "The id of the related meeting"
                },
                "new_start_time": {
                    "type": "string",
                    "description": "The new planned start time of the meeting"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "type": "string",
                    "description": "The status of whether the participant's schedule was successfully updated"
                }
            }
        }
    },
    {
        "name": "provide_feedback_form_at_meeting",
        "description": "Provide customer feedback form at the end of the meeting",
        "arguments": {
            "type": "object",
            "properties": {
                "cafe_id": {
                    "type": "string",
                    "description": "Cafe ID"
                },
                "document_id": {
                    "type": "string",
                    "description": "Document ID"
                },
                "meeting_end_time": {
                    "type": "string",
                    "description": "Meeting end time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "provision_status": {
                    "description": "Feedback form provision status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "create_directory",
        "description": "Create a new directory",
        "arguments": {
            "type": "object",
            "properties": {
                "directory_path": {
                    "type": "string",
                    "description": "The path of the directory to create"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the directory was created successfully"
                }
            }
        }
    },
    {
        "name": "verify_file_last_lines",
        "description": "Verify if the last few lines of the file contain specified content",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                },
                "line_count": {
                    "type": "integer",
                    "description": "Number of last lines to verify"
                },
                "expected_content": {
                    "type": "array",
                    "description": "List of expected content to include",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the verification is successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "search_morning_meetings",
        "description": "Search for all the user's morning meeting schedules on a specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "description": "The user's id"
                },
                "day": {
                    "type": "string",
                    "description": "The specified date, such as 'next Monday'"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the search was successful",
                    "type": "string"
                },
                "meetings": {
                    "description": "List of morning meeting schedules",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "historical_currency_exchange_rate",
        "description": "Retrieve historical exchange rate data for a specified currency pair",
        "arguments": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "description": "The currency pair for which to retrieve historical exchange rates"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "historical_data": {
                    "type": "array",
                    "description": "Historical exchange rate data"
                }
            }
        }
    },
    {
        "name": "fill_comparison_chart_with_data",
        "description": "Fill the comparison chart with room types' prices and facilities information",
        "arguments": {
            "type": "object",
            "properties": {
                "chart_id": {
                    "type": "string",
                    "description": "The unique identifier of the comparison chart"
                },
                "room_type_prices": {
                    "type": "array",
                    "description": "Price information for each room type"
                },
                "room_type_facilities": {
                    "type": "array",
                    "description": "Facilities information for each room type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "fill_status": {
                    "type": "string",
                    "description": "Fill status"
                }
            }
        }
    },
    {
        "name": "write_review_with_keywords",
        "description": "Write a five-star overall service quality review based on keywords",
        "arguments": {
            "type": "object",
            "properties": {
                "keywords": {
                    "type": "string",
                    "description": "Positive review keywords provided by the user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "review_text": {
                    "description": "The written review text",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "verify_document_completeness",
        "description": "Verify the completeness of document information",
        "arguments": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "string",
                    "description": "The document to be checked"
                },
                "background_report": {
                    "type": "string",
                    "description": "Background investigation report"
                },
                "attendance_sheet": {
                    "type": "string",
                    "description": "Attendance record sheet"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "completeness_status": {
                    "description": "Whether the document information is complete",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "activate_two_factor_authentication",
        "description": "Activate the two-factor authentication process for the account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "activation_status": {
                    "description": "Two-factor authentication activation status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "adjust_alarms_to_avoid_interference",
        "description": "Adjust alarms within the time period to avoid interference with the new rest time",
        "arguments": {
            "type": "object",
            "properties": {
                "alarms_info": {
                    "type": "array",
                    "description": "Information of the alarms that need to be adjusted"
                },
                "new_start_time": {
                    "type": "string",
                    "description": "Start time of the new rest period"
                },
                "new_end_time": {
                    "type": "string",
                    "description": "End time of the new rest period"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "adjustment_info": {
                    "type": "array",
                    "description": "Results of the alarm adjustment"
                }
            }
        }
    },
    {
        "name": "query_flight_departure_info",
        "description": "Query the latest departure time for a specified flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "departure_time": {
                    "type": "string",
                    "description": "Latest departure time"
                }
            }
        }
    },
    {
        "name": "select_different_ringtone",
        "description": "Select a ringtone different from the existing alarm",
        "arguments": {
            "type": "object",
            "properties": {
                "original_time": {
                    "type": "string",
                    "description": "Original alarm time"
                },
                "new_time": {
                    "type": "string",
                    "description": "New alarm time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "ringtone_status": {
                    "type": "string",
                    "description": "Ringtone selection result"
                }
            }
        }
    },
    {
        "name": "check_transaction_merchant_relation",
        "description": "Verify whether a specific transaction is related to a designated merchant",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                },
                "merchant_id": {
                    "type": "string",
                    "description": "Merchant ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "relation_status": {
                    "type": "string",
                    "description": "Relationship verification status"
                }
            }
        }
    },
    {
        "name": "draft_meeting_agenda",
        "description": "Draft Meeting Agenda Outline",
        "arguments": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Agenda Title"
                },
                "agenda_items": {
                    "type": "array",
                    "description": "Agenda Items",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "draft_status": {
                    "type": "string",
                    "description": "Draft Status"
                }
            }
        }
    },
    {
        "name": "service_provider_reminder",
        "description": "Remind the service provider to ensure that the maintenance personnel arrive on time",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                },
                "reminderTime": {
                    "type": "string",
                    "description": "Reminder time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_status": {
                    "description": "Reminder status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "calculate_rental_cost",
        "description": "Calculate the total cost of camera rental",
        "arguments": {
            "type": "object",
            "properties": {
                "daily_cost": {
                    "type": "number",
                    "description": "Daily rental cost of the camera"
                },
                "rental_days": {
                    "type": "integer",
                    "description": "Number of rental days"
                },
                "additional_fees": {
                    "type": "number",
                    "description": "Additional fees, such as deposit, etc."
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "total_cost": {
                    "type": "number",
                    "description": "Total cost of the rental"
                }
            }
        }
    },
    {
        "name": "get_facilities_for_all_room_types",
        "description": "Get facility information for all room types of a specified hotel",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel Name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "room_type_facilities": {
                    "type": "array",
                    "description": "Facility information for each room type"
                }
            }
        }
    },
    {
        "name": "print_document",
        "description": "Print the specified document",
        "arguments": {
            "type": "object",
            "properties": {
                "document_id": {
                    "type": "string",
                    "description": "Document ID"
                },
                "settings": {
                    "type": "string",
                    "description": "Print settings"
                },
                "document_path": {
                    "type": "string",
                    "description": "Document path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "print_status": {
                    "description": "Print status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "select_shortest_travel_time_train",
        "description": "Select the train with the shortest travel time from the queried timetable",
        "arguments": {
            "type": "object",
            "properties": {
                "time_table": {
                    "type": "string",
                    "description": "Train timetable"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "shortest_travel_time_train": {
                    "type": "string",
                    "description": "Train with the shortest travel time"
                }
            }
        }
    },
    {
        "name": "train_arrival_time_query",
        "description": "Query the estimated arrival time of a specified train",
        "arguments": {
            "type": "object",
            "properties": {
                "trainID": {
                    "type": "string",
                    "description": "The train number for which the estimated arrival time is to be queried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "arrival_time": {
                    "type": "string",
                    "description": "The estimated arrival time of the train"
                }
            }
        }
    },
    {
        "name": "provide_appointment_confirmation_copy",
        "description": "Provide a copy of the appointment confirmation to the user",
        "arguments": {
            "type": "object",
            "properties": {
                "user_contact": {
                    "type": "string",
                    "description": "User contact information"
                },
                "confirmation_copy": {
                    "type": "string",
                    "description": "Appointment confirmation copy"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "provide_status": {
                    "type": "string",
                    "description": "Provision status"
                }
            }
        }
    },
    {
        "name": "get_current_date",
        "description": "Get the current date",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "current_date": {
                    "description": "Current date",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "stop_reminder",
        "description": "Set reminder to stop automatically",
        "arguments": {
            "type": "object",
            "properties": {
                "reminder_id": {
                    "type": "string",
                    "description": "The ID of the reminder"
                },
                "stop_date": {
                    "type": "string",
                    "description": "The date when the reminder stops automatically"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the reminder was successfully set to stop automatically",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "dark_mode_usage_rate",
        "description": "Calculate the user's dark mode usage rate",
        "arguments": {
            "type": "object",
            "properties": {
                "frequency": {
                    "type": "number",
                    "description": "The frequency at which the user enables dark mode"
                },
                "duration": {
                    "type": "number",
                    "description": "The duration of time the user has dark mode enabled, measured in hours"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "usage_rate": {
                    "type": "number",
                    "description": "Dark mode usage rate"
                }
            }
        }
    },
    {
        "name": "setup_two_factor",
        "description": "Set up two-factor authentication binding method for the account",
        "arguments": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string",
                    "description": "Binding method, such as mobile phone or email"
                },
                "account_id": {
                    "type": "integer",
                    "description": "Account ID for which to set up two-factor authentication"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "setup_status": {
                    "type": "string",
                    "description": "Two-factor authentication setup status"
                }
            }
        }
    },
    {
        "name": "select_emergency_exit_seat",
        "description": "Book a seat next to the emergency exit for passengers",
        "arguments": {
            "type": "object",
            "properties": {
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selection_status": {
                    "description": "Seat selection status",
                    "type": "string"
                },
                "seat_number": {
                    "type": "string",
                    "description": "Reserved seat number"
                }
            }
        }
    },
    {
        "name": "make_phone_call",
        "description": "Make a phone call to a specified contact number",
        "arguments": {
            "type": "object",
            "properties": {
                "contact_number": {
                    "type": "string",
                    "description": "The contact phone number to call"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "call_status": {
                    "type": "string",
                    "description": "The status of whether the phone call was successful"
                }
            }
        }
    },
    {
        "name": "data_comparison",
        "description": "Compare and analyze data",
        "arguments": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "description": "The dataset to be compared"
                },
                "comparison_type": {
                    "type": "string",
                    "description": "Comparison type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "comparison_result": {
                    "type": "string",
                    "description": "Data comparison result"
                }
            }
        }
    },
    {
        "name": "filter_headlines_with_keyword",
        "description": "Filter news headlines containing specific keywords",
        "arguments": {
            "type": "object",
            "properties": {
                "headlines": {
                    "type": "array",
                    "description": "List of news headlines"
                },
                "keyword": {
                    "type": "string",
                    "description": "Keyword for filtering"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_headlines": {
                    "type": "array",
                    "description": "List of filtered news headlines"
                }
            }
        }
    },
    {
        "name": "get_special_menu",
        "description": "Get today's special menu of the restaurant",
        "arguments": {
            "type": "object",
            "properties": {
                "restaurant": {
                    "type": "string",
                    "description": "Selected restaurant"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "menu": {
                    "type": "string",
                    "description": "Today's special recommended menu"
                }
            }
        }
    },
    {
        "name": "check_technician_availability",
        "description": "Check if the technician is available at a specific time",
        "arguments": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "description": "Appointment time"
                },
                "address": {
                    "type": "string",
                    "description": "Service address"
                },
                "date": {
                    "type": "string",
                    "description": "Appointment date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability_status": {
                    "description": "Whether the technician is available",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "calculate_travel_days",
        "description": "Calculate the number of travel days supported by the exchanged amount and daily budget",
        "arguments": {
            "type": "object",
            "properties": {
                "exchangedAmount": {
                    "type": "number",
                    "description": "The amount after exchange"
                },
                "daily_budget": {
                    "type": "string",
                    "description": "The daily budget amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "travel_days": {
                    "type": "integer",
                    "description": "The number of travel days supported"
                }
            }
        }
    },
    {
        "name": "write_report",
        "description": "Write report content into the document",
        "arguments": {
            "type": "object",
            "properties": {
                "china_male_population": {
                    "description": "China's male population in 2022",
                    "type": "integer"
                },
                "china_female_population": {
                    "description": "China's female population in 2022",
                    "type": "integer"
                },
                "usa_population": {
                    "description": "Total population of the USA in 2022",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "write_status": {
                    "description": "Status of the report content writing",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "get_login_records",
        "description": "Get the recent login records of an account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                },
                "account_type": {
                    "type": "string",
                    "description": "Account Type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "login_records": {
                    "description": "Login records of the account",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "create_nutrition_intake_table",
        "description": "Create Nutrition Intake Table",
        "arguments": {
            "type": "object",
            "properties": {
                "protein_intake": {
                    "description": "Daily Protein Intake",
                    "type": "array"
                },
                "fat_intake": {
                    "description": "Daily Fat Intake",
                    "type": "array"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "table": {
                    "description": "Nutrition Intake Table",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "save_updated_contact_information",
        "description": "Save updated contact information",
        "arguments": {
            "type": "object",
            "properties": {
                "new_phone_number": {
                    "description": "New phone number",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "description": "Contact information update status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "correct_spelling",
        "description": "Correct spelling errors in a specified document",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The path of the document to correct spelling"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the spelling correction was successful"
                }
            }
        }
    },
    {
        "name": "invite_performers",
        "description": "Invite performers and confirm their schedules",
        "arguments": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string",
                    "description": "Type of event"
                },
                "date": {
                    "type": "string",
                    "description": "Date of the event",
                    "format": "date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "invitation_status": {
                    "type": "string",
                    "description": "Status of the performer's invitation"
                }
            }
        }
    },
    {
        "name": "check_new_messages",
        "description": "Check if there are new messages on social platforms",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "new_messages": {
                    "description": "The number of new messages",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "luggage_fee_inquiry",
        "description": "Inquire about the baggage check-in fee for a specified flight and luggage weight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "luggage_weight": {
                    "type": "string",
                    "description": "Luggage weight"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "fee": {
                    "type": "string",
                    "description": "Check-in fee"
                }
            }
        }
    },
    {
        "name": "internal_communication_send",
        "description": "Internal communication system message sending tool",
        "arguments": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Content of the message to be sent"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "boolean",
                    "description": "Status of whether the message was successfully sent"
                }
            }
        }
    },
    {
        "name": "complete_two_factor_authentication",
        "description": "Complete the steps for two-factor authentication",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "authentication_status": {
                    "type": "string",
                    "description": "The status of whether two-factor authentication is completed"
                }
            }
        }
    },
    {
        "name": "display_last_two_hours_track",
        "description": "Accurately mark and highlight the vehicle's driving track of the last two hours on the map",
        "arguments": {
            "type": "object",
            "properties": {
                "location_history": {
                    "type": "array",
                    "description": "Vehicle's location tracking history data"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time for filtering the track"
                },
                "end_time": {
                    "type": "string",
                    "description": "End time for filtering the track"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "display_status": {
                    "type": "string",
                    "description": "Track display status"
                }
            }
        }
    },
    {
        "name": "save_and_export_report",
        "description": "Save and export the report document",
        "arguments": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "object",
                    "description": "The report document object to save and export"
                },
                "file_name": {
                    "type": "string",
                    "description": "The name of the exported file"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the operation was successful"
                },
                "exported_file_path": {
                    "type": "string",
                    "description": "The file path of the exported document"
                }
            }
        }
    },
    {
        "name": "create_invitation_template",
        "description": "Create electronic invitation template",
        "arguments": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string",
                    "description": "Format of the invitation"
                },
                "content": {
                    "type": "string",
                    "description": "Content of the invitation"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string",
                    "description": "Created invitation template"
                }
            }
        }
    },
    {
        "name": "query_pm25",
        "description": "Query the PM2.5 index for a specific city on a specific date",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The city for which to query the PM2.5 index"
                },
                "date": {
                    "type": "string",
                    "description": "The date for which to query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "pm25_index": {
                    "type": "string",
                    "description": "PM2.5 index"
                }
            }
        }
    },
    {
        "name": "create_weekly_reminder",
        "description": "Create a weekly recurring reminder",
        "arguments": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The title of the reminder"
                },
                "time": {
                    "type": "string",
                    "description": "The time of the reminder, in the format 'YYYY-MM-DDTHH:MM:SSZ'"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reminder_creation_status": {
                    "type": "boolean",
                    "description": "Whether the reminder was created successfully"
                }
            }
        }
    },
    {
        "name": "format_date",
        "description": "Convert the date and time description provided by the user into a date and time string in a specific format",
        "arguments": {
            "type": "object",
            "properties": {
                "natural_language_date": {
                    "type": "string",
                    "description": "Date and time described in natural language"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "formatted_date": {
                    "type": "string",
                    "description": "Formatted date and time string"
                }
            }
        }
    },
    {
        "name": "check_last_login_info",
        "description": "Check the last login location and time of the account",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "last_login_info": {
                    "description": "Information of the last login location and time",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_book_details",
        "description": "Check the price and stock information of a specified book",
        "arguments": {
            "type": "object",
            "properties": {
                "book_id": {
                    "type": "string",
                    "description": "The ID of the selected book"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "description": "Book price",
                    "type": "number"
                },
                "stock": {
                    "description": "Book inventory",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "remove_agenda_records",
        "description": "Remove specified agenda records from the schedule management system",
        "arguments": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "description": "The agenda records to be removed"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether the removal operation was successful"
                }
            }
        }
    },
    {
        "name": "query_available_seats",
        "description": "Query available seats for a specified flight, and filter out seats that are by the window and near the emergency exit",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "available_seats": {
                    "type": "array",
                    "description": "List of available seats that meet the criteria"
                }
            }
        }
    },
    {
        "name": "extract_discussion",
        "description": "Extract specific topic discussions from meeting materials",
        "arguments": {
            "type": "object",
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Discussion topic"
                },
                "meeting_name": {
                    "type": "string",
                    "description": "Meeting name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "discussion_content": {
                    "type": "string",
                    "description": "Extracted discussion content"
                }
            }
        }
    },
    {
        "name": "find_all_occurrences",
        "description": "Find all occurrences of the specified text in a file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path to search"
                },
                "search": {
                    "type": "string",
                    "description": "The text to find"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "occurrences": {
                    "type": "array",
                    "description": "All found text occurrence positions"
                }
            }
        }
    },
    {
        "name": "filter_failed_logins",
        "description": "Filter out failed login attempts from login records",
        "arguments": {
            "type": "object",
            "properties": {
                "login_records": {
                    "type": "string",
                    "description": "Login records"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "failed_logins": {
                    "type": "string",
                    "description": "Failed login attempts"
                }
            }
        }
    },
    {
        "name": "search_unread_emails",
        "description": "Search and filter unread emails from a specific number",
        "arguments": {
            "type": "object",
            "properties": {
                "sender_id": {
                    "type": "string",
                    "description": "Sender's number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "unread_emails_info": {
                    "description": "Information of unread emails",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "book_tea_service",
        "description": "Reserve selected afternoon tea service",
        "arguments": {
            "type": "object",
            "properties": {
                "cafe_id": {
                    "type": "string",
                    "description": "Cafe ID"
                },
                "service_id": {
                    "type": "string",
                    "description": "Afternoon Tea Service ID"
                },
                "time": {
                    "type": "string",
                    "description": "Reservation Time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Booking Status of the Service",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "visa_free_countries_query",
        "description": "Query visa-free countries for a specified passport number and nationality",
        "arguments": {
            "type": "object",
            "properties": {
                "passportNumber": {
                    "type": "string",
                    "description": "Passport number"
                },
                "nationality": {
                    "type": "string",
                    "description": "Nationality"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "visa_free_countries": {
                    "type": "array",
                    "description": "List of visa-free countries"
                }
            }
        }
    },
    {
        "name": "navigate_to_account_overview",
        "description": "Navigate to the online banking account overview page",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "navigation_status": {
                    "description": "Whether the navigation to the account overview page was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "event_schedule_query",
        "description": "Query for special event arrangements at a specified location and time",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Event location"
                },
                "dateTime": {
                    "type": "string",
                    "description": "Date and time of the query"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "description": "List of special events scheduled at the specified time and location",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Event name"
                            },
                            "location": {
                                "type": "string",
                                "description": "Event location"
                            },
                            "time": {
                                "type": "string",
                                "description": "Event time"
                            },
                            "description": {
                                "type": "string",
                                "description": "Event description"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "email_schedule_send",
        "description": "Tool for setting up scheduled email sending",
        "arguments": {
            "type": "object",
            "properties": {
                "recipient_list": {
                    "type": "array",
                    "description": "List of recipient email addresses"
                },
                "content": {
                    "type": "string",
                    "description": "Email content"
                },
                "send_time": {
                    "type": "string",
                    "description": "Email sending time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Email sending status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "get_counter_working_hours",
        "description": "Get the working hours of the check-in counter for a specific flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "working_hours": {
                    "type": "string",
                    "description": "Check-in counter working hours"
                }
            }
        }
    },
    {
        "name": "get_market_analysis_report",
        "description": "Get the market analysis report for a specified product",
        "arguments": {
            "type": "object",
            "properties": {
                "product": {
                    "type": "string",
                    "description": "Product name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report": {
                    "type": "string",
                    "description": "Market analysis report"
                }
            }
        }
    },
    {
        "name": "analyze_hotel_reviews",
        "description": "Analyze the room reviews of a specified hotel within a certain time period",
        "arguments": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "string",
                    "description": "Hotel Identifier ID"
                },
                "review_period": {
                    "type": "string",
                    "description": "Review Time Range"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "analysis_outcome": {
                    "type": "string",
                    "description": "Status of whether the reviews are generally positive"
                }
            }
        }
    },
    {
        "name": "compensation_policy_lookup",
        "description": "Lookup the compensation policy of an airline",
        "arguments": {
            "type": "object",
            "properties": {
                "airline": {
                    "type": "string",
                    "description": "Name of the airline"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "Details of the compensation policy"
                }
            }
        }
    },
    {
        "name": "book_economy_class_ticket",
        "description": "Book an economy class flight ticket",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "passenger_info": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Passenger name"
                        },
                        "id_number": {
                            "type": "string",
                            "description": "Passenger ID number"
                        }
                    },
                    "required": [
                        "name",
                        "id_number"
                    ]
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Ticket booking status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "confirm_and_pay_upgrade",
        "description": "Agree to the price difference after the upgrade and proceed with the payment",
        "arguments": {
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                },
                "payment_info": {
                    "type": "string",
                    "description": "Payment information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_status": {
                    "type": "string",
                    "description": "Payment status"
                }
            }
        }
    },
    {
        "name": "ask_route_suggestion",
        "description": "Ask the tour guide for travel route suggestions",
        "arguments": {
            "type": "object",
            "properties": {
                "guide_name": {
                    "type": "string",
                    "description": "The name of the guide"
                },
                "date": {
                    "type": "string",
                    "description": "Travel date",
                    "format": "date-time"
                },
                "location": {
                    "type": "string",
                    "description": "Travel location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "route_suggestion": {
                    "type": "string",
                    "description": "Route suggestions provided by the guide"
                }
            }
        }
    },
    {
        "name": "get_current_currency_price",
        "description": "Get the current market price of a specified currency",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "type": "string",
                    "description": "Currency type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Current currency price"
                }
            }
        }
    },
    {
        "name": "filter_important_notifications",
        "description": "Filter out notifications of important level from all message notifications",
        "arguments": {
            "type": "object",
            "properties": {
                "notifications": {
                    "type": "array",
                    "description": "All message notifications"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "important_notifications": {
                    "description": "Filtered important level notifications",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "send_route_to_email",
        "description": "Send route information to the user's email",
        "arguments": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User email address"
                },
                "route_info": {
                    "type": "string",
                    "description": "Selected route information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Send status"
                }
            }
        }
    },
    {
        "name": "asset_allocation",
        "description": "A tool for determining the asset allocation ratio based on risk preference and expected return rate",
        "arguments": {
            "type": "object",
            "properties": {
                "risk_tolerance": {
                    "type": "string",
                    "description": "Risk tolerance"
                },
                "expected_return_rate": {
                    "type": "string",
                    "description": "Expected annualized return rate"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "allocation": {
                    "type": "object",
                    "properties": {
                        "stocks": {
                            "type": "number",
                            "description": "The allocation percentage of stock assets"
                        },
                        "bonds": {
                            "type": "number",
                            "description": "The allocation percentage of bond assets"
                        },
                        "cash": {
                            "type": "number",
                            "description": "The allocation percentage of cash or equivalents"
                        }
                    },
                    "description": "The asset allocation percentage calculated based on the user's risk preference and expected return rate"
                }
            }
        }
    },
    {
        "name": "design_exercise_plan",
        "description": "Design a personalized weekly exercise plan",
        "arguments": {
            "type": "object",
            "properties": {
                "fitness_level": {
                    "type": "string",
                    "description": "User's fitness level"
                },
                "exercise_preferences": {
                    "type": "string",
                    "description": "User's exercise preferences"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "exercise_plan": {
                    "description": "Designed weekly exercise plan",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "fetch_borrowed_books_list",
        "description": "Retrieve the current user's borrowing list",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "borrowed_books": {
                    "description": "List of currently borrowed books",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "extra_luggage_fee_query",
        "description": "Query the potential fees for extra luggage",
        "arguments": {
            "type": "object",
            "properties": {
                "luggage_count": {
                    "type": "integer",
                    "description": "Number of pieces of luggage carried"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "extra_fee": {
                    "type": "string",
                    "description": "Extra luggage fee"
                }
            }
        }
    },
    {
        "name": "get_ip_address",
        "description": "Get the current IP address",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "ip_address": {
                    "description": "Current IP address",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "notify_user_securely",
        "description": "Notify user information through secure channels",
        "arguments": {
            "type": "object",
            "properties": {
                "account_balance": {
                    "type": "string",
                    "description": "The account balance information that needs to be notified to the user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "description": "The status of whether the notification was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "calculate_bond_interest",
        "description": "Calculate the interest of a specific government bond",
        "arguments": {
            "type": "object",
            "properties": {
                "bond_code": {
                    "type": "string",
                    "description": "Government bond code"
                },
                "investment_amount": {
                    "type": "number",
                    "description": "Investment amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "interest_amount": {
                    "type": "number",
                    "description": "Calculated interest amount"
                },
                "calculation_formula": {
                    "type": "string",
                    "description": "Interest calculation formula"
                },
                "calculation_process": {
                    "type": "string",
                    "description": "Description of the calculation process"
                }
            }
        }
    },
    {
        "name": "select_alarm_tone",
        "description": "Select a ringtone for a specified alarm time",
        "arguments": {
            "type": "object",
            "properties": {
                "alarm_time": {
                    "type": "string",
                    "description": "Alarm set time"
                },
                "tone": {
                    "type": "string",
                    "description": "Selected ringtone"
                },
                "tone_type": {
                    "type": "string",
                    "description": "Type of ringtone, such as gentle, loud, etc"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "tone_selection_info": {
                    "description": "Ringtone selection result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "book_packing_service",
        "description": "Book luggage packing service",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "Packing service location"
                },
                "service_time": {
                    "type": "string",
                    "description": "Packing service time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Packing service booking status",
                    "type": "string"
                },
                "confirmation_details": {
                    "description": "Booking confirmation details",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "direct_luggage_confirmation",
        "description": "Confirm whether the luggage can be delivered directly to the destination",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "luggage_tag_number": {
                    "type": "string",
                    "description": "Luggage tag number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Direct confirmation status"
                },
                "tracking_number": {
                    "type": "string",
                    "description": "Luggage tracking number"
                }
            }
        }
    },
    {
        "name": "famous_works_filter",
        "description": "Filter the famous works of a director",
        "arguments": {
            "type": "object",
            "properties": {
                "director_name": {
                    "type": "string",
                    "description": "Name of the director"
                },
                "minimum_rating": {
                    "type": "number",
                    "description": "Minimum rating"
                },
                "minimum_popularity": {
                    "type": "number",
                    "description": "Minimum popularity"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "famous_works": {
                    "type": "array",
                    "description": "List of famous works",
                    "items": {
                        "type": "object",
                        "properties": {
                            "movie_title": {
                                "type": "string",
                                "description": "Movie title"
                            },
                            "imdb_score": {
                                "type": "number",
                                "description": "IMDB score"
                            },
                            "popularity": {
                                "type": "number",
                                "description": "Popularity"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "security_assessment",
        "description": "Assess the security status of online banking accounts",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "assessment_report": {
                    "description": "Security Assessment Report",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "filter_books_by_authors",
        "description": "Filter books by a list of authors",
        "arguments": {
            "type": "object",
            "properties": {
                "authors_list": {
                    "type": "array",
                    "description": "List of authors"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "filtered_books": {
                    "type": "array",
                    "description": "List of filtered books"
                }
            }
        }
    },
    {
        "name": "select_exit_row_seat",
        "description": "Select the seat next to the emergency exit",
        "arguments": {
            "type": "object",
            "properties": {
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date and time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "seat_selection_status": {
                    "type": "string",
                    "description": "Seat selection status"
                }
            }
        }
    },
    {
        "name": "select_next_weekday_afternoon",
        "description": "Select a time in the afternoon of any weekday next week",
        "arguments": {
            "type": "object",
            "properties": {
                "currentDate": {
                    "type": "string",
                    "description": "The current date, used to calculate the date for the next week"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "newTime": {
                    "type": "string",
                    "description": "A time in the afternoon of any weekday next week"
                }
            }
        }
    },
    {
        "name": "check_agenda_deleted",
        "description": "Check if a specific meeting agenda has been deleted",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The id of the meeting agenda to check"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "deleted": {
                    "description": "Whether the meeting agenda has been deleted",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "get_first_day_of_last_month",
        "description": "Get the date of the first day of last month",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "The date of the first day of last month",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "convert_diary_to_format",
        "description": "Convert diary content to a document in a specified format",
        "arguments": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Diary content"
                },
                "format": {
                    "type": "string",
                    "description": "Document format"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "document": {
                    "description": "Converted document",
                    "type": "string"
                },
                "file_path": {
                    "description": "Path of the converted file",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "calculate_first_weekday_next_month",
        "description": "Calculate the date of the first specified weekday of the next month",
        "arguments": {
            "type": "object",
            "properties": {
                "current_date": {
                    "type": "string",
                    "description": "Current date"
                },
                "weekday": {
                    "type": "string",
                    "description": "The weekday to be calculated"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "first_weekday_next_month": {
                    "type": "string",
                    "description": "The date of the first corresponding weekday of the next month"
                }
            }
        }
    },
    {
        "name": "select_payment_method",
        "description": "Select payment method",
        "arguments": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "integer",
                    "description": "Order ID"
                },
                "payment_methods": {
                    "description": "Available payment methods",
                    "type": "array"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_method": {
                    "description": "Selected payment method",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "verify_hyperlinks",
        "description": "Verify whether all hyperlinks in the document point to the correct headings",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                },
                "title": {
                    "type": "string",
                    "description": "Title"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the hyperlink verification operation was successful",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "grammar_check",
        "description": "Perform grammar check on the document",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "The file path of the document"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the grammar check was successful",
                    "type": "boolean"
                },
                "errors": {
                    "type": "array",
                    "description": "List of grammar errors in the file"
                }
            }
        }
    },
    {
        "name": "login_equipment_check",
        "description": "Login Equipment Check Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "device_id": {
                    "description": "Unique identifier of the device",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "device_status": {
                    "description": "Status of the device",
                    "type": "string"
                },
                "last_login_time": {
                    "description": "Last login time",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}$"
                }
            }
        }
    },
    {
        "name": "send_email_reminder",
        "description": "Used for sending email reminders",
        "arguments": {
            "type": "object",
            "properties": {
                "recipients": {
                    "type": "array",
                    "description": "List of recipient emails",
                    "items": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "subject": {
                    "type": "string",
                    "description": "Email subject"
                },
                "body": {
                    "type": "string",
                    "description": "Email content"
                },
                "send_time": {
                    "type": "string",
                    "description": "Email sending time",
                    "format": "date-time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Email sending status",
                    "type": "boolean"
                }
            }
        }
    },
    {
        "name": "send_schedule_notification",
        "description": "Send schedule notification to specified participants",
        "arguments": {
            "type": "object",
            "properties": {
                "participants_info": {
                    "type": "string",
                    "description": "Contact information of department members"
                },
                "event_name": {
                    "type": "string",
                    "description": "Event name"
                },
                "start_time": {
                    "type": "string",
                    "description": "Start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "End time"
                },
                "location": {
                    "type": "string",
                    "description": "Event location"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "Reminder time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "stock_sell_order",
        "description": "Submit stock sell order",
        "arguments": {
            "type": "object",
            "properties": {
                "stock_code": {
                    "type": "string",
                    "description": "Stock code to sell"
                },
                "sell_quantity": {
                    "type": "integer",
                    "description": "Quantity of stock to sell"
                },
                "min_sell_price": {
                    "type": "number",
                    "description": "Minimum selling price"
                },
                "deadline": {
                    "type": "string",
                    "description": "Transaction deadline"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "order_status": {
                    "type": "string",
                    "description": "Order submission status"
                }
            }
        }
    },
    {
        "name": "room_details_query",
        "description": "Query the price and facilities information of a specific room type",
        "arguments": {
            "type": "object",
            "properties": {
                "room_type": {
                    "type": "string",
                    "description": "Room type"
                },
                "hotel_name": {
                    "type": "string",
                    "description": "Hotel name"
                },
                "location": {
                    "type": "string",
                    "description": "Hotel location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "description": "Room price"
                },
                "facilities": {
                    "type": "array",
                    "description": "Room facilities"
                }
            }
        }
    },
    {
        "name": "check_and_record_recent_transaction",
        "description": "Check and record the complete information of the most recent transaction",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_info": {
                    "description": "Detailed information of the most recent transaction",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "display_current_balance",
        "description": "Display current account balance",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "balance_info": {
                    "description": "Current account balance information",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_auto_sell",
        "description": "Set up foreign exchange auto-sell tool",
        "arguments": {
            "type": "object",
            "properties": {
                "currency_type": {
                    "type": "string",
                    "description": "Currency type"
                },
                "target_price": {
                    "type": "number",
                    "description": "Target sell price"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "auto_sell_status": {
                    "type": "string",
                    "description": "Auto-sell setup status"
                }
            }
        }
    },
    {
        "name": "accounting_tool",
        "description": "Accounting software that can record various financial activities such as income, expenses, transfers, etc., and automatically calculate the account balance",
        "arguments": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Which account the accounting activity occurred, such as bank account, cash account, etc.",
                    "example": "bank account"
                },
                "transactionType": {
                    "type": "string",
                    "description": "The type of accounting activity, can only be 'income' (income), 'expense' (expense) or 'transfer' (transfer)",
                    "enum": [
                        "income",
                        "expense",
                        "transfer"
                    ],
                    "example": "income"
                },
                "amount": {
                    "type": "number",
                    "description": "The amount of the accounting activity, must be greater than 0",
                    "minimum": 0.01,
                    "example": 100
                },
                "date": {
                    "type": "string",
                    "description": "The date of the accounting activity, format as 'yyyy-mm-dd'",
                    "format": "date",
                    "example": "2021-12-31"
                },
                "category": {
                    "type": "string",
                    "description": "The category of the accounting activity, for income it could be 'salary', 'bonus', etc., for expenses it could be 'dining', 'shopping', etc., transfer ignores this field",
                    "example": "salary"
                },
                "note": {
                    "type": "string",
                    "description": "Notes on the accounting activity, for expenses it can record what items were purchased, for transfers it can record the target account, etc.",
                    "example": "purchased a new smartphone"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "description": "The account balance after accounting"
                },
                "transactionId": {
                    "type": "string",
                    "description": "The unique identifier of the accounting activity"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the accounting operation, such as 'successful', 'failed', etc."
                }
            }
        }
    },
    {
        "name": "get_attendees_list",
        "description": "Get the list of attendees",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_name": {
                    "type": "string",
                    "description": "Meeting name"
                },
                "date": {
                    "type": "string",
                    "description": "Meeting date"
                },
                "start_time": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Meeting end time"
                },
                "room_number": {
                    "type": "string",
                    "description": "Meeting room number"
                },
                "city": {
                    "type": "string",
                    "description": "City where the meeting room is located"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "attendee_list": {
                    "type": "array",
                    "description": "List of attendees and their email addresses"
                }
            }
        }
    },
    {
        "name": "destroy_all_sessions",
        "description": "Log out and destroy all current sessions of the user",
        "arguments": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Username"
                },
                "password": {
                    "type": "string",
                    "description": "User password"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean",
                    "description": "Whether all sessions were successfully destroyed"
                }
            }
        }
    },
    {
        "name": "generate_strong_password",
        "description": "Generate a strong password",
        "arguments": {
            "type": "object",
            "properties": {
                "min_length": {
                    "type": "integer",
                    "description": "Minimum password length"
                },
                "requirements": {
                    "type": "string",
                    "description": "Character type requirements for the password"
                },
                "min_uppercase": {
                    "type": "integer",
                    "description": "Minimum number of uppercase letters"
                },
                "min_numbers": {
                    "type": "integer",
                    "description": "Minimum number of digits required in the password"
                },
                "min_special_characters": {
                    "type": "integer",
                    "description": "Minimum number of special characters"
                },
                "other_requirements": {
                    "type": "string",
                    "description": "Other system security requirements the password needs to comply with"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string",
                    "description": "The newly generated strong password"
                }
            }
        }
    },
    {
        "name": "purchase_additional_luggage",
        "description": "Purchase additional luggage allowance for passengers",
        "arguments": {
            "type": "object",
            "properties": {
                "bookingName": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "flightNumber": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departureDate": {
                    "type": "string",
                    "description": "Departure date"
                },
                "luggageQuantity": {
                    "type": "string",
                    "description": "Additional luggage pieces"
                },
                "luggageWeight": {
                    "type": "string",
                    "description": "Additional luggage weight"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "purchase_status": {
                    "type": "string",
                    "description": "Status of the additional luggage allowance purchase"
                }
            }
        }
    },
    {
        "name": "calculate_interest_payment_dates",
        "description": "Calculate the specific interest payment dates for each year over the next three years from the issue date",
        "arguments": {
            "type": "object",
            "properties": {
                "issue_date": {
                    "type": "string",
                    "description": "The issue date of the government bond"
                },
                "term": {
                    "type": "integer",
                    "description": "The term of the government bond (months)"
                },
                "payment_frequency": {
                    "type": "string",
                    "description": "The payment frequency of the government bond"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "payment_dates": {
                    "type": "array",
                    "description": "The calculated list of interest payment dates"
                }
            }
        }
    },
    {
        "name": "search_transaction_by_description",
        "description": "Search for transaction ID by product description",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "description": {
                    "type": "string",
                    "description": "Product description"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Retrieved transaction ID"
                }
            }
        }
    },
    {
        "name": "analyze_market_trends",
        "description": "Analyze market trends and performance, identify well-performing products",
        "arguments": {
            "type": "object",
            "properties": {
                "productType": {
                    "type": "string",
                    "description": "Product type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "good_performers": {
                    "type": "array",
                    "description": "List of well-performing products"
                }
            }
        }
    },
    {
        "name": "login_evaluation",
        "description": "A tool for evaluating login devices",
        "arguments": {
            "type": "object",
            "properties": {
                "deviceId": {
                    "description": "The unique identifier of the login device",
                    "type": "string"
                },
                "lastLogin": {
                    "description": "The time of the last login",
                    "type": "string",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$"
                },
                "location": {
                    "description": "The location of the device",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "deviceStatus": {
                    "description": "The status of the device",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "submit_return_and_compensation",
        "description": "Submit return and compensation request",
        "arguments": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string",
                    "description": "Problematic electronic product order ID"
                },
                "reason": {
                    "type": "string",
                    "description": "Reason for return"
                },
                "compensation_details": {
                    "type": "string",
                    "description": "Compensation details"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the request submission"
                }
            }
        }
    },
    {
        "name": "send_comparison_info_to_customer",
        "description": "Send room type comparison information to customer",
        "arguments": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string",
                    "description": "Customer name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Send status"
                }
            }
        }
    },
    {
        "name": "collect_repair_quotes",
        "description": "Collect repair quotations for the company",
        "arguments": {
            "type": "object",
            "properties": {
                "company_list": {
                    "type": "array",
                    "description": "List of companies for which quotations need to be collected"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "quote_data": {
                    "type": "array",
                    "description": "Repair quotation data of the companies"
                }
            }
        }
    },
    {
        "name": "provider_contact_info",
        "description": "Get the contact information of the service provider",
        "arguments": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": "Service provider"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "description": "Contact information of the service provider",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "advanced_photo_editor",
        "description": "An advanced photo editing tool that allows comprehensive image processing including cropping, filtering, adjusting brightness, and saturation",
        "arguments": {
            "type": "object",
            "properties": {
                "photo_path": {
                    "description": "The path of the photo to be processed",
                    "type": "string",
                    "format": "uri",
                    "example": "/tmp/photo.jpg"
                },
                "crop_area": {
                    "description": "The cropping area, formatted as top-left x, top-left y, width, height. For example, [50,50,200,200] represents the area starting from (50,50) with a width of 200 and a height of 200",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "filter_type": {
                    "description": "Filter type",
                    "type": "string",
                    "enum": [
                        "sepia",
                        "grayscale",
                        "blur",
                        "sharpen"
                    ]
                },
                "brightness_level": {
                    "description": "Brightness level, ranging from -100 (dark) to 100 (bright)",
                    "type": "integer",
                    "minimum": -100,
                    "maximum": 100
                },
                "saturation_level": {
                    "description": "Saturation level, ranging from -100 (unsaturated) to 100 (highly saturated)",
                    "type": "integer",
                    "minimum": -100,
                    "maximum": 100
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "edited_photo_path": {
                    "description": "The path of the edited photo",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "investigate_unauthorized_transaction",
        "description": "Investigate unauthorized transactions, obtain transaction counterparty information and relevant evidence",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "User account ID",
                    "type": "string"
                },
                "transaction_id": {
                    "description": "Unauthorized transaction ID",
                    "type": "string"
                },
                "transaction_date": {
                    "description": "Transaction date",
                    "type": "string"
                },
                "transaction_amount": {
                    "description": "Transaction amount",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status of the investigation",
                    "type": "string"
                },
                "merchant_info": {
                    "description": "Information of the transaction counterparty",
                    "type": "string"
                },
                "evidence": {
                    "description": "Relevant evidence",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "identify_stable_investments",
        "description": "Tools for identifying robust investments that match specific risk preferences",
        "arguments": {
            "type": "object",
            "properties": {
                "risk_tolerance": {
                    "type": "string",
                    "description": "Risk tolerance"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "investments": {
                    "type": "array",
                    "description": "List of investment options that match risk preferences"
                }
            }
        }
    },
    {
        "name": "write_analysis_section",
        "description": "Write a specific section of the conference analysis",
        "arguments": {
            "type": "object",
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Analysis topic"
                },
                "content": {
                    "type": "string",
                    "description": "Analysis content"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "section": {
                    "type": "string",
                    "description": "Analysis section"
                }
            }
        }
    },
    {
        "name": "send_list_to_user",
        "description": "Send the purchase list to the user for confirmation",
        "arguments": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "string",
                    "description": "The purchase list that needs to be sent to the user"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "The sending status of the list"
                }
            }
        }
    },
    {
        "name": "send_order_details",
        "description": "Send order information to the user",
        "arguments": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string",
                    "description": "Customer name"
                },
                "order_details": {
                    "type": "string",
                    "description": "Order details"
                },
                "user_contact": {
                    "type": "string",
                    "description": "User contact information"
                },
                "contact_method": {
                    "type": "string",
                    "description": "User specified contact method"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Send status"
                }
            }
        }
    },
    {
        "name": "request_verification_code",
        "description": "Request to send a verification code to the bound mobile phone",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "The account ID that needs to be verified"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "request_status": {
                    "description": "Whether the request to send the verification code was successful",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "service_availability_check",
        "description": "Check the availability of the service",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date to check"
                },
                "time": {
                    "type": "string",
                    "description": "The time to check"
                },
                "city": {
                    "type": "string",
                    "description": "The city where the service is located"
                },
                "address": {
                    "type": "string",
                    "description": "The specific address where the service is located"
                },
                "service_center": {
                    "type": "string",
                    "description": "Service center information"
                },
                "required_services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of required services"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether the service is available"
                }
            }
        }
    },
    {
        "name": "create_meeting_schedule_document",
        "description": "Create meeting schedule document",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_details": {
                    "type": "array",
                    "description": "Meeting details"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "document_status": {
                    "type": "string",
                    "description": "Document creation status"
                }
            }
        }
    },
    {
        "name": "search_hotels_within_budget",
        "description": "Search for hotels within a specified budget",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The city of stay"
                },
                "area": {
                    "type": "string",
                    "description": "The area of stay"
                },
                "checkInDate": {
                    "type": "string",
                    "description": "Check-in date"
                },
                "checkOutDate": {
                    "type": "string",
                    "description": "Check-out date"
                },
                "budget": {
                    "type": "number",
                    "description": "Budget per night"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "hotel_options": {
                    "type": "array",
                    "description": "Hotel options within budget"
                }
            }
        }
    },
    {
        "name": "verify_security_settings",
        "description": "Verify whether the account security settings are complete",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer",
                    "description": "Account ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "security_settings_status": {
                    "type": "string",
                    "description": "Security settings status"
                }
            }
        }
    },
    {
        "name": "select_repair_provider",
        "description": "Select an appropriate repair service provider from the list",
        "arguments": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "User's location"
                },
                "brand": {
                    "type": "string",
                    "description": "Appliance brand"
                },
                "provider_list": {
                    "type": "array",
                    "description": "List of repair service providers"
                },
                "model": {
                    "type": "string",
                    "description": "Appliance model"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "center_info": {
                    "type": "object",
                    "description": "Information of the selected repair service center"
                },
                "selection_status": {
                    "type": "string",
                    "description": "Company selection status"
                },
                "company_name": {
                    "type": "string",
                    "description": "Name of the selected repair company"
                }
            }
        }
    },
    {
        "name": "get_available_books",
        "description": "Get the list of available books on the online reading platform",
        "arguments": {
            "type": "object",
            "properties": {}
        },
        "results": {
            "type": "object",
            "properties": {
                "books_list": {
                    "description": "List of available books",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "set_alarm_music",
        "description": "Set music for a specified alarm time",
        "arguments": {
            "type": "object",
            "properties": {
                "alarm_time": {
                    "type": "string",
                    "description": "Alarm time"
                },
                "music_playlist": {
                    "type": "string",
                    "description": "User's favorite music playlist"
                },
                "music_type": {
                    "type": "string",
                    "description": "Type of music"
                },
                "frequency": {
                    "type": "string",
                    "description": "Alarm setting frequency, options: once, daily, Monday to Sunday, default is once"
                },
                "music_name": {
                    "type": "string",
                    "description": "Name of the alarm music to set"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "set_music_status": {
                    "type": "string",
                    "description": "Music setting status"
                }
            }
        }
    },
    {
        "name": "seat_preference_query",
        "description": "Query for flights with specific seat preferences",
        "arguments": {
            "type": "object",
            "properties": {
                "flights": {
                    "type": "array",
                    "description": "List of flights to be filtered"
                },
                "preference": {
                    "type": "string",
                    "description": "Seat preference, for example 'window'"
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "preferred_flights": {
                        "type": "array",
                        "description": "List of flights that meet the seat preference"
                    }
                }
            }
        }
    },
    {
        "name": "check_reservation_status",
        "description": "Check reservation status",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "reservation_status": {
                    "type": "string",
                    "description": "Reservation status"
                }
            }
        }
    },
    {
        "name": "check_flight_seats",
        "description": "Check the remaining seat availability of a flight",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "departure_time": {
                    "type": "string",
                    "description": "Departure time"
                },
                "flight_list": {
                    "type": "array",
                    "description": "List of flights to check for seat availability"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether there are available seats"
                },
                "seats_availability": {
                    "type": "array",
                    "description": "List of remaining seat numbers for the flights"
                }
            }
        }
    },
    {
        "name": "receive_e_ticket",
        "description": "Receive electronic ticket",
        "arguments": {
            "type": "object",
            "properties": {
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date and time"
                },
                "passengers": {
                    "type": "array",
                    "description": "Passenger information",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Passenger name"
                            },
                            "id_number": {
                                "type": "string",
                                "description": "Passenger ID number"
                            }
                        }
                    }
                },
                "booking_reference": {
                    "type": "string",
                    "description": "Booking reference information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "e_ticket_status": {
                    "type": "string",
                    "description": "Electronic ticket reception status"
                },
                "e_ticket": {
                    "type": "string",
                    "description": "Electronic ticket information"
                }
            }
        }
    },
    {
        "name": "book_travel_insurance",
        "description": "Book travel insurance",
        "arguments": {
            "type": "object",
            "properties": {
                "insurance_plan": {
                    "type": "string",
                    "description": "Selected travel insurance plan"
                },
                "traveler_name": {
                    "type": "string",
                    "description": "Traveler's name"
                },
                "traveler_age": {
                    "type": "integer",
                    "description": "Traveler's age"
                },
                "start_date": {
                    "type": "string",
                    "description": "Departure date"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "type": "string",
                    "description": "Insurance booking status"
                }
            }
        }
    },
    {
        "name": "visa_application",
        "description": "Visa Application Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "applicantName": {
                    "description": "Applicant Name",
                    "type": "string"
                },
                "passportNumber": {
                    "description": "Passport Number",
                    "type": "string"
                },
                "country": {
                    "description": "Destination Country for Visa",
                    "type": "string"
                },
                "applicationDate": {
                    "description": "Application Date",
                    "type": "string"
                },
                "travelDate": {
                    "description": "Travel Date",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "visaStatus": {
                    "description": "Visa Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "bnb_booking_tool",
        "description": "B&B Reservation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "bnb_id": {
                    "description": "B&B ID",
                    "type": "string"
                },
                "check_in_date": {
                    "description": "Check-in Date",
                    "type": "string"
                },
                "check_out_date": {
                    "description": "Check-out Date",
                    "type": "string"
                },
                "customer_id": {
                    "description": "Customer ID",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "booking_status": {
                    "description": "Booking Status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "travel_coupon_generator",
        "description": "Travel Coupon Generator Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "departure_date": {
                    "description": "Departure Date",
                    "type": "string"
                },
                "return_date": {
                    "description": "Return Date",
                    "type": "string"
                },
                "budget": {
                    "description": "Travel Budget",
                    "type": "integer"
                },
                "trip_type": {
                    "description": "Type of Trip, such as day trip, weekend getaway, long-term travel, etc.",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "travel_coupon": {
                    "description": "Travel Coupon",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "compare_transportation_methods",
        "description": "Compare different modes of transportation",
        "arguments": {
            "type": "object",
            "properties": {
                "start": {
                    "type": "string",
                    "description": "Starting point"
                },
                "end": {
                    "type": "string",
                    "description": "Destination"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "best_option": {
                    "type": "string",
                    "description": "Best mode of transportation"
                }
            }
        }
    },
    {
        "name": "notify_customer",
        "description": "Customer Notification Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "type": "string",
                    "description": "Contact information of the user"
                },
                "message": {
                    "type": "string",
                    "description": "Content of the message to notify the user"
                },
                "newAppointmentDetails": {
                    "type": "object",
                    "properties": {
                        "newTime": {
                            "type": "string",
                            "description": "New appointment time"
                        },
                        "newRequestID": {
                            "type": "string",
                            "description": "New appointment ID"
                        }
                    },
                    "required": [
                        "newTime",
                        "newRequestID"
                    ]
                },
                "customer_name": {
                    "type": "string",
                    "description": "Customer's name"
                },
                "confirmation_details": {
                    "type": "string",
                    "description": "Booking confirmation details"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "luggage_insurance_options",
        "description": "Query insurance options for specified weight of luggage",
        "arguments": {
            "type": "object",
            "properties": {
                "luggage_weight": {
                    "type": "string",
                    "description": "Luggage weight"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "options": {
                    "type": "array",
                    "description": "List of insurance options"
                },
                "contact_info": {
                    "type": "string",
                    "description": "Contact information of the insurance company"
                }
            }
        }
    },
    {
        "name": "submit_deposit",
        "description": "Submit deposit request",
        "arguments": {
            "type": "object",
            "properties": {
                "account_name": {
                    "type": "string",
                    "description": "Deposit account name"
                },
                "deposit_amount": {
                    "type": "number",
                    "description": "Deposit amount"
                },
                "accountNumber": {
                    "description": "Account number",
                    "type": "string"
                },
                "deposit_term": {
                    "description": "Deposit term",
                    "type": "string"
                },
                "product_id": {
                    "type": "string",
                    "description": "Time deposit product ID"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "deposit_status": {
                    "type": "string",
                    "description": "Deposit request status"
                }
            }
        }
    },
    {
        "name": "find_nearby_attractions",
        "description": "Query for famous attractions around given geographical coordinates",
        "arguments": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number",
                    "description": "Latitude"
                },
                "longitude": {
                    "type": "number",
                    "description": "Longitude"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "attractions": {
                    "type": "array",
                    "description": "List of famous attractions nearby",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "name": "travel_backpack_selection",
        "description": "Travel Backpack Selection Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Travel Destination",
                    "type": "string"
                },
                "duration": {
                    "description": "Duration of Travel",
                    "type": "integer"
                },
                "season": {
                    "description": "Travel Season",
                    "type": "string"
                },
                "personal_items": {
                    "description": "Number of Personal Items to Carry",
                    "type": "integer"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "backpack": {
                    "description": "Recommended Type of Travel Backpack",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_confirmation_email",
        "description": "Send reservation confirmation email",
        "arguments": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string",
                    "description": "User email address"
                },
                "meeting_id": {
                    "type": "string",
                    "description": "Meeting ID"
                },
                "participants": {
                    "type": "string",
                    "description": "List of participants, separated by commas"
                },
                "meeting_details": {
                    "type": "string",
                    "description": "Meeting details"
                },
                "email_content": {
                    "type": "string",
                    "description": "Email content, including reservation status, room number, and daily room rate details"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "email_status": {
                    "type": "string",
                    "description": "Email sending status"
                }
            }
        }
    },
    {
        "name": "check_session_availability",
        "description": "Check if the movie tickets for a specific session in a specific cinema are available",
        "arguments": {
            "type": "object",
            "properties": {
                "cinema": {
                    "type": "string",
                    "description": "Name of the cinema"
                },
                "movieTitle": {
                    "type": "string",
                    "description": "Name of the movie"
                },
                "sessionTime": {
                    "type": "string",
                    "description": "Session time"
                },
                "date": {
                    "type": "string",
                    "description": "Date of watching the movie"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean",
                    "description": "Whether the session is available"
                }
            }
        }
    },
    {
        "name": "confirm_participants_received",
        "description": "Confirm whether participants have received the meeting notification",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_id": {
                    "type": "string",
                    "description": "Meeting ID"
                },
                "participants": {
                    "type": "string",
                    "description": "List of participants, separated by commas"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Confirmation of receipt of the meeting notification",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_meeting_change_notification",
        "description": "Send meeting change notifications to all participants",
        "arguments": {
            "type": "object",
            "properties": {
                "participant_list": {
                    "type": "string",
                    "description": "List of participants"
                },
                "contact_details": {
                    "type": "string",
                    "description": "Contact details of participants"
                },
                "original_meeting_details": {
                    "type": "string",
                    "description": "Details of the original meeting"
                },
                "new_meeting_details": {
                    "type": "string",
                    "description": "Details of the new meeting"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "find_suitable_conference_room",
        "description": "Find a suitable conference room according to specified conditions and return a list",
        "arguments": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "description": "The city where the conference room is located"
                },
                "startTime": {
                    "type": "string",
                    "description": "Conference start time (date+time)"
                },
                "endTime": {
                    "type": "string",
                    "description": "Conference end time (date+time)"
                },
                "capacity": {
                    "type": "integer",
                    "description": "The minimum capacity of the conference room"
                },
                "preference": {
                    "type": "string",
                    "description": "Other preference settings, such as location"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "room_list": {
                    "type": "array",
                    "description": "List of conference rooms that meet the criteria"
                }
            }
        }
    },
    {
        "name": "create_attendance_sheet",
        "description": "Create attendance status record sheet",
        "arguments": {
            "type": "object",
            "properties": {
                "participant_info": {
                    "type": "string",
                    "description": "Name, date of birth, and participant ID of the attendee"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "attendance_sheet": {
                    "type": "string",
                    "description": "Created attendance status record sheet"
                }
            }
        }
    },
    {
        "name": "update_reminders",
        "description": "Update the date and time of reminder events",
        "arguments": {
            "type": "object",
            "properties": {
                "reminder_id": {
                    "type": "string",
                    "description": "The ID of the reminder event to be updated"
                },
                "new_date": {
                    "type": "string",
                    "description": "The new date"
                },
                "new_time": {
                    "type": "string",
                    "description": "The new time"
                },
                "repeat": {
                    "type": "boolean",
                    "description": "Whether the reminder needs to be repeated"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "description": "The result of the reminder update",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "generate_workday_schedule",
        "description": "Generate a workday schedule for a specified month, including specific events",
        "arguments": {
            "type": "object",
            "properties": {
                "month": {
                    "type": "string",
                    "description": "The specified month"
                },
                "special_events": {
                    "type": "array",
                    "description": "An array of specific dates and their events",
                    "items": {
                        "type": "object",
                        "properties": {
                            "date": {
                                "type": "string"
                            },
                            "event": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "schedule_content": {
                    "type": "string",
                    "description": "The content of the generated schedule"
                }
            }
        }
    },
    {
        "name": "travel_diary_generator",
        "description": "Travel Diary Generator",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "Travel Date",
                    "type": "string"
                },
                "location": {
                    "description": "Travel Location",
                    "type": "string"
                },
                "events": {
                    "description": "Record of Travel Activities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "photos": {
                    "description": "Links to Travel Photos",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "experience": {
                    "description": "Travel Experiences and Thoughts",
                    "type": "string"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "diary_entry": {
                    "description": "Generated Travel Diary Entry",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "add_agenda_note",
        "description": "Add a note to a specific meeting agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "agenda_id": {
                    "type": "string",
                    "description": "The id of the agenda"
                },
                "meeting_date": {
                    "type": "string",
                    "description": "The date of the meeting"
                },
                "meeting_time": {
                    "type": "string",
                    "description": "The time of the meeting"
                },
                "meeting_name": {
                    "type": "string",
                    "description": "The name of the meeting"
                },
                "note": {
                    "type": "string",
                    "description": "The content of the note to be added"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "note_status": {
                    "type": "string",
                    "description": "The status of the note addition"
                }
            }
        }
    },
    {
        "name": "add_phone_verification",
        "description": "Add SMS verification to user account",
        "arguments": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string",
                    "description": "User account ID"
                },
                "phone_number": {
                    "type": "string",
                    "description": "Phone number"
                },
                "verification_code": {
                    "type": "string",
                    "description": "SMS verification code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "verification_status": {
                    "description": "Phone verification addition status",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "check_pending_items",
        "description": "Check and list the pending items for the specified date",
        "arguments": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "description": "The date for which to check the pending items"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "pending_items": {
                    "description": "List of pending items",
                    "type": "array"
                }
            }
        }
    },
    {
        "name": "distribute_agenda",
        "description": "Distribute meeting agenda",
        "arguments": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string",
                    "description": "Distribution method"
                },
                "agenda_document": {
                    "type": "string",
                    "description": "Meeting agenda document"
                },
                "attendees_list": {
                    "type": "array",
                    "description": "Attendees list"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "distribution_status": {
                    "type": "string",
                    "description": "Agenda distribution status"
                }
            }
        }
    },
    {
        "name": "add_recurring_note_to_calendar",
        "description": "Add a recurring note to the calendar",
        "arguments": {
            "type": "object",
            "properties": {
                "note_id": {
                    "type": "string",
                    "description": "The ID of the note"
                },
                "start_date": {
                    "type": "string",
                    "description": "The start date of the recurring note"
                },
                "recurrence": {
                    "type": "string",
                    "description": "Recurrence frequency"
                },
                "note_content": {
                    "type": "string",
                    "description": "Content of the note"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "outcome": {
                    "description": "Whether the note was successfully added",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "update_contact_info",
        "description": "Update user's contact information",
        "arguments": {
            "type": "object",
            "properties": {
                "contact_number": {
                    "type": "string",
                    "description": "User's new contact phone number"
                },
                "service_address": {
                    "type": "string",
                    "description": "User's new service address"
                },
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                },
                "address": {
                    "type": "string",
                    "description": "New contact address"
                },
                "email": {
                    "type": "string",
                    "description": "Email address"
                },
                "provider": {
                    "type": "string",
                    "description": "Service provider name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "type": "string",
                    "description": "Contact information update status"
                }
            }
        }
    },
    {
        "name": "send_email_invitation",
        "description": "Send email meeting invitation",
        "arguments": {
            "type": "object",
            "properties": {
                "subject": {
                    "type": "string",
                    "description": "Email subject"
                },
                "content": {
                    "type": "string",
                    "description": "Email content"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Recipient email address list"
                },
                "attachment_id": {
                    "type": "string",
                    "description": "Attachment ID"
                },
                "meeting_details": {
                    "type": "string",
                    "description": "Meeting details"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "description": "Whether the email was sent successfully",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "send_virtual_meeting_invites",
        "description": "Send virtual classroom meeting invitations to a specified number of students",
        "arguments": {
            "type": "object",
            "properties": {
                "meeting_time": {
                    "type": "string",
                    "description": "Meeting time"
                },
                "num_students": {
                    "type": "integer",
                    "description": "Number of participating students",
                    "minimum": 1,
                    "maximum": 100
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "invites_status": {
                    "type": "string",
                    "description": "Invitation sending status"
                }
            }
        }
    },
    {
        "name": "search_and_confirm_service_center",
        "description": "Search and confirm the official repair service center for the specified brand and model, and verify its service area",
        "arguments": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string",
                    "description": "Home appliance brand"
                },
                "model": {
                    "type": "string",
                    "description": "Home appliance model"
                },
                "service_area": {
                    "type": "string",
                    "description": "Area covered by the service center"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "service_center_info": {
                    "type": "string",
                    "description": "Detailed information of the service center"
                },
                "coverage_status": {
                    "type": "string",
                    "description": "Status of whether the specified area is covered"
                }
            }
        }
    },
    {
        "name": "confirm_service_appointment",
        "description": "Confirm the appointment time and location of the service personnel",
        "arguments": {
            "type": "object",
            "properties": {
                "requestID": {
                    "type": "string",
                    "description": "Maintenance request number"
                },
                "scheduledTime": {
                    "type": "string",
                    "description": "Scheduled service time"
                },
                "address": {
                    "type": "string",
                    "description": "Address for the service appointment"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "Service appointment confirmation status"
                },
                "expected_arrival_time": {
                    "type": "string",
                    "description": "Expected arrival time of the service personnel"
                }
            }
        }
    },
    {
        "name": "send_service_details",
        "description": "Send service details to user's mobile phone",
        "arguments": {
            "type": "object",
            "properties": {
                "contactNumber": {
                    "type": "string",
                    "description": "User contact number"
                },
                "serviceTime": {
                    "type": "string",
                    "description": "Service time"
                },
                "technicianName": {
                    "type": "string",
                    "description": "Technician's name"
                },
                "technicianContact": {
                    "type": "string",
                    "description": "Technician contact information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Send status"
                }
            }
        }
    },
    {
        "name": "service_provider_selection",
        "description": "Select the appropriate service provider",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceType": {
                    "type": "string",
                    "description": "Type of appliance"
                },
                "applianceBrand": {
                    "type": "string",
                    "description": "Brand of appliance"
                },
                "serviceArea": {
                    "type": "string",
                    "description": "Service area"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "provider_info": {
                    "description": "Information of the selected service provider",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "set_recurring_reminder",
        "description": "Set recurring reminder event",
        "arguments": {
            "type": "object",
            "properties": {
                "reminder_id": {
                    "type": "string",
                    "description": "ID of the reminder"
                },
                "start_date": {
                    "type": "string",
                    "description": "Start date of the reminder"
                },
                "end_date": {
                    "type": "string",
                    "description": "End date of the reminder"
                },
                "reminder_time": {
                    "type": "string",
                    "description": "Time of the reminder"
                },
                "reminder_location": {
                    "type": "string",
                    "description": "Geographical location of the reminder"
                },
                "weekdays": {
                    "type": "array",
                    "description": "Array of weekdays, e.g., ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the reminder was successfully set to repeat",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "notify_contact",
        "description": "Notify the designated contact to open the door at a specific time",
        "arguments": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Contact name"
                },
                "phone": {
                    "type": "string",
                    "description": "Contact phone number"
                },
                "date": {
                    "type": "string",
                    "description": "Scheduled date"
                },
                "time": {
                    "type": "string",
                    "description": "Scheduled time"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                }
            }
        }
    },
    {
        "name": "search_and_filter_events",
        "description": "Search for specific types of events, and filter by time, location, number of guests, and budget",
        "arguments": {
            "type": "object",
            "properties": {
                "event_type": {
                    "type": "string",
                    "description": "Event type"
                },
                "location": {
                    "type": "string",
                    "description": "Event location"
                },
                "date_range": {
                    "type": "string",
                    "description": "Event date range"
                },
                "guest_number": {
                    "type": "integer",
                    "description": "Number of participants"
                },
                "budget": {
                    "type": "number",
                    "description": "Budget"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "search_status": {
                    "type": "string",
                    "description": "Search status"
                },
                "events": {
                    "type": "array",
                    "description": "List of events that meet the criteria",
                    "items": {
                        "type": "object",
                        "properties": {
                            "event_name": {
                                "type": "string",
                                "description": "Event name"
                            },
                            "event_location": {
                                "type": "string",
                                "description": "Event location"
                            },
                            "event_date": {
                                "type": "string",
                                "description": "Event date"
                            },
                            "event_budget": {
                                "type": "number",
                                "description": "Event budget"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "name": "confirm_medication_stock",
        "description": "Confirm the stock availability of medications in a specified pharmacy",
        "arguments": {
            "type": "object",
            "properties": {
                "pharmacy": {
                    "type": "string",
                    "description": "Pharmacy name"
                },
                "medication": {
                    "type": "string",
                    "description": "Medication name"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "stock_status": {
                    "type": "boolean",
                    "description": "Whether the medication stock is sufficient"
                }
            }
        }
    },
    {
        "name": "compile_nutrition_report",
        "description": "Compile a report containing the protein, fat, and carbohydrate content of all foods and beverages",
        "arguments": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Collected nutritional information data",
                    "type": "array"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "report": {
                    "description": "Nutritional analysis report",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "generate_nutrition_summary",
        "description": "Generate nutrition intake summary report",
        "arguments": {
            "type": "object",
            "properties": {
                "protein_intake": {
                    "description": "Daily protein intake",
                    "type": "array"
                },
                "fat_intake": {
                    "description": "Daily fat intake",
                    "type": "array"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "summary": {
                    "description": "Nutrition intake summary report",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "calculate_paint_budget",
        "description": "Calculate the total paint budget based on wall area, paint unit price, and main color RGB values",
        "arguments": {
            "type": "object",
            "properties": {
                "rgb_value": {
                    "type": "string",
                    "description": "The main RGB color value of the wall"
                },
                "area": {
                    "type": "number",
                    "description": "Wall area in square meters"
                },
                "price_per_square_meter": {
                    "type": "number",
                    "description": "Budget unit price of the paint, in yuan per square meter"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "total_budget": {
                    "type": "number",
                    "description": "The total paint budget required for painting the entire wall surface"
                }
            }
        }
    },
    {
        "name": "compare_prices_and_mark_errors",
        "description": "Compare the amount in transaction records with the actual price of the product, and mark the erroneous records",
        "arguments": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "description": "Transaction record ID"
                },
                "recorded_amount": {
                    "type": "integer",
                    "description": "Amount recorded in the record"
                },
                "actual_amount": {
                    "type": "integer",
                    "description": "Actual amount"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "error_transactions": {
                    "type": "array",
                    "description": "List of erroneous transaction records"
                }
            }
        }
    },
    {
        "name": "create_feedback_form",
        "description": "Create customer feedback form template",
        "arguments": {
            "type": "object",
            "properties": {
                "template": {
                    "type": "string",
                    "description": "Feedback form template type"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "creation_status": {
                    "description": "Template creation status",
                    "type": "string"
                },
                "document_id": {
                    "description": "Created document ID",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "compare_prices",
        "description": "Compare two prices and determine which one is lower",
        "arguments": {
            "type": "object",
            "properties": {
                "apple_store_price": {
                    "type": "number",
                    "description": "The price at the official Apple store"
                },
                "jd_store_price": {
                    "type": "number",
                    "description": "The price at JD.com store"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "lower_price": {
                    "type": "number",
                    "description": "The lower price"
                },
                "lower_store": {
                    "type": "string",
                    "description": "The name of the store with the lower price"
                }
            }
        }
    },
    {
        "name": "set_automation_task",
        "description": "Set up automation tasks in the smart home system",
        "arguments": {
            "type": "object",
            "properties": {
                "trigger_time": {
                    "type": "string",
                    "description": "Task trigger time"
                },
                "action": {
                    "type": "string",
                    "description": "Action to be performed"
                },
                "trigger_condition": {
                    "type": "string",
                    "description": "Task trigger condition"
                },
                "effective_period": {
                    "type": "string",
                    "description": "Task effective period"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "automation_task_info": {
                    "description": "Automation task setup result",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "error_code_lookup",
        "description": "Query the fault type represented by the error code for a specific model of home appliance",
        "arguments": {
            "type": "object",
            "properties": {
                "applianceType": {
                    "type": "string",
                    "description": "Appliance type"
                },
                "brand": {
                    "type": "string",
                    "description": "Brand"
                },
                "model": {
                    "type": "string",
                    "description": "Model"
                },
                "errorCode": {
                    "type": "string",
                    "description": "Error code"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "meaning": {
                    "type": "string",
                    "description": "Meaning of the error code"
                },
                "fixSuggestion": {
                    "type": "string",
                    "description": "Possible repair solutions"
                }
            }
        }
    },
    {
        "name": "send_appointment_details",
        "description": "Send appointment details to user",
        "arguments": {
            "type": "object",
            "properties": {
                "contact_method": {
                    "type": "string",
                    "description": "User's contact method"
                },
                "appointment_date": {
                    "type": "string",
                    "description": "Date of the appointment"
                },
                "location": {
                    "type": "string",
                    "description": "Location of the appointment"
                },
                "appointment_details": {
                    "type": "string",
                    "description": "Details of the appointment"
                },
                "service_info": {
                    "type": "string",
                    "description": "Service provider information"
                },
                "technician_info": {
                    "type": "string",
                    "description": "Technician's information"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "notification_status": {
                    "type": "string",
                    "description": "Notification sending status"
                },
                "confirmation_status": {
                    "type": "string",
                    "description": "User confirmation receipt status"
                }
            }
        }
    },
    {
        "name": "contact_customer",
        "description": "Confirm appointment information with the customer using the specified contact number",
        "arguments": {
            "type": "object",
            "properties": {
                "phoneNumber": {
                    "type": "string",
                    "description": "The customer's contact number"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the confirmation message"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation_status": {
                    "type": "string",
                    "description": "The status of the confirmation message sent"
                }
            }
        }
    },
    {
        "name": "confirm_booking",
        "description": "Confirm booking details and complete related procedures",
        "arguments": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string",
                    "description": "Customer name"
                },
                "bookingID": {
                    "type": "string",
                    "description": "Booking ID"
                },
                "flight_number": {
                    "type": "string",
                    "description": "Flight number"
                },
                "departure_date": {
                    "type": "string",
                    "description": "Departure date"
                },
                "passenger_name": {
                    "type": "string",
                    "description": "Passenger name"
                },
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "confirmation": {
                    "type": "string",
                    "description": "Booking confirmation information"
                },
                "total_price": {
                    "type": "number",
                    "description": "Total trip cost"
                },
                "confirmation_number": {
                    "type": "string",
                    "description": "Booking confirmation number"
                },
                "booking_status": {
                    "type": "string",
                    "description": "Booking status"
                },
                "voucher": {
                    "type": "string",
                    "description": "Booking voucher"
                }
            }
        }
    },
    {
        "name": "set_event_name",
        "description": "Set a new name for a specific index event",
        "arguments": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string",
                    "description": "The id of the event"
                },
                "event_index": {
                    "type": "integer",
                    "description": "The index of the event in the series"
                },
                "event_name": {
                    "type": "string",
                    "description": "The new name of the event"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Whether the event name was successfully set",
                    "type": "string"
                }
            }
        }
    },
    {
        "name": "document_translation",
        "description": "Document Translation Tool",
        "arguments": {
            "type": "object",
            "properties": {
                "doc_name": {
                    "description": "Document name, must be 5-50 characters",
                    "type": "string"
                },
                "doc_format": {
                    "description": "Document format, must be one of 'pdf', 'doc', 'docx', 'txt', 'jpg', 'png'",
                    "type": "string",
                    "enum": [
                        "pdf",
                        "doc",
                        "docx",
                        "txt",
                        "jpg",
                        "png"
                    ]
                },
                "source_language": {
                    "description": "Source language, currently supports only Chinese, English, French, German, Japanese, and Korean",
                    "type": "string",
                    "enum": [
                        "Chinese",
                        "English",
                        "French",
                        "German",
                        "Japanese",
                        "Korean"
                    ]
                },
                "target_language": {
                    "description": "Target language, also supports only Chinese, English, French, German, Japanese, and Korean",
                    "type": "string",
                    "enum": [
                        "Chinese",
                        "English",
                        "French",
                        "German",
                        "Japanese",
                        "Korean"
                    ]
                },
                "doc_content": {
                    "description": "Document content, length must be between 500-10000 characters",
                    "type": "string",
                    "minLength": 500,
                    "maxLength": 10000
                },
                "doc_size": {
                    "description": "Document size, in MB, must not exceed 100MB",
                    "type": "integer",
                    "maximum": 100
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "translated_doc": {
                    "description": "Translated document",
                    "type": "object"
                }
            }
        }
    },
    {
        "name": "news_filter",
        "description": "Filter out news that has been cited by multiple media outlets, and return the top three hot news items",
        "arguments": {
            "type": "object",
            "properties": {
                "news_list": {
                    "type": "array",
                    "description": "The list of news to be filtered"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "top_news": {
                    "type": "array",
                    "description": "The top three hot news items that have been cited by multiple media outlets"
                }
            }
        }
    },
    {
        "name": "send_report",
        "description": "Send report via email",
        "arguments": {
            "type": "object",
            "properties": {
                "recipients": {
                    "type": "string",
                    "description": "List of recipients"
                },
                "report_document": {
                    "type": "string",
                    "description": "Report document"
                },
                "report_format": {
                    "type": "string",
                    "description": "Format of the report"
                },
                "delivery_method": {
                    "type": "string",
                    "description": "Method of report delivery"
                },
                "report_content": {
                    "type": "string",
                    "description": "Content of the report to be sent"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "send_status": {
                    "type": "string",
                    "description": "Send status"
                },
                "status": {
                    "type": "boolean",
                    "description": "Whether the send operation was successful"
                }
            }
        }
    },
    {
        "name": "spell_check",
        "description": "Perform spell check on a file",
        "arguments": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string",
                    "description": "File path"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "spell_check_status": {
                    "type": "boolean",
                    "description": "Whether there are spelling errors"
                },
                "corrections": {
                    "type": "array",
                    "description": "Suggested spelling corrections"
                }
            }
        }
    },
    {
        "name": "create_online_meeting",
        "description": "Create an online meeting and return the meeting information",
        "arguments": {
            "type": "object",
            "properties": {
                "start_time": {
                    "type": "string",
                    "description": "Meeting start time"
                },
                "end_time": {
                    "type": "string",
                    "description": "Meeting end time"
                },
                "account": {
                    "type": "string",
                    "description": "Meeting platform account"
                },
                "password": {
                    "type": "string",
                    "description": "Meeting platform password"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "meeting_id": {
                    "description": "Created meeting ID",
                    "type": "string"
                },
                "meeting_link": {
                    "type": "string",
                    "description": "Online meeting link"
                },
                "participation_guide": {
                    "type": "string",
                    "description": "Participation guide"
                }
            }
        }
    },
    {
        "name": "find_cinema",
        "description": "Find cinemas that are showing a movie based on the movie's name, location, and date",
        "arguments": {
            "type": "object",
            "properties": {
                "movieTitle": {
                    "type": "string",
                    "description": "The name of the movie"
                },
                "location": {
                    "type": "string",
                    "description": "The location of the cinema"
                },
                "date": {
                    "type": "string",
                    "description": "The date to watch the movie"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "cinemas": {
                    "type": "array",
                    "description": "List of cinemas that meet the criteria"
                }
            }
        }
    },
    {
        "name": "select_dishes",
        "description": "Select dishes from the restaurant menu",
        "arguments": {
            "type": "object",
            "properties": {
                "menu": {
                    "type": "string",
                    "description": "Recommended menu"
                },
                "preferences": {
                    "type": "string",
                    "description": "Personal preferences"
                },
                "dishes": {
                    "type": "array",
                    "description": "List of dishes to be ordered",
                    "items": {
                        "type": "string"
                    }
                },
                "restaurant_name": {
                    "type": "string",
                    "description": "Name of the target restaurant"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "selected_dishes": {
                    "type": "object",
                    "description": "Selected dishes and quantities"
                },
                "order_id": {
                    "description": "Generated order ID for subsequent ordering and billing operations",
                    "type": "integer"
                }
            }
        }
    },
    {
        "name": "add_records_to_document",
        "description": "Add meeting records to the summary document",
        "arguments": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "string",
                    "description": "The meeting records to be added to the document"
                }
            }
        },
        "results": {
            "type": "object",
            "properties": {
                "update_status": {
                    "description": "Whether the record addition was successful",
                    "type": "boolean"
                }
            }
        }
    }
]