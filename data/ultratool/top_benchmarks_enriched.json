[
    {
        "question": "Please plan a trip for me departing on October 1st at 8:00 AM to Japan, returning on October 7th at 11:00 PM, including Tokyo Disneyland, Senso-ji Temple, Ginza, Mount Fuji, Kyoto cultural experience, Universal Studios Osaka, and visiting the Nara Deer Park on October 4th, and help me find hotels where the nightly cost does not exceed 10,000 Japanese yen.",
        "toolset": [
            {
                "name": "travel_itinerary_planner",
                "input_structure": "Requires destination, departure and return dates, and a list of interests. The user must provide these details to generate a comprehensive itinerary.",
                "description": "Travel Itinerary Planning Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "destination": {
                            "description": "Destination",
                            "type": "string"
                        },
                        "departure_date": {
                            "description": "Departure Date",
                            "type": "string"
                        },
                        "return_date": {
                            "description": "Return Date",
                            "type": "string"
                        },
                        "interests": {
                            "description": "Points of Interest",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An array of itinerary objects, each containing a date and a list of activities planned for that day.",
                    "properties": {
                        "itinerary": {
                            "description": "Travel Itinerary",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "day": {
                                        "description": "Date",
                                        "type": "string"
                                    },
                                    "activities": {
                                        "description": "Activities",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "name": "hotel_search",
                "input_structure": "Requires location, check-in and check-out dates, number of guests, and budget. The user must specify these parameters to find suitable hotel options.",
                "description": "Search for hotels that meet the criteria and return a list",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "location": {
                            "type": "string",
                            "description": "Hotel location"
                        },
                        "check_in_date": {
                            "type": "string",
                            "description": "Check-in date"
                        },
                        "check_out_date": {
                            "type": "string",
                            "description": "Check-out date"
                        },
                        "guests": {
                            "description": "Number of guests",
                            "type": "integer"
                        },
                        "city": {
                            "type": "string",
                            "description": "City of stay"
                        },
                        "stay_duration": {
                            "description": "Duration of stay",
                            "type": "integer"
                        },
                        "stars": {
                            "type": "integer",
                            "description": "Hotel star rating"
                        },
                        "budget": {
                            "type": "integer",
                            "description": "Budget"
                        },
                        "room_type": {
                            "type": "string",
                            "description": "Room type"
                        },
                        "number_of_rooms": {
                            "type": "integer",
                            "description": "Number of rooms"
                        },
                        "hotel_name": {
                            "type": "string",
                            "description": "Hotel name to search for"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A list of hotels that match the search criteria, including details such as availability, price, and hotel ID.",
                    "properties": {
                        "hotel_info": {
                            "type": "string",
                            "description": "Filtered hotel information"
                        },
                        "hotel_options": {
                            "type": "array",
                            "description": "List of available hotels"
                        },
                        "search_status": {
                            "description": "Search status",
                            "type": "string"
                        },
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel ID that meets the criteria"
                        },
                        "availability": {
                            "type": "boolean",
                            "description": "Availability of rooms"
                        },
                        "price": {
                            "type": "number",
                            "description": "Price"
                        }
                    }
                }
            },
            {
                "name": "transportation_booking",
                "input_structure": "Requires departure and destination cities, along with departure and return dates. The user must provide these details to book transportation.",
                "description": "Arrange and book transportation",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departure_city": {
                            "type": "string",
                            "description": "Departure city"
                        },
                        "destination_city": {
                            "type": "string",
                            "description": "Destination city"
                        },
                        "departure_date": {
                            "type": "string",
                            "description": "Departure date"
                        },
                        "return_date": {
                            "type": "string",
                            "description": "Return date"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation of the transportation booking, including details of the booking and its status.",
                    "properties": {
                        "booking_confirmation": {
                            "type": "string",
                            "description": "Transportation booking confirmation"
                        },
                        "booking_details": {
                            "type": "array",
                            "description": "Booking details"
                        },
                        "booking_status": {
                            "type": "string",
                            "description": "Booking status"
                        }
                    }
                }
            },
            {
                "name": "book_ticket",
                "input_structure": "Requires event name, visit dates, and customer information. The user must provide these details to book tickets.",
                "description": "Complete the ticket booking process",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "attractions": {
                            "type": "string",
                            "description": "Attractions to book"
                        },
                        "visit_dates": {
                            "type": "string",
                            "description": "Visit dates"
                        },
                        "date": {
                            "type": "string",
                            "description": "Booking date"
                        },
                        "activity": {
                            "type": "string",
                            "description": "Activity name"
                        },
                        "visitor_name": {
                            "type": "string",
                            "description": "Visitor's name"
                        },
                        "contactInfo": {
                            "type": "string",
                            "description": "Customer contact information"
                        },
                        "ticketType": {
                            "type": "string",
                            "description": "Ticket type"
                        },
                        "travel_mode": {
                            "type": "string",
                            "description": "Mode of transportation"
                        },
                        "departure": {
                            "type": "string",
                            "description": "Place of departure"
                        },
                        "destination": {
                            "type": "string",
                            "description": "Destination"
                        },
                        "travel_date": {
                            "type": "string",
                            "description": "Travel date"
                        },
                        "customerInfo": {
                            "type": "object",
                            "description": "Booker's information",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Booker's name"
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Booker's phone number"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Booker's email address"
                                }
                            },
                            "required": [
                                "name",
                                "phone",
                                "email"
                            ]
                        },
                        "event": {
                            "type": "string",
                            "description": "Event name"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation of the ticket booking, including booking details and reference information.",
                    "properties": {
                        "booking_status": {
                            "type": "string",
                            "description": "Ticket booking status"
                        },
                        "booking_details": {
                            "type": "array",
                            "description": "Booking details"
                        },
                        "tickets_confirmation": {
                            "type": "string",
                            "description": "Tickets booking confirmation information"
                        },
                        "booking_reference": {
                            "type": "string",
                            "description": "Booking reference information"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2. Use travel planning tool to create itinerary",
                "tool": "travel_itinerary_planner",
                "input_source": "question",
                "param": {
                    "destination": "Japan",
                    "departure_date": "2023-10-01 08:00",
                    "return_date": "2023-10-07 23:00",
                    "interests": "['Tokyo Disneyland'"
                }
            },
            {
                "step": "4.1 Search for hotels within budget",
                "tool": "hotel_search",
                "input_source": "question",
                "param": {
                    "city": "Japan",
                    "budget": "10000",
                    "check_in_date": "2023-10-01",
                    "check_out_date": "2023-10-07"
                }
            },
            {
                "step": "5.1 Arrange transportation within Tokyo",
                "tool": "transportation_booking",
                "input_source": "question",
                "param": {
                    "departure_city": "Tokyo",
                    "departure_date": "<Tokyo transportation date>"
                }
            },
            {
                "step": "5.2 Arrange transportation from Tokyo to Mount Fuji",
                "tool": "transportation_booking",
                "input_source": "question",
                "param": {
                    "departure_city": "Tokyo",
                    "destination_city": "Mount Fuji",
                    "departure_date": "<Tokyo to Mount Fuji transportation date>"
                }
            },
            {
                "step": "5.3 Arrange transportation from Tokyo to Kyoto",
                "tool": "transportation_booking",
                "input_source": "question",
                "param": {
                    "departure_city": "Tokyo",
                    "destination_city": "Kyoto",
                    "departure_date": "<Tokyo to Kyoto transportation date>"
                }
            },
            {
                "step": "5.4 Arrange transportation from Kyoto to Osaka",
                "tool": "transportation_booking",
                "input_source": "question",
                "param": {
                    "departure_city": "Kyoto",
                    "destination_city": "Osaka",
                    "departure_date": "<Kyoto to Osaka transportation date>"
                }
            },
            {
                "step": "5.5 Arrange transportation from Osaka to Nara",
                "tool": "transportation_booking",
                "input_source": "question",
                "param": {
                    "departure_city": "Osaka",
                    "destination_city": "Nara",
                    "departure_date": "<Osaka to Nara transportation date>"
                }
            },
            {
                "step": "5.6 Arrange transportation from Nara back to Tokyo",
                "tool": "transportation_booking",
                "input_source": "question",
                "param": {
                    "departure_city": "Nara",
                    "destination_city": "Tokyo",
                    "departure_date": "<Nara to Tokyo transportation date>"
                }
            },
            {
                "step": "6.1 Book Tokyo Disneyland tickets",
                "tool": "book_ticket",
                "input_source": "question",
                "param": {
                    "event": "Tokyo Disneyland",
                    "visit_dates": "<Tokyo Disneyland visit date>"
                }
            },
            {
                "step": "6.2 Book Universal Studios Osaka tickets",
                "tool": "book_ticket",
                "input_source": "question",
                "param": {
                    "event": "Universal Studios Osaka",
                    "visit_dates": "<Universal Studios Osaka visit date>"
                }
            }
        ],
        "reference_count": 10
    },
    {
        "question": "Please order a Spicy Hot Pot for me at the restaurant, add two extra servings of beef and a plate of hand-torn cabbage, then place the order using my table ID 10, and help me check out.",
        "toolset": [
            {
                "name": "get_dish_id",
                "input_structure": "Requires the name of the dish to be queried and access to the restaurant's menu data. The menu should be provided as an array of dish objects, each containing at least a name and ID.",
                "description": "Get the dish ID based on the dish name",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dish_name": {
                            "type": "string",
                            "description": "Dish name"
                        },
                        "menu": {
                            "type": "array",
                            "description": "Restaurant menu"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object containing the dish ID corresponding to the queried dish name.",
                    "properties": {
                        "dish_id": {
                            "type": "integer",
                            "description": "Queried dish ID"
                        }
                    }
                }
            },
            {
                "name": "menu_select_api",
                "input_structure": "Requires a valid dish ID and the quantity of the dish to be ordered. The API should have access to the current session's order context to update the order.",
                "description": "Ordering API for selecting dishes",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dish_id": {
                            "description": "Dish ID",
                            "type": "integer"
                        },
                        "quantity": {
                            "description": "Quantity of dishes",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object containing the order ID generated for the selected dish, which can be used for further operations.",
                    "properties": {
                        "order_id": {
                            "description": "Generated order ID for subsequent ordering and checkout operations",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "place_order",
                "input_structure": "Requires a list of dishes with their IDs and quantities, a valid table ID, and an existing order ID to place the order. The tool should confirm the table ID is correct and available.",
                "description": "Place an order based on dish information and table number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dishes": {
                            "type": "array",
                            "description": "List of dishes, each dish includes dish ID and quantity"
                        },
                        "table_id": {
                            "type": "integer",
                            "description": "Table number"
                        },
                        "order_id": {
                            "type": "integer",
                            "description": "Order number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object containing the confirmed order ID and a confirmation message indicating successful order placement.",
                    "properties": {
                        "order_id": {
                            "type": "integer",
                            "description": "Generated order ID"
                        },
                        "confirmation": {
                            "description": "Order confirmation message",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "checkout_api",
                "input_structure": "Requires a valid order ID, the total payment amount, and the payment method. The tool should ensure the payment method is supported and the amount matches the order total.",
                "description": "Checkout API, dependent on the result of the previous Place Order API 'Order ID'",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "order_id": {
                            "description": "Order ID",
                            "type": "integer"
                        },
                        "amount": {
                            "description": "Payment Amount",
                            "type": "integer"
                        },
                        "payment_method": {
                            "description": "Payment Method",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object containing the total bill amount and the payment status, indicating whether the payment was successful.",
                    "properties": {
                        "total_bill": {
                            "description": "Total Bill Amount",
                            "type": "integer"
                        },
                        "payment_status": {
                            "description": "Payment Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Obtain Spicy Hot Pot ID",
                "tool": "get_dish_id",
                "input_source": "question",
                "param": {
                    "dish_name": "Spicy Hot Pot"
                }
            },
            {
                "step": "2.2 Select Spicy Hot Pot (Dish ID: <Spicy Hot Pot ID>, Quantity: '1')",
                "tool": "menu_select_api",
                "input_source": "get_dish_id tool",
                "param": {
                    "dish_id": "<Spicy Hot Pot ID>",
                    "quantity": "1"
                }
            },
            {
                "step": "3.1 Obtain beef ID",
                "tool": "get_dish_id",
                "input_source": "question",
                "param": {
                    "dish_name": "Beef"
                }
            },
            {
                "step": "3.2 Add beef (Dish ID: <Beef ID>, Quantity: '2')",
                "tool": "menu_select_api",
                "input_source": "get_dish_id tool",
                "param": {
                    "dish_id": "<Beef ID>",
                    "quantity": "2"
                }
            },
            {
                "step": "3.3 Obtain hand-torn cabbage ID",
                "tool": "get_dish_id",
                "input_source": "question",
                "param": {
                    "dish_name": "Hand-torn Cabbage"
                }
            },
            {
                "step": "3.4 Add hand-torn cabbage (Dish ID: <Hand-torn Cabbage ID>, Quantity: '1')",
                "tool": "menu_select_api",
                "input_source": "get_dish_id tool",
                "param": {
                    "dish_id": "<Hand-torn Cabbage ID>",
                    "quantity": "1"
                }
            },
            {
                "step": "4.1 Place order using table ID (Order ID: Updated Order Number, Table ID: '10')",
                "tool": "place_order",
                "input_source": "menu_select_api tool",
                "param": {
                    "order_id": "<Updated Order Number>",
                    "table_id": "10"
                }
            },
            {
                "step": "4.4 Complete payment operation (Order ID: Updated Order Number, Payment Amount: Order Amount)",
                "tool": "checkout_api",
                "input_source": "place_order tool",
                "param": {
                    "order_id": "<Updated Order Number>",
                    "amount": "<Order Amount>"
                }
            }
        ],
        "reference_count": 8
    },
    {
        "question": "Yesterday my washing machine broke down, I need to schedule a repair for the 2015 Samsung washing machine model, the fault description is that it does not spin, my contact number is 13800000000, the service address is Sanlitun SOHO, Chaoyang District, Beijing, and the appointment time for the service is November 16, 2023, at 10:00:00\n",
        "toolset": [
            {
                "name": "search_authorized_service_provider",
                "input_structure": "Requires the brand and model of the appliance, user's location, and type of appliance. The user should provide a service area address for accurate results.",
                "description": "Search for authorized repair service providers",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "provider_brand": {
                            "type": "string",
                            "description": "Home appliance brand"
                        },
                        "provider_model": {
                            "type": "string",
                            "description": "Home appliance model"
                        },
                        "userLocation": {
                            "type": "string",
                            "description": "User's location"
                        },
                        "applianceType": {
                            "type": "string",
                            "description": "Type of home appliance"
                        },
                        "address": {
                            "type": "string",
                            "description": "Service area address"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides information about the authorized service provider, including contact details and service center information.",
                    "properties": {
                        "service_provider": {
                            "type": "string",
                            "description": "Information of the found service provider"
                        },
                        "service_center_contact": {
                            "type": "string",
                            "description": "Contact information of the repair service center obtained"
                        },
                        "service_center_info": {
                            "type": "string",
                            "description": "Authorized repair service center information"
                        }
                    }
                }
            },
            {
                "name": "select_nearest_service_provider",
                "input_structure": "Requires a list of service centers and the user's service address to determine proximity. The user should ensure the address is accurate.",
                "description": "Select the nearest service provider to the user",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "service_centers": {
                            "type": "array",
                            "description": "List of repair centers"
                        },
                        "user_address": {
                            "type": "string",
                            "description": "User service address"
                        },
                        "service_providers": {
                            "type": "array",
                            "description": "List of authorized repair service providers"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Identifies the nearest service provider based on the user's address.",
                    "properties": {
                        "nearest_service_provider": {
                            "type": "string",
                            "description": "The nearest service provider to the user"
                        }
                    }
                }
            },
            {
                "name": "call_service_provider",
                "input_structure": "Requires the service center's contact information and the user's phone number. The user should verify the contact details before proceeding.",
                "description": "Call the service provider's contact number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "service_center": {
                            "type": "string",
                            "description": "Maintenance service center"
                        },
                        "contact_information": {
                            "type": "string",
                            "description": "Contact phone number provided by the user"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the call, indicating whether it was successful or not.",
                    "properties": {
                        "call_status": {
                            "type": "string",
                            "description": "Status of the phone call"
                        }
                    }
                }
            },
            {
                "name": "provide_repair_details",
                "input_structure": "Requires detailed information about the appliance, fault, and user contact details. The user should ensure all information is accurate and complete.",
                "description": "Provide detailed information required for repair to the service center",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "appliance_brand": {
                            "type": "string",
                            "description": "Appliance brand"
                        },
                        "appliance_model": {
                            "type": "string",
                            "description": "Appliance model"
                        },
                        "issue_description": {
                            "type": "string",
                            "description": "Fault description"
                        },
                        "contact_information": {
                            "type": "string",
                            "description": "Contact information"
                        },
                        "service_address": {
                            "type": "string",
                            "description": "Service address"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms the submission status of the repair details to the service center.",
                    "properties": {
                        "detail_submission_status": {
                            "type": "string",
                            "description": "Information submission status"
                        }
                    }
                }
            },
            {
                "name": "confirm_available_appointment_times",
                "input_structure": "Requires the service center's information to check available times. The user should ensure the service center details are correct.",
                "description": "Confirm the available appointment times of the service center",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "service_center": {
                            "type": "string",
                            "description": "Service center"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a list of available appointment times from the service center.",
                    "properties": {
                        "available_times": {
                            "type": "array",
                            "description": "List of available appointment times"
                        }
                    }
                }
            },
            {
                "name": "finalize_appointment_time",
                "input_structure": "Requires a proposed time and a list of available times to finalize the appointment. The user should confirm the proposed time is suitable.",
                "description": "Coordinate and determine the final appointment time",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "proposed_time": {
                            "type": "string",
                            "description": "Proposed appointment time"
                        },
                        "available_times": {
                            "type": "array",
                            "description": "List of available appointment times"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms the final appointment time agreed upon with the service center.",
                    "properties": {
                        "final_time": {
                            "type": "string",
                            "description": "Final confirmed appointment time"
                        }
                    }
                }
            },
            {
                "name": "ensure_appointment_confirmation",
                "input_structure": "Requires the user's contact information and service center details to ensure confirmation is sent. The user should verify contact details are correct.",
                "description": "Ensure the user receives the appointment confirmation message sent by the service center",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "contact_information": {
                            "type": "string",
                            "description": "Contact Information"
                        },
                        "service_center": {
                            "type": "string",
                            "description": "Service Center"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates whether the appointment confirmation was successfully sent to the user.",
                    "properties": {
                        "confirmation_status": {
                            "type": "string",
                            "description": "Appointment Confirmation Status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "3.1.1 Use search engine to query Samsung official authorized service center",
                "tool": "search_authorized_service_provider",
                "input_source": "question",
                "param": {
                    "provider_brand": "Samsung"
                }
            },
            {
                "step": "3.1.2 Select the nearest repair center to the user's service address",
                "tool": "select_nearest_service_provider",
                "input_source": "search_authorized_service_provider tool",
                "param": {
                    "service_centers": "List of service centers from search results",
                    "user_address": "Sanlitun SOH"
                }
            },
            {
                "step": "3.2.1 Call the repair service center",
                "tool": "call_service_provider",
                "input_source": "select_nearest_service_provider tool",
                "param": {
                    "service_center": "Nearest repair center"
                }
            },
            {
                "step": "3.2.2 Provide washing machine information, fault description, user contact information, service address",
                "tool": "provide_repair_details",
                "input_source": "question",
                "param": {
                    "appliance_brand": "Samsung",
                    "appliance_model": "2015 washing machine",
                    "issue_description": "does not spin",
                    "contact_information": "13800000000",
                    "service_address": "Sanlitun SOH"
                }
            },
            {
                "step": "3.3.2 Confirm available appointment times at the repair service center",
                "tool": "confirm_available_appointment_times",
                "input_source": "select_nearest_service_provider tool",
                "param": {
                    "service_center": "Nearest repair center"
                }
            },
            {
                "step": "3.3.3 Coordinate and finalize the appointment time",
                "tool": "finalize_appointment_time",
                "input_source": "confirm_available_appointment_times tool",
                "param": {
                    "proposed_time": "November 1",
                    "available_times": "List of available appointment times from the repair center"
                }
            },
            {
                "step": "3.4.1 Ensure the repair service center sends appointment confirmation message to the user's mobile phone (Contact information: 13800000000)",
                "tool": "ensure_appointment_confirmation",
                "input_source": "finalize_appointment_time tool",
                "param": {
                    "contact_information": "13800000000",
                    "service_center": "Nearest repair center"
                }
            }
        ],
        "reference_count": 7
    },
    {
        "question": "Please outline and provide the complete legal regulation process for company registration in the Shanghai area, including but not limited to capital requirements and a list of documents that must be submitted, and conduct a compliance assessment of 'Future Technology Co., Ltd.' in the information technology industry to ensure it complies with relevant laws and regulations. In addition, list the labor law requirements that must be followed for recruiting full-time and part-time employees in the Shanghai area, and the potential legal risks that may be faced.",
        "toolset": [
            {
                "name": "legal_regulation_search",
                "input_structure": "Requires jurisdiction and keyword to search for specific legal regulations. The jurisdiction must be a valid legal area, and the keyword should relate to the regulation topic. The tool may request additional details such as issue date for more precise results.",
                "description": "Legal Regulation Search Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "jurisdiction": {
                            "description": "Legal Jurisdiction Area",
                            "type": "string"
                        },
                        "issueDate": {
                            "description": "Issue Date",
                            "type": "string",
                            "format": "date-time"
                        },
                        "keyword": {
                            "description": "Regulation Keyword",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides detailed content of the regulation found based on the search criteria. The result includes the regulation text and any relevant clauses or articles.",
                    "properties": {
                        "regulation_details": {
                            "description": "Specific Regulation Content",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "legal_compliance_check",
                "input_structure": "Requires company name and industry type to perform a compliance check. Additional optional parameters include user ID, employee name, phone, and country code for tracking purposes. The tool may request the date of compliance check.",
                "description": "Company Regulatory Compliance Check Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "user_id": {
                            "type": "string",
                            "description": "User ID for request tracking"
                        },
                        "employee_name": {
                            "type": "string",
                            "description": "Name of the employee being tracked"
                        },
                        "employee_phone": {
                            "type": "string",
                            "description": "Phone number of the employee being tracked"
                        },
                        "country_code": {
                            "type": "string",
                            "description": "Country code of the employee's location"
                        },
                        "companyName": {
                            "type": "string",
                            "description": "Name of the company"
                        },
                        "industryType": {
                            "type": "string",
                            "description": "Industry type of the company"
                        },
                        "checkDate": {
                            "type": "string",
                            "description": "Date of the regulatory compliance check"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the compliance status of the company, indicating whether it meets the regulatory requirements. The result includes a status message and any relevant compliance details.",
                    "properties": {
                        "compliance_status": {
                            "type": "string",
                            "description": "Compliance status"
                        }
                    }
                }
            },
            {
                "name": "labor_law_guide",
                "input_structure": "Requires region and employment type to inquire about labor laws. The region must be a valid administrative area, and employment type should specify full-time or part-time. The tool may request the inquiry date for context.",
                "description": "Labor Law Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "region": {
                            "description": "Administrative Region",
                            "type": "string"
                        },
                        "employmentType": {
                            "description": "Employment Type",
                            "type": "string"
                        },
                        "inquiryDate": {
                            "description": "Inquiry Date",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a list of relevant labor laws applicable to the specified region and employment type. The result includes law titles and brief descriptions.",
                    "properties": {
                        "labor_laws": {
                            "description": "Relevant Labor Laws",
                            "type": "array"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Inquire about the capital requirements for company registration in the Shanghai area",
                "tool": "legal_regulation_search",
                "input_source": "question",
                "param": {
                    "jurisdiction": "Shanghai",
                    "keyword": "capital requirements"
                }
            },
            {
                "step": "1.4 Inquire about the list of documents that must be submitted for company registration in the Shanghai area",
                "tool": "legal_regulation_search",
                "input_source": "question",
                "param": {
                    "jurisdiction": "Shanghai",
                    "keyword": "list of required documents"
                }
            },
            {
                "step": "1.6 Inquire about the detailed steps and procedures for company registration in the Shanghai area",
                "tool": "legal_regulation_search",
                "input_source": "question",
                "param": {
                    "jurisdiction": "Shanghai",
                    "keyword": "detailed steps and procedures"
                }
            },
            {
                "step": "2.2 Perform compliance check",
                "tool": "legal_compliance_check",
                "input_source": "question",
                "param": {
                    "companyName": "Future Technology Co",
                    "industryType": "Information Technology"
                }
            },
            {
                "step": "3.2 Inquire about the legal requirements for recruiting full-time employees",
                "tool": "labor_law_guide",
                "input_source": "question",
                "param": {
                    "region": "Shanghai",
                    "employmentType": "full-time"
                }
            },
            {
                "step": "3.3 Inquire about the legal requirements for recruiting part-time employees",
                "tool": "labor_law_guide",
                "input_source": "question",
                "param": {
                    "region": "Shanghai",
                    "employmentType": "part-time"
                }
            }
        ],
        "reference_count": 6
    },
    {
        "question": "Please automatically turn on my living room lights and air conditioning at 7 pm tonight, and set up a twice-daily feeding care plan for my newly adopted two-month-old cat weighing about 1000 grams, taking into account that I have already scheduled vaccinations for next week.",
        "toolset": [
            {
                "name": "smart_home_control",
                "input_structure": "Requires device type (e.g., light, air conditioner) and action (e.g., on, off). The time for the action must be specified in a valid date-time format. The user must have control permissions for the specified smart devices.",
                "description": "A tool that can control smart home devices such as air conditioners, lights, etc. Users can set to turn on or off these devices at specific times or under certain conditions, but cannot control non-smart devices",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "device_type": {
                            "description": "Device type",
                            "type": "string",
                            "enum": [
                                "Air conditioner",
                                "Light",
                                "Smart socket",
                                "Smart TV",
                                "Smart curtain"
                            ]
                        },
                        "action": {
                            "description": "Operation",
                            "type": "string",
                            "enum": [
                                "On",
                                "Off"
                            ]
                        },
                        "time": {
                            "description": "Operation time",
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-01-01T00:00:00Z"
                        },
                        "condition": {
                            "description": "Specific conditions such as temperature",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the control status of the device, such as whether the device was successfully turned on or off.",
                    "properties": {
                        "control_status": {
                            "description": "Control information",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "pet_care_tool",
                "input_structure": "Requires pet type, age, weight, feeding frequency, and vaccination status. The tool calculates feeding amounts and schedules based on these inputs.",
                "description": "Pet care tool, used to help owners take better care of their pets",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "petType": {
                            "type": "string",
                            "description": "Type of pet, supports both cat and dog",
                            "enum": [
                                "cat",
                                "dog"
                            ],
                            "example": "cat"
                        },
                        "petAge": {
                            "type": "integer",
                            "description": "Age of the pet in months, must be greater than 0 and less than 200",
                            "minimum": 0,
                            "maximum": 200,
                            "example": 12
                        },
                        "petWeight": {
                            "type": "integer",
                            "description": "Weight of the pet in grams, must be greater than 0",
                            "minimum": 0,
                            "example": 5000
                        },
                        "feedFrequency": {
                            "type": "string",
                            "description": "Feeding frequency, such as twice a day, three times a week, etc."
                        },
                        "walkFrequency": {
                            "type": "string",
                            "description": "Dog walking frequency, such as once a day, twice a week, etc., only valid for dog type pets"
                        },
                        "vaccineStatus": {
                            "type": "boolean",
                            "description": "Whether the pet has been vaccinated"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the pet care plan, including feeding schedule, walking schedule (if applicable), vaccination recommendations, and weight management suggestions.",
                    "properties": {
                        "carePlan": {
                            "type": "object",
                            "description": "Pet care plan",
                            "properties": {
                                "feedingSchedule": {
                                    "type": "string",
                                    "description": "Recommended feeding schedule"
                                },
                                "walkingSchedule": {
                                    "type": "string",
                                    "description": "Recommended dog walking schedule, only valid for dog type pets"
                                },
                                "vaccineRecommendations": {
                                    "type": "array",
                                    "description": "Recommended vaccination schedule"
                                },
                                "weightManagement": {
                                    "type": "string",
                                    "description": "Weight management suggestions"
                                }
                            }
                        }
                    }
                }
            },
            {
                "name": "set_reminder",
                "input_structure": "Requires reminder title, time, and content. Optionally, recipient and frequency can be specified. The tool sets reminders based on these inputs.",
                "description": "Set Reminder",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "time": {
                            "type": "string",
                            "description": "Reminder Time"
                        },
                        "content": {
                            "type": "string",
                            "description": "Reminder Content"
                        },
                        "reminder_title": {
                            "type": "string",
                            "description": "Reminder Title"
                        },
                        "agenda_id": {
                            "type": "string",
                            "description": "Agenda ID"
                        },
                        "recipient": {
                            "type": "string",
                            "description": "Recipient of Reminder"
                        },
                        "reminder_date": {
                            "type": "string",
                            "description": "Reminder Date"
                        },
                        "action": {
                            "type": "string",
                            "description": "Action to perform after reminder"
                        },
                        "contactInformation": {
                            "type": "string",
                            "description": "User's Contact Information"
                        },
                        "frequency": {
                            "description": "Frequency of reminder setting, options: once, daily, weekly Monday to Sunday, default is once",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the status of the reminder setting, including whether it was set successfully.",
                    "properties": {
                        "reminder_status": {
                            "type": "string",
                            "description": "Reminder Setting Status"
                        },
                        "reminder_set": {
                            "description": "Whether the reminder was set successfully",
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "name": "search_information",
                "input_structure": "Requires a topic string to search for information. The tool retrieves relevant information based on the topic.",
                "description": "Search for information on a specific topic",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "topic": {
                            "type": "string",
                            "description": "The topic being searched"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the search status and the information obtained from the search.",
                    "properties": {
                        "search_status": {
                            "description": "Whether the search was successful",
                            "type": "string"
                        },
                        "information": {
                            "description": "The content of the information obtained",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2.2 Add action to turn on living room lights",
                "tool": "smart_home_control",
                "input_source": "question",
                "param": {
                    "device_type": "light",
                    "action": "on",
                    "time": "Tonight at 7 pm"
                }
            },
            {
                "step": "1.2.3 Add action to turn on air conditioning",
                "tool": "smart_home_control",
                "input_source": "question",
                "param": {
                    "device_type": "air conditioner",
                    "action": "on",
                    "time": "Tonight at 7 pm"
                }
            },
            {
                "step": "2.1.4 Calculate the amount of food for each feeding",
                "tool": "pet_care_tool",
                "input_source": "question",
                "param": {
                    "petType": "cat",
                    "petAge": "2",
                    "petWeight": "1000",
                    "feedFrequency": "Twice a day",
                    "vaccineStatus": "true"
                }
            },
            {
                "step": "2.1.5 Set reminder tasks to feed on time",
                "tool": "set_reminder",
                "input_source": "pet_care_tool tool",
                "param": {
                    "reminder_title": "Feeding"
                }
            },
            {
                "step": "2.2.2 Set reminder tasks so as not to forget the vaccination date",
                "tool": "set_reminder",
                "input_source": "question",
                "param": {
                    "reminder_title": "Vaccination"
                }
            },
            {
                "step": "2.3.1 Find information on caring for a two-month-old domestic cat",
                "tool": "search_information",
                "input_source": "question",
                "param": {
                    "topic": "Caring for a two-month-old domestic cat"
                }
            }
        ],
        "reference_count": 6
    },
    {
        "question": "I need to log into my two different accounts to update information, the account IDs are 123456 and 654321, and the passwords for both are passwd123.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account ID and password for authentication. Optionally, a verification code or username may be needed. The user must ensure credentials are correct and network access is available.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, typically containing a string message such as 'success' or 'failure'.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "update_account_info",
                "input_structure": "Requires account ID to identify which account's information is to be updated. The user must have access to the account and permissions to make changes.",
                "description": "Account Information Update Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the update status, typically containing a string message such as 'update successful' or 'update failed'.",
                    "properties": {
                        "update_status": {
                            "description": "Information Update Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "account_logout",
                "input_structure": "Requires account ID to log out from the specified account. The user must be logged in to perform this action.",
                "description": "Account Logout Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the logout status, typically containing a string message such as 'logout successful' or 'logout failed'.",
                    "properties": {
                        "logout_status": {
                            "description": "Logout Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Log into account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "123456",
                    "password": "passwd123"
                }
            },
            {
                "step": "2.2 Update information",
                "tool": "update_account_info",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "123456"
                }
            },
            {
                "step": "2.4 Log out of account 123456",
                "tool": "account_logout",
                "input_source": "update_account_info tool",
                "param": {
                    "account_id": "123456"
                }
            },
            {
                "step": "3.2 Log into account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "654321",
                    "password": "passwd123"
                }
            },
            {
                "step": "4.2 Update information",
                "tool": "update_account_info",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "654321"
                }
            },
            {
                "step": "4.4 Log out of account 654321",
                "tool": "account_logout",
                "input_source": "update_account_info tool",
                "param": {
                    "account_id": "654321"
                }
            }
        ],
        "reference_count": 6
    },
    {
        "question": "I need to create a 'Work' schedule with a blue tag and the highest priority, starting from today, Tuesday, 2023-05-02, and covering all the weekdays until Friday of this week.",
        "toolset": [
            {
                "name": "create_schedule",
                "input_structure": "Requires a schedule title and optionally a task description, start and end times, location, and associated tag ID. The user must provide a valid title for the schedule.",
                "description": "Create a new schedule",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "schedule_id": {
                            "type": "string",
                            "description": "ID of the schedule"
                        },
                        "task": {
                            "type": "string",
                            "description": "Task description"
                        },
                        "start_time": {
                            "type": "string",
                            "description": "Start time"
                        },
                        "end_time": {
                            "type": "string",
                            "description": "End time"
                        },
                        "location": {
                            "type": "string",
                            "description": "Task location"
                        },
                        "schedule_title": {
                            "type": "string",
                            "description": "Schedule title"
                        },
                        "schedule_date": {
                            "type": "string",
                            "description": "Schedule date"
                        },
                        "schedule_description": {
                            "type": "string",
                            "description": "Description of the schedule"
                        },
                        "tag_id": {
                            "type": "string",
                            "description": "ID of the associated tag"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A new schedule object is created with a unique schedule ID and the specified title.",
                    "properties": {
                        "status": {
                            "description": "Whether the schedule was created successfully",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "set_schedule_date_range",
                "input_structure": "Requires a schedule title and valid start and end dates. Dates must be in the format YYYY-MM-DD.",
                "description": "Set the start and end dates of the schedule",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "schedule_title": {
                            "type": "string",
                            "description": "Title of the schedule"
                        },
                        "start_date": {
                            "type": "string",
                            "description": "Start date of the schedule"
                        },
                        "end_date": {
                            "type": "string",
                            "description": "End date of the schedule"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The schedule's date range is updated to reflect the specified start and end dates.",
                    "properties": {
                        "date_range_status": {
                            "description": "Whether the date range was successfully set",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "set_schedule_repetition",
                "input_structure": "Requires a schedule title, repetition type, and end date. Repetition type must be a valid option such as 'Daily', 'Weekly', or 'Weekdays'.",
                "description": "Set the repetition type and end date of the schedule",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "schedule_title": {
                            "type": "string",
                            "description": "Title of the schedule"
                        },
                        "repetition_type": {
                            "type": "string",
                            "description": "Type of repetition"
                        },
                        "end_date": {
                            "type": "string",
                            "description": "End date of repetition"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The schedule's repetition settings are updated to reflect the specified type and end date.",
                    "properties": {
                        "repetition_status": {
                            "description": "Whether the repetition setting is successful",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "set_schedule_tag",
                "input_structure": "Requires a schedule title and tag details such as tag ID, name, color, and description. The tag color must be a valid color name or code.",
                "description": "Set a tag for the schedule",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "tag_id": {
                            "type": "string",
                            "description": "The ID of the tag"
                        },
                        "schedule_title": {
                            "type": "string",
                            "description": "The title of the schedule"
                        },
                        "tag_name": {
                            "type": "string",
                            "description": "The name of the tag"
                        },
                        "tag_color": {
                            "type": "string",
                            "description": "The color of the tag"
                        },
                        "tag_description": {
                            "type": "string",
                            "description": "The description of the tag"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The schedule is updated with the specified tag, including color and description.",
                    "properties": {
                        "outcome": {
                            "description": "Whether the tag was successfully set",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "set_schedule_priority",
                "input_structure": "Requires a schedule title and a priority level. Priority must be a valid level such as 'Low', 'Medium', 'High', or 'Highest'.",
                "description": "Set priority for schedule",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "schedule_title": {
                            "type": "string",
                            "description": "Title of the schedule"
                        },
                        "priority": {
                            "type": "string",
                            "description": "Priority of the schedule"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The schedule's priority is updated to the specified level.",
                    "properties": {
                        "priority_status": {
                            "description": "Whether the priority was successfully set",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "save_schedule",
                "input_structure": "Requires a schedule title. The schedule must have been previously created and configured.",
                "description": "Save schedule settings",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "schedule_title": {
                            "type": "string",
                            "description": "Title of the schedule"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The schedule is saved with all the configured settings.",
                    "properties": {
                        "save_status": {
                            "description": "Whether the schedule was saved successfully",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.3 Create a new schedule and set the title (Title: Work)",
                "tool": "create_schedule",
                "input_source": "question",
                "param": {
                    "schedule_title": "Work"
                }
            },
            {
                "step": "1.4 Set the schedule date range (Title: Work, Start date: 2023-05-02, End date: 2023-05-05)",
                "tool": "set_schedule_date_range",
                "input_source": "create_schedule tool",
                "param": {
                    "schedule_title": "Work",
                    "start_date": "2023-05-02",
                    "end_date": "2023-05-05"
                }
            },
            {
                "step": "1.5 Set schedule repetition (Title: Work, Repetition type: Weekdays, End date: 2023-05-05)",
                "tool": "set_schedule_repetition",
                "input_source": "set_schedule_date_range tool",
                "param": {
                    "schedule_title": "Work",
                    "repetition_type": "Weekdays",
                    "end_date": "2023-05-05"
                }
            },
            {
                "step": "1.6 Set schedule tag (Title: Work, Tag color: Blue)",
                "tool": "set_schedule_tag",
                "input_source": "set_schedule_repetition tool",
                "param": {
                    "schedule_title": "Work",
                    "tag_color": "Blue"
                }
            },
            {
                "step": "1.7 Set schedule priority (Title: Work, Priority: Highest)",
                "tool": "set_schedule_priority",
                "input_source": "set_schedule_tag tool",
                "param": {
                    "schedule_title": "Work",
                    "priority": "Highest"
                }
            },
            {
                "step": "1.8 Save schedule (Title: Work)",
                "tool": "save_schedule",
                "input_source": "set_schedule_priority tool",
                "param": {
                    "schedule_title": "Work"
                }
            }
        ],
        "reference_count": 6
    },
    {
        "question": "I want to know the balances of my two bank accounts, with account IDs 123456 and 7891011, both passwords are mySecr3tP@ss.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account ID and password for authentication. Optionally, a verification code may be needed for two-factor authentication. The user must provide valid credentials to access the account.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, typically a success or failure message.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "balance_query",
                "input_structure": "Requires account ID to query the balance. Optionally, a threshold amount can be specified to trigger alerts if the balance falls below this value.",
                "description": "Query and return account balance information",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "type": "integer",
                            "description": "Account ID"
                        },
                        "threshold_amount": {
                            "type": "number",
                            "description": "Balance threshold"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the balance information and the current balance as an integer.",
                    "properties": {
                        "balance_info": {
                            "description": "Account balance information",
                            "type": "string"
                        },
                        "balance": {
                            "type": "integer",
                            "description": "Current account balance"
                        }
                    }
                }
            },
            {
                "name": "account_logout",
                "input_structure": "Requires account ID to log out of the session. Ensures that the user is securely logged out from the account.",
                "description": "Account Logout Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the logout status, typically a success or failure message.",
                    "properties": {
                        "logout_status": {
                            "description": "Logout Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Log into account (Account ID: 123456, Account Password: mySecr3tP@ss)",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "123456",
                    "password": "mySecr3tP@ss"
                }
            },
            {
                "step": "3. Check the balance of the first account",
                "tool": "balance_query",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "123456"
                }
            },
            {
                "step": "4. Log out of the first bank account",
                "tool": "account_logout",
                "input_source": "balance_query tool",
                "param": {
                    "account_id": "123456"
                }
            },
            {
                "step": "5.1 Log into account (Account ID: 7891011, Account Password: mySecr3tP@ss)",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "7891011",
                    "password": "mySecr3tP@ss"
                }
            },
            {
                "step": "6. Check the balance of the second account",
                "tool": "balance_query",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "7891011"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "Please use my identity information, including name Zhang San, ID number 123456789012345678 and verification code 8888, to inquire about the progress of the credit card application I submitted. Then log in to my online banking account with account ID abc123, password password456 and verification code 5566 to check the account balance of my bank card number 6222000001111111111, and inquire about the amount owed on my credit card account 6222888800000000. Finally, repay 2500 yuan from my debit card number 6222000001111111111 to the credit card account.",
        "toolset": [
            {
                "name": "credit_card_progress",
                "input_structure": "Requires the user's full name, identification type, identification number, and a verification code. The user must provide valid identity information to query the credit card application status.",
                "description": "Query the progress of credit card application/handling",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "description": "Name",
                            "type": "string"
                        },
                        "id_type": {
                            "description": "Type of Identification",
                            "type": "string"
                        },
                        "id_number": {
                            "description": "Identification Number",
                            "type": "string"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the application status and detailed progress information of the credit card application.",
                    "properties": {
                        "status": {
                            "description": "Application Status",
                            "type": "string"
                        },
                        "progress_details": {
                            "description": "Progress Details",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "account_login",
                "input_structure": "Requires account ID, username, password, and a verification code. The user must provide valid login credentials to access the online banking account.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, confirming whether the login was successful or not.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "bank_balance_query",
                "input_structure": "Requires a valid bank card number to query the balance. The user must ensure the card number is correct and active.",
                "description": "Query the balance information for a specified bank card number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "bank_card_number": {
                            "description": "Bank card number",
                            "type": "string",
                            "default": ""
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the current balance of the specified bank card.",
                    "properties": {
                        "balance": {
                            "description": "Bank card balance",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "credit_card_debt",
                "input_structure": "Requires the credit card number, currency type, and optionally the account ID and date range. The user must provide valid credit card details to query the debt amount.",
                "description": "Query credit card debt amount",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "credit_card_number": {
                            "description": "Credit card number",
                            "type": "string"
                        },
                        "currency": {
                            "description": "Currency",
                            "type": "string",
                            "default": "CNY"
                        },
                        "account_id": {
                            "type": "integer",
                            "description": "Credit card account ID"
                        },
                        "card_last_digits": {
                            "type": "string",
                            "description": "Last digits of credit card"
                        },
                        "date_range": {
                            "type": "string",
                            "description": "Date range for the query"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the current debt amount of the specified credit card.",
                    "properties": {
                        "debt": {
                            "description": "Current credit card debt amount",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "credit_card_repayment",
                "input_structure": "Requires the overdraft card number, repayment amount, payment card number, and currency. The user must provide valid card details and ensure sufficient funds for the repayment.",
                "description": "Credit Card Repayment",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "overdraft_card_number": {
                            "description": "Overdraft Card Number",
                            "type": "string"
                        },
                        "repayment_amount": {
                            "description": "Repayment Amount",
                            "type": "number"
                        },
                        "payment_card_number": {
                            "description": "Payment Card Number",
                            "type": "string"
                        },
                        "currency": {
                            "description": "Currency",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing confirmation information of the repayment transaction.",
                    "properties": {
                        "confirmation": {
                            "description": "Repayment Confirmation Information",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Submit credit card progress inquiry request",
                "tool": "credit_card_progress",
                "input_source": "question",
                "param": {
                    "name": "Zhang San",
                    "id_type": "ID card",
                    "id_number": "123456789012345678",
                    "verification_code": "8888"
                }
            },
            {
                "step": "2.2 Perform online banking account login",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "abc123",
                    "password": "password456",
                    "verification_code": "5566"
                }
            },
            {
                "step": "3.2 Inquire about debit card account balance",
                "tool": "bank_balance_query",
                "input_source": "question",
                "param": {
                    "bank_card_number": "6222000001111111111"
                }
            },
            {
                "step": "4.2 Inquire about credit card debt amount",
                "tool": "credit_card_debt",
                "input_source": "question",
                "param": {
                    "credit_card_number": "6222888800000000"
                }
            },
            {
                "step": "5.2 Perform credit card repayment operation",
                "tool": "credit_card_repayment",
                "input_source": "question",
                "param": {
                    "overdraft_card_number": "6222888800000000",
                    "repayment_amount": "2500",
                    "payment_card_number": "6222000001111111111",
                    "currency": "RMB"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "Please log into my account using username user123 and password password321, check the amount of British pounds I currently hold, and purchase an additional 5000 British pounds at the latest exchange rate.",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account credentials including username and password. Optionally, a verification code may be needed. The tool needs network access to authenticate the user against the account service.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status object indicating whether the login was successful, typically containing a login status message.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "foreign_currency_query",
                "input_structure": "Requires the type of currency to query. The tool accesses the user's account to retrieve current holdings of the specified currency.",
                "description": "Query the amount of specific foreign currency held in the account",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "currency_type": {
                            "description": "Currency type",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A string detailing the current amount of the specified foreign currency held in the account.",
                    "properties": {
                        "foreign_currency_info": {
                            "description": "Current foreign currency holding information",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "exchange_rate_query",
                "input_structure": "Requires the type of currency for which the exchange rate is being queried. The tool accesses financial data services to retrieve the latest exchange rate.",
                "description": "Query the latest exchange rate for a specific currency",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "currency_type": {
                            "type": "string",
                            "description": "The type of currency for which the exchange rate is being queried"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A numeric value representing the current exchange rate for the specified currency.",
                    "properties": {
                        "exchange_rate": {
                            "type": "number",
                            "description": "The exchange rate of the current currency"
                        }
                    }
                }
            },
            {
                "name": "currency_conversion",
                "input_structure": "Requires the amount to be converted, the original and target currency types, and the current exchange rate. The tool calculates the equivalent amount in the target currency.",
                "description": "Currency Conversion Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "description": "Amount to be converted",
                            "type": "integer"
                        },
                        "from_currency": {
                            "description": "Original currency type (e.g., USD, CNY, etc.)",
                            "type": "string"
                        },
                        "to_currency": {
                            "description": "Target currency type (e.g., EUR, JPY, etc.)",
                            "type": "string"
                        },
                        "exchange_rate": {
                            "type": "number",
                            "description": "Current exchange rate of foreign currency"
                        },
                        "date": {
                            "type": "string",
                            "description": "The date of the exchange rate query, must be a past date",
                            "format": "date-time",
                            "example": "2022-01-01"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A numeric result of the conversion and a status message indicating success or failure.",
                    "properties": {
                        "conversion_result": {
                            "description": "Result after conversion",
                            "type": "number"
                        },
                        "exchange_status": {
                            "type": "string",
                            "description": "Information on whether the exchange was successful"
                        },
                        "date": {
                            "type": "string",
                            "description": "Date of the exchange rate used",
                            "format": "date-time"
                        }
                    }
                }
            },
            {
                "name": "foreign_currency_purchase",
                "input_structure": "Requires the currency type, purchase amount, and exchange rate. The tool executes a purchase transaction using the user's account balance.",
                "description": "Foreign Exchange Purchase Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "currency_type": {
                            "description": "Currency Type",
                            "type": "string"
                        },
                        "buy_price": {
                            "description": "Purchase Price, if not provided then the current latest price",
                            "type": "number"
                        },
                        "exchange_rate": {
                            "description": "Exchange Rate at the time of purchase",
                            "type": "number"
                        },
                        "buy_amount": {
                            "description": "Amount of Money to Purchase",
                            "type": "integer"
                        },
                        "account_balance": {
                            "description": "Account Balance",
                            "type": "number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation message indicating whether the purchase was successful, along with transaction details.",
                    "properties": {
                        "purchased_info": {
                            "description": "Information on whether the purchase was successful",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Perform account login operation",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "user123",
                    "password": "password321"
                }
            },
            {
                "step": "2.2 Check the current amount of British pounds held",
                "tool": "foreign_currency_query",
                "input_source": "question",
                "param": {
                    "currency_type": "British pounds"
                }
            },
            {
                "step": "3.2 Query and record the current exchange rate of British pounds (Exchange Rate: Current exchange rate of British pounds)",
                "tool": "exchange_rate_query",
                "input_source": "question",
                "param": {
                    "currency_type": "British pounds"
                }
            },
            {
                "step": "4.2 Calculate the local currency amount needed to purchase 5000 British pounds (Required Local Currency Amount: Amount needed to purchase 5000 British pounds)",
                "tool": "currency_conversion",
                "input_source": "exchange_rate_query tool",
                "param": {
                    "amount": "5000",
                    "exchange_rate": "Current exchange rate of British pounds"
                }
            },
            {
                "step": "5.2 Execute the purchase of British pounds operation",
                "tool": "foreign_currency_purchase",
                "input_source": "currency_conversion tool",
                "param": {
                    "currency_type": "British pounds",
                    "buy_amount": "Local currency amount required to purchase 5000 British pounds"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "Please reserve a table for dinner for me and another guest at the restaurant, order a serving of Kung Pao Chicken (Dish ID 101) and two bowls of rice (Dish ID 105), combine these two orders, randomly assign a table, and finally use online payment to settle the bill for this dinner.",
        "toolset": [
            {
                "name": "menu_select_api",
                "input_structure": "Requires dish ID and quantity. The dish ID must be valid and correspond to an item on the menu. Quantity must be a positive integer. User confirmation may be needed for order placement.",
                "description": "Ordering API for selecting dishes",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dish_id": {
                            "description": "Dish ID",
                            "type": "integer"
                        },
                        "quantity": {
                            "description": "Quantity of dishes",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Generates an order ID for each dish ordered, which can be used for further operations like merging or checkout.",
                    "properties": {
                        "order_id": {
                            "description": "Generated order ID for subsequent ordering and checkout operations",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "merge_orders",
                "input_structure": "Requires a list of order IDs to merge and a table ID. The order IDs must be valid and belong to the same restaurant. The table ID must be valid and available.",
                "description": "Merge multiple orders into one order",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "restaurant_name": {
                            "type": "string",
                            "description": "Restaurant name"
                        },
                        "order_ids": {
                            "type": "array",
                            "description": "List of order IDs to be merged",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "table_id": {
                            "type": "integer",
                            "description": "Table number to merge into"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the merge operation and a new merged order ID.",
                    "properties": {
                        "merge_status": {
                            "type": "string",
                            "description": "Order merge status"
                        },
                        "merged_order_id": {
                            "description": "Merged order ID",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "assign_random_table",
                "input_structure": "Requires the number of guests to assign a table. The number must be a positive integer. The system will automatically select an available table.",
                "description": "Randomly assign a dining table based on the number of diners",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "number_of_guests": {
                            "description": "Number of diners",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides an assigned table ID which can be used for order placement and merging.",
                    "properties": {
                        "table_id": {
                            "description": "Assigned table ID",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "checkout_api",
                "input_structure": "Requires an order ID, amount, and payment method. The order ID must be valid and correspond to a completed order. The amount must match the total bill. The payment method must be supported by the restaurant.",
                "description": "Checkout API, dependent on the result of the previous Place Order API 'Order ID'",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "order_id": {
                            "description": "Order ID",
                            "type": "integer"
                        },
                        "amount": {
                            "description": "Payment Amount",
                            "type": "integer"
                        },
                        "payment_method": {
                            "description": "Payment Method",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the total bill amount and the status of the payment operation.",
                    "properties": {
                        "total_bill": {
                            "description": "Total Bill Amount",
                            "type": "integer"
                        },
                        "payment_status": {
                            "description": "Payment Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.2.2.1 Order a serving of Kung Pao Chicken",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "101",
                    "quantity": "1"
                }
            },
            {
                "step": "2.2.2.2 Order two bowls of rice",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "105",
                    "quantity": "2"
                }
            },
            {
                "step": "2.2.4 Request to merge orders",
                "tool": "merge_orders",
                "input_source": "menu_select_api tool",
                "param": {
                    "order_ids": "['<Kung Pao Chicken order ID>', '<Rice order ID>']"
                }
            },
            {
                "step": "2.2.5 Request to randomly assign a table",
                "tool": "assign_random_table",
                "input_source": "question",
                "param": {
                    "number_of_guests": "2"
                }
            },
            {
                "step": "3.1 Obtain the total order amount",
                "tool": "checkout_api",
                "input_source": "merge_orders tool",
                "param": {
                    "order_id": "<Combined order ID>"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "Tonight I will go to a restaurant for dinner with two friends, I need to reserve a table and pre-order a serving of Kung Pao Chicken and a serving of Steamed Sea Bass, then please help me combine these two dish orders and prepare the bill, but I will choose to pay with my mobile phone after arriving at the restaurant.",
        "toolset": [
            {
                "name": "table_booking_api",
                "input_structure": "Requires restaurant name, contact information, reservation time, date, and number of people. Optional fields include special dietary requirements and table preferences. User confirmation is needed for reservation details.",
                "description": "Restaurant table reservation",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "User name"
                        },
                        "contact": {
                            "type": "string",
                            "description": "User contact information"
                        },
                        "table_id": {
                            "type": "integer",
                            "description": "Table number"
                        },
                        "time": {
                            "type": "string",
                            "description": "Reservation time"
                        },
                        "restaurant_name": {
                            "type": "string",
                            "description": "Restaurant name"
                        },
                        "date": {
                            "type": "string",
                            "description": "Reservation date"
                        },
                        "number_of_people": {
                            "type": "string",
                            "description": "Number of people for the reservation"
                        },
                        "special_requirements": {
                            "type": "string",
                            "description": "Special dietary requirements"
                        },
                        "restaurant_id": {
                            "type": "integer",
                            "description": "Restaurant ID"
                        },
                        "seats": {
                            "type": "integer",
                            "description": "Number of seats at the table"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing reservation status, reservation ID, and detailed reservation information.",
                    "properties": {
                        "reservation_status": {
                            "type": "string",
                            "description": "Reservation status"
                        },
                        "reservation_id": {
                            "type": "integer",
                            "description": "Reservation ID"
                        },
                        "reservation_details": {
                            "type": "object",
                            "description": "Reservation details"
                        }
                    }
                }
            },
            {
                "name": "request_menu",
                "input_structure": "Requires the restaurant name to request the electronic menu. The user should ensure the restaurant supports electronic menu requests.",
                "description": "Request the restaurant to provide an electronic menu",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "restaurant_name": {
                            "type": "string",
                            "description": "Restaurant name"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the electronic menu with available dishes and prices.",
                    "properties": {
                        "menu": {
                            "type": "object",
                            "description": "Electronic menu"
                        }
                    }
                }
            },
            {
                "name": "submit_preorder",
                "input_structure": "Requires the names of dishes to be pre-ordered and the restaurant name. The user should verify dish availability before submission.",
                "description": "Submit the pre-order menu to the restaurant",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dish1": {
                            "type": "string",
                            "description": "Name of the first dish"
                        },
                        "dish2": {
                            "type": "string",
                            "description": "Name of the second dish"
                        },
                        "restaurant_name": {
                            "type": "string",
                            "description": "Restaurant name"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the status of the pre-order submission.",
                    "properties": {
                        "preorder_status": {
                            "type": "string",
                            "description": "Pre-order submission status"
                        }
                    }
                }
            },
            {
                "name": "merge_orders",
                "input_structure": "Requires restaurant name, list of order IDs to be merged, and table ID. The user should confirm all orders are from the same restaurant.",
                "description": "Merge multiple orders into one order",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "restaurant_name": {
                            "type": "string",
                            "description": "Restaurant name"
                        },
                        "order_ids": {
                            "type": "array",
                            "description": "List of order IDs to be merged",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "table_id": {
                            "type": "integer",
                            "description": "Table number to merge into"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the status of the order merge and the new merged order ID.",
                    "properties": {
                        "merge_status": {
                            "type": "string",
                            "description": "Order merge status"
                        },
                        "merged_order_id": {
                            "description": "Merged order ID",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "confirm_payment_method",
                "input_structure": "Requires restaurant contact information, restaurant name, and desired payment method. The user should ensure the restaurant supports the chosen payment method.",
                "description": "Confirm payment method",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "restaurant_contact": {
                            "type": "string",
                            "description": "Restaurant contact information"
                        },
                        "restaurant_name": {
                            "type": "string",
                            "description": "Restaurant name"
                        },
                        "payment_method": {
                            "type": "string",
                            "description": "Payment method"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A boolean indicating whether the payment method has been confirmed.",
                    "properties": {
                        "payment_method_confirmed": {
                            "type": "boolean",
                            "description": "Whether the payment method has been confirmed"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.4 Contact restaurant to reserve a table",
                "tool": "table_booking_api",
                "input_source": "question",
                "param": {
                    "restaurant_name": "restaurant name",
                    "contact": "restaurant contact",
                    "time": "tonight",
                    "number_of_people": "3"
                }
            },
            {
                "step": "2.1 Obtain menu information",
                "tool": "request_menu",
                "input_source": "question",
                "param": {
                    "restaurant_name": "restaurant name"
                }
            },
            {
                "step": "2.3 Submit pre-order menu",
                "tool": "submit_preorder",
                "input_source": "question",
                "param": {
                    "dish1": "Kung Pao Chicken",
                    "dish2": "Steamed Sea Bass",
                    "restaurant_name": "restaurant name"
                }
            },
            {
                "step": "3.1 Request to merge bills",
                "tool": "merge_orders",
                "input_source": "submit_preorder tool",
                "param": {
                    "restaurant_name": "restaurant name",
                    "order_ids": "<pre-order submission status>"
                }
            },
            {
                "step": "3.2.1 Notify restaurant to use mobile payment after arrival (Payment method: mobile payment)",
                "tool": "confirm_payment_method",
                "input_source": "question",
                "param": {
                    "restaurant_name": "restaurant name",
                    "payment_method": "mobile payment"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "Please book table number 5 for me, and order one serving of Tomato Scrambled Eggs with ID 101 and two servings of Steamed Perch with ID 202, then immediately check out for these dishes and the table.",
        "toolset": [
            {
                "name": "book_table",
                "input_structure": "Requires restaurant ID, number of people, reservation time, date, table number, reservator's name, and contact phone. The user must provide a valid table number and ensure the restaurant can accommodate the reservation.",
                "description": "Reserve a table",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "restaurant_id": {
                            "type": "string",
                            "description": "Restaurant ID"
                        },
                        "number_of_people": {
                            "type": "integer",
                            "description": "Number of diners"
                        },
                        "reservation_time": {
                            "type": "string",
                            "description": "Reservation time"
                        },
                        "date": {
                            "type": "string",
                            "description": "Reservation date"
                        },
                        "table_number": {
                            "type": "string",
                            "description": "Table number"
                        },
                        "name": {
                            "type": "string",
                            "description": "Reservator's name"
                        },
                        "phone": {
                            "type": "string",
                            "description": "Reservator's contact phone"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the reserved table ID, booking status, and confirmation information. Example: {\"table_id\": 5, \"booking_status\": \"confirmed\", \"confirmation\": \"Reservation successful.\"}",
                    "properties": {
                        "table_id": {
                            "description": "Reserved table ID",
                            "type": "integer"
                        },
                        "booking_status": {
                            "type": "string",
                            "description": "Booking status"
                        },
                        "confirmation": {
                            "type": "string",
                            "description": "Booking confirmation information"
                        }
                    }
                }
            },
            {
                "name": "menu_select_api",
                "input_structure": "Requires dish ID and quantity. The user must ensure the dish ID is valid and the quantity is available.",
                "description": "Ordering API for selecting dishes",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dish_id": {
                            "description": "Dish ID",
                            "type": "integer"
                        },
                        "quantity": {
                            "description": "Quantity of dishes",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Generates an order ID for the selected dishes. Example: {\"order_id\": 12345}",
                    "properties": {
                        "order_id": {
                            "description": "Generated order ID for subsequent ordering and checkout operations",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "place_order",
                "input_structure": "Requires a list of dishes with dish ID and quantity, table ID, and order ID. The user must ensure all IDs are valid and correspond to the current session.",
                "description": "Place an order based on dish information and table number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dishes": {
                            "type": "array",
                            "description": "List of dishes, each dish includes dish ID and quantity"
                        },
                        "table_id": {
                            "type": "integer",
                            "description": "Table number"
                        },
                        "order_id": {
                            "type": "integer",
                            "description": "Order number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the order ID and confirmation message. Example: {\"order_id\": 12345, \"confirmation\": \"Order placed successfully.\"}",
                    "properties": {
                        "order_id": {
                            "type": "integer",
                            "description": "Generated order ID"
                        },
                        "confirmation": {
                            "description": "Order confirmation message",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "checkout_api",
                "input_structure": "Requires order ID, payment amount, and payment method. The user must ensure the order ID is valid and the payment method is supported.",
                "description": "Checkout API, dependent on the result of the previous Place Order API 'Order ID'",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "order_id": {
                            "description": "Order ID",
                            "type": "integer"
                        },
                        "amount": {
                            "description": "Payment Amount",
                            "type": "integer"
                        },
                        "payment_method": {
                            "description": "Payment Method",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the total bill amount and payment status. Example: {\"total_bill\": 100, \"payment_status\": \"Paid\"}",
                    "properties": {
                        "total_bill": {
                            "description": "Total Bill Amount",
                            "type": "integer"
                        },
                        "payment_status": {
                            "description": "Payment Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Book the table",
                "tool": "book_table",
                "input_source": "question",
                "param": {
                    "table_number": "5"
                }
            },
            {
                "step": "2.2 Select Dish 1",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "101",
                    "quantity": "1"
                }
            },
            {
                "step": "2.3 Select Dish 2",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "202",
                    "quantity": "2"
                }
            },
            {
                "step": "2.5 Place the order",
                "tool": "place_order",
                "input_source": "menu_select_api tool",
                "param": {
                    "order_id": "<Order ID from ordering>",
                    "table_id": "5"
                }
            },
            {
                "step": "3.2 Check out and pay",
                "tool": "checkout_api",
                "input_source": "place_order tool",
                "param": {
                    "order_id": "<Order ID from ordering>"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "Please reserve table number 15 for me at the restaurant, and order two dishes of number 3 and an additional two desserts of number 5, then help me complete the payment.",
        "toolset": [
            {
                "name": "table_booking_api",
                "input_structure": "Requires user name, contact information, table ID, reservation time, restaurant name, reservation date, number of people, special requirements, restaurant ID, and number of seats. The user must provide a valid table ID and ensure the restaurant is open at the requested time.",
                "description": "Restaurant table reservation",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "User name"
                        },
                        "contact": {
                            "type": "string",
                            "description": "User contact information"
                        },
                        "table_id": {
                            "type": "integer",
                            "description": "Table number"
                        },
                        "time": {
                            "type": "string",
                            "description": "Reservation time"
                        },
                        "restaurant_name": {
                            "type": "string",
                            "description": "Restaurant name"
                        },
                        "date": {
                            "type": "string",
                            "description": "Reservation date"
                        },
                        "number_of_people": {
                            "type": "string",
                            "description": "Number of people for the reservation"
                        },
                        "special_requirements": {
                            "type": "string",
                            "description": "Special dietary requirements"
                        },
                        "restaurant_id": {
                            "type": "integer",
                            "description": "Restaurant ID"
                        },
                        "seats": {
                            "type": "integer",
                            "description": "Number of seats at the table"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing reservation status, reservation ID, and detailed reservation information. Example: {\"reservation_status\": \"confirmed\", \"reservation_id\": 12345, \"reservation_details\": {...}}",
                    "properties": {
                        "reservation_status": {
                            "type": "string",
                            "description": "Reservation status"
                        },
                        "reservation_id": {
                            "type": "integer",
                            "description": "Reservation ID"
                        },
                        "reservation_details": {
                            "type": "object",
                            "description": "Reservation details"
                        }
                    }
                }
            },
            {
                "name": "menu_select_api",
                "input_structure": "Requires dish ID and quantity. The user must ensure the dish ID is valid and available in the menu.",
                "description": "Ordering API for selecting dishes",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dish_id": {
                            "description": "Dish ID",
                            "type": "integer"
                        },
                        "quantity": {
                            "description": "Quantity of dishes",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the generated order ID for subsequent ordering and checkout operations. Example: {\"order_id\": 67890}",
                    "properties": {
                        "order_id": {
                            "description": "Generated order ID for subsequent ordering and checkout operations",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "place_order",
                "input_structure": "Requires a list of dishes with dish ID and quantity, table ID, and order ID. The user must ensure all IDs are valid and correspond to existing entities.",
                "description": "Place an order based on dish information and table number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dishes": {
                            "type": "array",
                            "description": "List of dishes, each dish includes dish ID and quantity"
                        },
                        "table_id": {
                            "type": "integer",
                            "description": "Table number"
                        },
                        "order_id": {
                            "type": "integer",
                            "description": "Order number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the generated order ID and an order confirmation message. Example: {\"order_id\": 67890, \"confirmation\": \"Order placed successfully\"}",
                    "properties": {
                        "order_id": {
                            "type": "integer",
                            "description": "Generated order ID"
                        },
                        "confirmation": {
                            "description": "Order confirmation message",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "checkout_api",
                "input_structure": "Requires order ID, payment amount, and payment method. The user must ensure the order ID is valid and corresponds to an existing order.",
                "description": "Checkout API, dependent on the result of the previous Place Order API 'Order ID'",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "order_id": {
                            "description": "Order ID",
                            "type": "integer"
                        },
                        "amount": {
                            "description": "Payment Amount",
                            "type": "integer"
                        },
                        "payment_method": {
                            "description": "Payment Method",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the total bill amount and payment status. Example: {\"total_bill\": 100, \"payment_status\": \"Paid\"}",
                    "properties": {
                        "total_bill": {
                            "description": "Total Bill Amount",
                            "type": "integer"
                        },
                        "payment_status": {
                            "description": "Payment Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Reserve a specific table by number",
                "tool": "table_booking_api",
                "input_source": "question",
                "param": {
                    "table_id": "15"
                }
            },
            {
                "step": "2.2 Select dishes",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "3",
                    "quantity": "2"
                }
            },
            {
                "step": "2.4 Select desserts",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "5",
                    "quantity": "2"
                }
            },
            {
                "step": "2.6 Submit the entire order",
                "tool": "place_order",
                "input_source": "menu_select_api tool",
                "param": {
                    "dishes": "[{'dish_id': 3",
                    "table_id": "15"
                }
            },
            {
                "step": "3.2 Perform the checkout operation",
                "tool": "checkout_api",
                "input_source": "place_order tool",
                "param": {
                    "order_id": "<Order ID>"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "I need to book a dinner table, order two No. 8 steaks and a bottle of No. 16 red wine at table 5, and complete the payment.",
        "toolset": [
            {
                "name": "get_contact_information",
                "input_structure": "Requires the restaurant ID or name to retrieve contact details. The user must provide either the ID or name of the restaurant.",
                "description": "Get the contact information of the restaurant",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "restaurant_id": {
                            "type": "integer",
                            "description": "Restaurant ID"
                        },
                        "restaurant_name": {
                            "type": "string",
                            "description": "Restaurant Name"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns contact information including email, phone number, address, location, and business hours.",
                    "properties": {
                        "contact_info": {
                            "type": "string",
                            "description": "Restaurant contact method"
                        },
                        "contact_information": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "description": "Email address"
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Phone number"
                                },
                                "address": {
                                    "type": "string",
                                    "description": "Mailing address"
                                }
                            }
                        },
                        "location": {
                            "type": "string",
                            "description": "Restaurant location"
                        },
                        "business_hours": {
                            "type": "string",
                            "description": "Business hours"
                        }
                    }
                }
            },
            {
                "name": "menu_select_api",
                "input_structure": "Requires dish ID and quantity to place an order. The user must confirm the dish numbers and desired quantities.",
                "description": "Ordering API for selecting dishes",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dish_id": {
                            "description": "Dish ID",
                            "type": "integer"
                        },
                        "quantity": {
                            "description": "Quantity of dishes",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Generates an order ID for tracking and further operations.",
                    "properties": {
                        "order_id": {
                            "description": "Generated order ID for subsequent ordering and checkout operations",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "place_order",
                "input_structure": "Requires a list of dishes with IDs and quantities, table number, and order ID. The user must ensure the table is available and the order details are correct.",
                "description": "Place an order based on dish information and table number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dishes": {
                            "type": "array",
                            "description": "List of dishes, each dish includes dish ID and quantity"
                        },
                        "table_id": {
                            "type": "integer",
                            "description": "Table number"
                        },
                        "order_id": {
                            "type": "integer",
                            "description": "Order number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms the order placement with an order ID and confirmation message.",
                    "properties": {
                        "order_id": {
                            "type": "integer",
                            "description": "Generated order ID"
                        },
                        "confirmation": {
                            "description": "Order confirmation message",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "checkout_api",
                "input_structure": "Requires order ID, amount, and payment method. The user must confirm the total amount and select a payment method.",
                "description": "Checkout API, dependent on the result of the previous Place Order API 'Order ID'",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "order_id": {
                            "description": "Order ID",
                            "type": "integer"
                        },
                        "amount": {
                            "description": "Payment Amount",
                            "type": "integer"
                        },
                        "payment_method": {
                            "description": "Payment Method",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the total bill amount and payment status.",
                    "properties": {
                        "total_bill": {
                            "description": "Total Bill Amount",
                            "type": "integer"
                        },
                        "payment_status": {
                            "description": "Payment Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.1 Get restaurant contact information (Contact information: restaurant contact information)",
                "tool": "get_contact_information",
                "input_source": "question",
                "param": {
                    "restaurant_id": "restaurant_ID"
                }
            },
            {
                "step": "2.2.1 Order two No. 8 steaks",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "8",
                    "quantity": "2"
                }
            },
            {
                "step": "2.2.2 Order one bottle of No. 16 red wine",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "16",
                    "quantity": "1"
                }
            },
            {
                "step": "2.5 Place the order",
                "tool": "place_order",
                "input_source": "menu_select_api tool",
                "param": {
                    "order_id": "<order result>",
                    "table_id": "5"
                }
            },
            {
                "step": "3.1 Get the total amount (Total amount: <order total amount>)",
                "tool": "checkout_api",
                "input_source": "place_order tool",
                "param": {
                    "order_id": "<order result>"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "I need to modify my hotel reservation details, the confirmation number is CN12345ABC. Change the check-in date to October 15th, check-out date to October 20th, adjust the room type to Deluxe Suite, and reserve 3 rooms.\n",
        "toolset": [
            {
                "name": "hotel_booking_query",
                "input_structure": "Requires a valid confirmation number to retrieve reservation details. The tool accesses the hotel booking system to fetch current reservation data. Network access is required to communicate with the booking platform.",
                "description": "Hotel Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "checkInDate": {
                            "description": "Expected Check-in Date",
                            "type": "string"
                        },
                        "checkOutDate": {
                            "description": "Expected Check-out Date",
                            "type": "string"
                        },
                        "hotelName": {
                            "description": "Hotel Name",
                            "type": "string"
                        },
                        "confirmation_number": {
                            "description": "Booking Confirmation Number",
                            "type": "string"
                        },
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel Identifier ID"
                        },
                        "room_type": {
                            "type": "string",
                            "description": "Room Type"
                        },
                        "number_of_rooms": {
                            "type": "integer",
                            "description": "Number of Rooms Inquired"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object containing availability status and detailed order information, including customer name, hotel ID, check-in and check-out dates, room type, number of rooms, and order status.",
                    "properties": {
                        "availability": {
                            "description": "Booking Availability",
                            "type": "boolean"
                        },
                        "order_details": {
                            "type": "object",
                            "description": "Booking Order Details",
                            "properties": {
                                "customer_name": {
                                    "description": "Customer Name",
                                    "type": "string"
                                },
                                "hotel_id": {
                                    "description": "Hotel Identifier ID",
                                    "type": "string"
                                },
                                "check_in": {
                                    "description": "Check-in Date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "check_out": {
                                    "description": "Check-out Date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "room_type": {
                                    "description": "Room Type",
                                    "type": "string"
                                },
                                "number_of_rooms": {
                                    "description": "Number of Rooms",
                                    "type": "integer"
                                },
                                "status": {
                                    "description": "Order Status",
                                    "type": "string"
                                }
                            }
                        },
                        "availability_status": {
                            "type": "string",
                            "description": "Room Availability Status"
                        }
                    }
                }
            },
            {
                "name": "hotel_booking_modification",
                "input_structure": "Requires a valid confirmation number and new reservation details such as check-in date, check-out date, room type, and number of rooms. The tool modifies existing reservations in the hotel booking system. Network access is required.",
                "description": "Hotel order modification interface, used to modify existing hotel reservation orders. Depends on the confirmation number provided by the hotel booking interface (hotel_booking).",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "confirmation_number": {
                            "description": "Reservation confirmation number",
                            "type": "string"
                        },
                        "check_in": {
                            "description": "New check-in date",
                            "type": "string",
                            "format": "date"
                        },
                        "check_out": {
                            "description": "New check-out date",
                            "type": "string",
                            "format": "date"
                        },
                        "room_type": {
                            "description": "New room type",
                            "type": "string"
                        },
                        "number_of_rooms": {
                            "description": "New number of rooms",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object indicating the status of the modification, confirming whether the changes were successfully applied to the reservation.",
                    "properties": {
                        "modification_status": {
                            "description": "Order modification status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "3.1 Use the confirmation number to find the original reservation record",
                "tool": "hotel_booking_query",
                "input_source": "question",
                "param": {
                    "confirmation_number": "CN12345ABC"
                }
            },
            {
                "step": "3.3 Update the check-in date to the new check-in date",
                "tool": "hotel_booking_modification",
                "input_source": "question",
                "param": {
                    "confirmation_number": "CN12345ABC",
                    "check_in": "October 15th"
                }
            },
            {
                "step": "3.4 Update the check-out date to the new check-out date",
                "tool": "hotel_booking_modification",
                "input_source": "question",
                "param": {
                    "confirmation_number": "CN12345ABC",
                    "check_out": "October 20th"
                }
            },
            {
                "step": "3.5 Update the room type to the new room type",
                "tool": "hotel_booking_modification",
                "input_source": "question",
                "param": {
                    "confirmation_number": "CN12345ABC",
                    "room_type": "Deluxe Suite"
                }
            },
            {
                "step": "3.6 Update the number of rooms to the new number of rooms",
                "tool": "hotel_booking_modification",
                "input_source": "question",
                "param": {
                    "confirmation_number": "CN12345ABC",
                    "number_of_rooms": "3"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "I would like to change the train ticket for the passenger with the ID number 320521198005017656, changing the departure station to Nanjing and the arrival station to Beijing, with the train number G102, and changing the seat type to second class.\n",
        "toolset": [
            {
                "name": "identity_verification",
                "input_structure": "Requires the user's identity information, including the identity card number. The tool verifies the validity of the provided identity number against a database of registered identities.",
                "description": "Identity Verification Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "identity_info": {
                            "type": "string",
                            "description": "User Identity Information"
                        },
                        "account_id": {
                            "type": "string",
                            "description": "User Account ID"
                        },
                        "name": {
                            "type": "string",
                            "description": "User Name"
                        },
                        "identity_number": {
                            "type": "string",
                            "description": "Identity Card Number to be Verified"
                        },
                        "personal_info": {
                            "type": "string",
                            "description": "Account Owner's Personal Information"
                        },
                        "identity_proof": {
                            "type": "string",
                            "description": "Account Owner's Identity Proof Document"
                        },
                        "owner_name": {
                            "type": "string",
                            "description": "Account Owner's Name"
                        },
                        "contact_info": {
                            "type": "string",
                            "description": "Account Owner's Contact Information"
                        },
                        "ticket_number": {
                            "type": "string",
                            "description": "Ticket Number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the verification status of the identity number, confirming whether it is valid or not.",
                    "properties": {
                        "verification_status": {
                            "type": "string",
                            "description": "Identity Verification Status"
                        },
                        "identity_number": {
                            "type": "string",
                            "description": "User Identity Card Number"
                        }
                    }
                }
            },
            {
                "name": "ticket_info_query",
                "input_structure": "Requires the passenger's name and identity number to query the ticket information. The tool accesses the ticket database to retrieve current booking details.",
                "description": "Query for flight and train ticket information",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Passenger's name"
                        },
                        "reference_number": {
                            "type": "string",
                            "description": "Booking reference number"
                        },
                        "identityNumber": {
                            "type": "string",
                            "description": "Ticket purchaser's ID number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the current status of the ticket query, including ticket class and seat information.",
                    "properties": {
                        "query_status": {
                            "type": "string",
                            "description": "Query status"
                        },
                        "ticket_level": {
                            "type": "string",
                            "description": "Flight ticket class"
                        },
                        "seat_info": {
                            "type": "string",
                            "description": "Seat information"
                        }
                    }
                }
            },
            {
                "name": "seat_availability_check",
                "input_structure": "Requires train number, departure and arrival stations, and seat type to check availability. The tool queries the train's seating database for available seats.",
                "description": "Check the availability of specific seat types for a designated train",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "trainID": {
                            "type": "string",
                            "description": "Train number"
                        },
                        "startStation": {
                            "type": "string",
                            "description": "Departure station"
                        },
                        "endStation": {
                            "type": "string",
                            "description": "Arrival station"
                        },
                        "seatType": {
                            "type": "string",
                            "description": "Seat type"
                        },
                        "maxDistanceFromDiningCar": {
                            "type": "integer",
                            "description": "Maximum number of carriages away from the dining car"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates whether the requested seat type is available for the specified train and route.",
                    "properties": {
                        "availability_status": {
                            "type": "string",
                            "description": "Availability status"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_changing",
                "input_structure": "Requires the original ticket ID, identity number, and new travel details including train number, stations, and seat type. The tool processes the change request in the ticketing system.",
                "description": "Train Ticket Rescheduling Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "originalTicketID": {
                            "type": "string",
                            "description": "The train ticket number that needs to be rescheduled"
                        },
                        "identityNumber": {
                            "type": "string",
                            "description": "The identity card number of the ticket purchaser"
                        },
                        "newDepartureDate": {
                            "type": "string",
                            "description": "The new departure date after changing"
                        },
                        "newTrainID": {
                            "type": "string",
                            "description": "The new train number after changing"
                        },
                        "newStartStation": {
                            "type": "string",
                            "description": "The new departure station after changing"
                        },
                        "newEndStation": {
                            "type": "string",
                            "description": "The new arrival station after changing"
                        },
                        "newSeatType": {
                            "type": "string",
                            "description": "The new seat type after changing"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the ticket change request, indicating success or failure.",
                    "properties": {
                        "change_status": {
                            "type": "string",
                            "description": "Train ticket rescheduling status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.1 Confirm the validity of the ID number (ID number: 320521198005017656)",
                "tool": "identity_verification",
                "input_source": "question",
                "param": {
                    "identity_number": "320521198005017656"
                }
            },
            {
                "step": "2.1 Obtain the original train ticket information of the passenger",
                "tool": "ticket_info_query",
                "input_source": "identity_verification tool",
                "param": {
                    "identityNumber": "320521198005017656"
                }
            },
            {
                "step": "3.2 Check the availability of second class seats",
                "tool": "seat_availability_check",
                "input_source": "question",
                "param": {
                    "trainID": "G102",
                    "startStation": "Nanjing",
                    "endStation": "Beijing",
                    "seatType": "second class"
                }
            },
            {
                "step": "4.2 Submit the train ticket change application",
                "tool": "train_ticket_changing",
                "input_source": "ticket_info_query tool",
                "param": {
                    "identityNumber": "320521198005017656",
                    "originalTicketID": "original train ticket information",
                    "newTrainID": "G102",
                    "newStartStation": "Nanjing",
                    "newEndStation": "Beijing",
                    "newSeatType": "second class"
                }
            },
            {
                "step": "5.1 Obtain the new train ticket information",
                "tool": "ticket_info_query",
                "input_source": "train_ticket_changing tool",
                "param": {
                    "identityNumber": "320521198005017656"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "Inquire and book a train ticket for September 16th at 9 am from Beijing to Shanghai, ensure the seat type is first class, and purchase travel insurance for the ticket collector Li Si (ID number 123456789012345678), also check the weather forecast for that day to make appropriate preparations for the trip.",
        "toolset": [
            {
                "name": "search_train",
                "input_structure": "Requires departure and destination locations, departure time, and seat preferences. The user must provide valid city names and a specific time for accurate results.",
                "description": "Search for train tickets based on preferences and return a list of train services that meet the criteria",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departure": {
                            "type": "string",
                            "description": "Departure location"
                        },
                        "destination": {
                            "type": "string",
                            "description": "Destination"
                        },
                        "departure_time": {
                            "type": "string",
                            "description": "Departure time"
                        },
                        "departure_station": {
                            "type": "string",
                            "description": "Departure station"
                        },
                        "train_number": {
                            "type": "string",
                            "description": "Train number"
                        },
                        "seatPreference": {
                            "type": "string",
                            "description": "Seat preference"
                        },
                        "seatType": {
                            "type": "string",
                            "description": "Seat type"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a list of available train services matching the criteria, including train IDs and search status.",
                    "properties": {
                        "train_id": {
                            "description": "High-speed train service ID",
                            "type": "string"
                        },
                        "search_status": {
                            "description": "Search status",
                            "type": "string"
                        },
                        "train_options": {
                            "description": "List of train services that meet the criteria",
                            "type": "array"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_booking",
                "input_structure": "Requires passenger details, train details, and seat preferences. The user must provide a valid ID number and name for booking.",
                "description": "Train ticket booking tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure date and time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival station",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat type (e.g., hard seat, soft seat, sleeper)",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID number",
                            "type": "string"
                        },
                        "name": {
                            "description": "Passenger's name",
                            "type": "string"
                        },
                        "seatPreference": {
                            "description": "Seat preference",
                            "type": "string"
                        },
                        "trainNumber": {
                            "description": "Train number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms booking status and provides a ticket ID upon successful booking.",
                    "properties": {
                        "booking_status": {
                            "description": "Train ticket booking status",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train ticket booking ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "purchase_travel_insurance",
                "input_structure": "Requires passenger's name and ID number. The user must ensure the details match those used for ticket booking.",
                "description": "Purchase Travel Insurance",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "destination": {
                            "type": "string",
                            "description": "Destination"
                        },
                        "identityNumber": {
                            "type": "string",
                            "description": "Purchaser's ID Number"
                        },
                        "name": {
                            "type": "string",
                            "description": "Purchaser's Name"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms insurance purchase status.",
                    "properties": {
                        "insurance_purchase_status": {
                            "type": "string",
                            "description": "Insurance Purchase Status"
                        }
                    }
                }
            },
            {
                "name": "check_weather",
                "input_structure": "Requires a specific date and location for the weather forecast. The user must provide valid city names and a date.",
                "description": "Check the weather forecast for a specified date and location",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "date": {
                            "type": "string",
                            "description": "Specified date"
                        },
                        "location": {
                            "type": "string",
                            "description": "Weather query location"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides weather conditions, temperature, precipitation probability, and suggestions based on the forecast.",
                    "properties": {
                        "weather_status": {
                            "type": "string",
                            "description": "Weather condition"
                        },
                        "temperature": {
                            "type": "string",
                            "description": "Temperature"
                        },
                        "precipitation": {
                            "type": "string",
                            "description": "Probability of precipitation"
                        },
                        "weather_info": {
                            "type": "string",
                            "description": "Weather forecast information"
                        },
                        "suggestions": {
                            "type": "string",
                            "description": "Suggestions based on weather conditions"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Search and filter train tickets",
                "tool": "search_train",
                "input_source": "question",
                "param": {
                    "departure_time": "2023-09-16 09:00",
                    "departure": "Beijing",
                    "destination": "Shanghai",
                    "seatPreference": "First class"
                }
            },
            {
                "step": "2.2 Complete train ticket booking",
                "tool": "train_ticket_booking",
                "input_source": "search_train tool",
                "param": {
                    "departureDate": "2023-09-16 09:00",
                    "startStation": "Beijing",
                    "endStation": "Shanghai",
                    "seatType": "First class",
                    "identityNumber": "123456789012345678",
                    "name": "Li Si"
                }
            },
            {
                "step": "3.2 Complete the purchase of travel insurance",
                "tool": "purchase_travel_insurance",
                "input_source": "question",
                "param": {
                    "identityNumber": "123456789012345678",
                    "name": "Li Si"
                }
            },
            {
                "step": "4.1 Check the weather forecast for Beijing (Date: September 16th, City: Beijing)",
                "tool": "check_weather",
                "input_source": "question",
                "param": {
                    "date": "2023-09-16",
                    "location": "Beijing"
                }
            },
            {
                "step": "4.2 Check the weather forecast for Shanghai (Date: September 16th, City: Shanghai)",
                "tool": "check_weather",
                "input_source": "question",
                "param": {
                    "date": "2023-09-16",
                    "location": "Shanghai"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "My refrigerator is not cooling and needs repair service. The refrigerator is a Haier BCD-210TMPF, contact number is 13800138000, and the home address is No. 66 Zhichun Road, Haidian District, Beijing. Please help me schedule a repair visit for the nearest workday.\n",
        "toolset": [
            {
                "name": "find_nearest_service_center",
                "input_structure": "Requires the brand of the appliance to locate the nearest service center. The user must provide the brand name as a string.",
                "description": "Find the nearest brand service center",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "brand": {
                            "type": "string",
                            "description": "Home appliance brand"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object containing the service center ID as a string.",
                    "properties": {
                        "service_center_id": {
                            "type": "string",
                            "description": "Service center ID"
                        }
                    }
                }
            },
            {
                "name": "get_service_center_working_hours",
                "input_structure": "Requires a valid service center ID to retrieve working hours and available dates. The ID must be a string.",
                "description": "Get the working hours and available appointment dates of the service center",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "service_center_id": {
                            "type": "string",
                            "description": "Service Center ID"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object with working hours as a string and available dates as an array of strings.",
                    "properties": {
                        "working_hours": {
                            "type": "string",
                            "description": "Working Hours"
                        },
                        "available_dates": {
                            "type": "array",
                            "description": "List of Available Appointment Dates"
                        }
                    }
                }
            },
            {
                "name": "select_nearest_working_day",
                "input_structure": "Requires the current date to determine the nearest working day. The date must be provided as a string.",
                "description": "Select the nearest working day",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "current_date": {
                            "type": "string",
                            "description": "Current date"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object with the selected date as a string.",
                    "properties": {
                        "selected_date": {
                            "type": "string",
                            "description": "Selected working day date"
                        }
                    }
                }
            },
            {
                "name": "appliance_repair_request",
                "input_structure": "Requires details about the appliance, issue description, contact information, address, and scheduled time. All fields must be strings.",
                "description": "Appliance Repair Request Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "applianceType": {
                            "description": "Type of appliance to be repaired, such as refrigerator, TV, washing machine, etc.",
                            "type": "string"
                        },
                        "applianceBrand": {
                            "description": "Brand of the appliance to be repaired",
                            "type": "string"
                        },
                        "applianceModel": {
                            "description": "Model of the appliance to be repaired",
                            "type": "string"
                        },
                        "issueDescription": {
                            "description": "Description of the appliance malfunction",
                            "type": "string"
                        },
                        "contactInformation": {
                            "description": "Contact information",
                            "type": "string"
                        },
                        "address": {
                            "description": "Service address",
                            "type": "string"
                        },
                        "time": {
                            "description": "Scheduled service time",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object with the repair request status and request ID as strings.",
                    "properties": {
                        "request_status": {
                            "description": "Repair request status",
                            "type": "string"
                        },
                        "requestID": {
                            "description": "Repair request ID",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Search for the nearest Haier service center",
                "tool": "find_nearest_service_center",
                "input_source": "question",
                "param": {
                    "brand": "Haier"
                }
            },
            {
                "step": "2.2 Obtain service center ID (Service center: Service center)",
                "tool": "find_nearest_service_center",
                "input_source": "find_nearest_service_center tool",
                "param": {
                    "brand": "Haier"
                }
            },
            {
                "step": "2.3 Obtain service center working hours and available appointment dates",
                "tool": "get_service_center_working_hours",
                "input_source": "find_nearest_service_center tool",
                "param": {
                    "service_center_id": "<Service center ID>"
                }
            },
            {
                "step": "3.2.1 Select the nearest workday",
                "tool": "select_nearest_working_day",
                "input_source": "question",
                "param": {
                    "current_date": "Current date"
                }
            },
            {
                "step": "3.3 Submit repair appointment request",
                "tool": "appliance_repair_request",
                "input_source": "question",
                "param": {
                    "applianceType": "Refrigerator",
                    "applianceBrand": "Haier",
                    "applianceModel": "BCD-210TMPF",
                    "issueDescription": "Not cooling",
                    "contactInformation": "13800138000",
                    "address": "No. 66 Zhichun Roa",
                    "time": "<Selected nearest workday date and time>"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "I need to schedule a repair for my TV at 6 PM tomorrow evening. The brand is Sony, model X800H, and there is an issue with the screen. Please book the repair service and tell me the reservation number.\n",
        "toolset": [
            {
                "name": "find_authorized_service_provider",
                "input_structure": "Requires the brand of the appliance and the region where the service is needed. Optionally, the model can be specified to narrow down the search. The user must provide this information.",
                "description": "Find authorized repair service providers",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "brand": {
                            "type": "string",
                            "description": "Home appliance brand"
                        },
                        "region": {
                            "type": "string",
                            "description": "Service center location"
                        },
                        "model": {
                            "type": "string",
                            "description": "Air conditioner model"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a list of authorized repair service providers and information about the service center.",
                    "properties": {
                        "service_center_info": {
                            "type": "string",
                            "description": "Information of the found service center"
                        },
                        "service_providers": {
                            "type": "array",
                            "description": "List of authorized repair service providers"
                        }
                    }
                }
            },
            {
                "name": "select_nearest_service_provider",
                "input_structure": "Requires a list of service centers and the user's address to determine proximity. The user must provide their address.",
                "description": "Select the nearest service provider to the user",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "service_centers": {
                            "type": "array",
                            "description": "List of repair centers"
                        },
                        "user_address": {
                            "type": "string",
                            "description": "User service address"
                        },
                        "service_providers": {
                            "type": "array",
                            "description": "List of authorized repair service providers"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the nearest service provider based on the user's address.",
                    "properties": {
                        "nearest_service_provider": {
                            "type": "string",
                            "description": "The nearest service provider to the user"
                        }
                    }
                }
            },
            {
                "name": "get_service_provider_contact",
                "input_structure": "Requires the name or identifier of the selected service provider to retrieve contact details.",
                "description": "Get the contact information of the maintenance service provider",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "service_provider": {
                            "type": "string",
                            "description": "Maintenance service provider"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the contact information of the specified maintenance service provider.",
                    "properties": {
                        "contact": {
                            "type": "string",
                            "description": "Contact information of the maintenance service provider"
                        }
                    }
                }
            },
            {
                "name": "appliance_repair_request",
                "input_structure": "Requires details about the appliance (type, brand, model), issue description, user's contact information, address, and preferred service time. The user must provide all these details.",
                "description": "Appliance Repair Request Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "applianceType": {
                            "description": "Type of appliance to be repaired, such as refrigerator, TV, washing machine, etc.",
                            "type": "string"
                        },
                        "applianceBrand": {
                            "description": "Brand of the appliance to be repaired",
                            "type": "string"
                        },
                        "applianceModel": {
                            "description": "Model of the appliance to be repaired",
                            "type": "string"
                        },
                        "issueDescription": {
                            "description": "Description of the appliance malfunction",
                            "type": "string"
                        },
                        "contactInformation": {
                            "description": "Contact information",
                            "type": "string"
                        },
                        "address": {
                            "description": "Service address",
                            "type": "string"
                        },
                        "time": {
                            "description": "Scheduled service time",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the repair request and a unique request ID.",
                    "properties": {
                        "request_status": {
                            "description": "Repair request status",
                            "type": "string"
                        },
                        "requestID": {
                            "description": "Repair request ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "notify_user",
                "input_structure": "Requires the user's name, preferred communication method, message content, and contact information. Additional details like appointment ID and service provider contact may be needed.",
                "description": "Send notifications through the user's preferred communication method",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "user_name": {
                            "type": "string",
                            "description": "User name"
                        },
                        "preferred_method": {
                            "type": "string",
                            "description": "Preferred communication method"
                        },
                        "message": {
                            "type": "string",
                            "description": "Notification message to be sent"
                        },
                        "contact_information": {
                            "type": "string",
                            "description": "User contact information"
                        },
                        "ticket_price": {
                            "type": "string",
                            "description": "Ticket price"
                        },
                        "ticket_availability": {
                            "type": "string",
                            "description": "Ticket availability information"
                        },
                        "updated_balance": {
                            "type": "string",
                            "description": "Updated user balance information"
                        },
                        "account_id": {
                            "type": "string",
                            "description": "User account ID"
                        },
                        "appointment_id": {
                            "type": "string",
                            "description": "Appointment number"
                        },
                        "service_provider_contact": {
                            "type": "string",
                            "description": "Contact information of the service provider"
                        },
                        "cancellation_status": {
                            "type": "string",
                            "description": "Repair cancellation status"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates whether the notification was successfully sent.",
                    "properties": {
                        "notification_status": {
                            "type": "string",
                            "description": "Notification sending status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1.1 Search for authorized Sony TV repair service providers",
                "tool": "find_authorized_service_provider",
                "input_source": "question",
                "param": {
                    "brand": "Sony"
                }
            },
            {
                "step": "2.1.2 Select the nearest service provider to the user (Service provider list: Authorized Sony TV repair service provider list, User address: User's address)",
                "tool": "select_nearest_service_provider",
                "input_source": "find_authorized_service_provider tool",
                "param": {
                    "service_providers": "<Authorized Sony TV repair service provider list>",
                    "user_address": "User's address"
                }
            },
            {
                "step": "2.2 Obtain the contact information of the repair service provider (Service provider contact information: Nearest service provider's contact information to the user)",
                "tool": "get_service_provider_contact",
                "input_source": "select_nearest_service_provider tool",
                "param": {
                    "service_provider": "<Nearest service provider to the user>"
                }
            },
            {
                "step": "3.1.4 Book the repair service",
                "tool": "appliance_repair_request",
                "input_source": "question",
                "param": {
                    "applianceType": "TV",
                    "applianceBrand": "Sony",
                    "applianceModel": "X800H",
                    "issueDescription": "Screen issue",
                    "contactInformation": "User's name",
                    "address": "User's address",
                    "time": "Tomorrow's date 18:00:00"
                }
            },
            {
                "step": "4.1 Send the reservation number and the contact information of the repair service provider to the user (Reservation number: Repair request number, Service provider contact information: Repair service provider's contact information)",
                "tool": "notify_user",
                "input_source": "appliance_repair_request tool",
                "param": {
                    "appointment_id": "<Repair request number>",
                    "service_provider_contact": "<Repair service provider's contact information>"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "I have recently been experiencing a lack of appetite, low-grade fever, and nausea, suspecting that I may have gastritis. I need to understand how to adjust my diet to alleviate the symptoms, and would like to know what medications should be taken if diagnosed with gastritis.",
        "toolset": [
            {
                "name": "medical_knowledge_search",
                "input_structure": "Requires the name of the disease or symptoms to search for relevant medical advice. Can also include medication names, patient age, and weight for more tailored results. Internet access is necessary to retrieve up-to-date medical information.",
                "description": "Search for possible diseases, nursing advice, suitable medication, and recommended dosage based on symptoms and patient information",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "diseaseName": {
                            "description": "Disease name",
                            "type": "string"
                        },
                        "symptom": {
                            "description": "List of symptoms, separated by commas",
                            "type": "string"
                        },
                        "medication": {
                            "description": "Medication name",
                            "type": "string"
                        },
                        "age": {
                            "description": "Patient's age",
                            "type": "string"
                        },
                        "weight": {
                            "description": "Patient's weight",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides medical advice, a list of possible diseases, nursing advice, and medication options with recommended dosages. The output is structured to give comprehensive guidance based on the input parameters.",
                    "properties": {
                        "medical_advice": {
                            "description": "Medical advice",
                            "type": "string"
                        },
                        "possible_diseases": {
                            "description": "List of possible diseases",
                            "type": "array"
                        },
                        "care_advice": {
                            "description": "Nursing advice",
                            "type": "string"
                        },
                        "medication_options": {
                            "description": "Medication options and recommended dosages",
                            "type": "array"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Search for dietary adjustment recommendations for gastritis patients",
                "tool": "medical_knowledge_search",
                "input_source": "question",
                "param": {
                    "diseaseName": "Gastritis",
                    "symptom": "dietary adjustment"
                }
            },
            {
                "step": "2.1 Search for common medication treatment plans for gastritis",
                "tool": "medical_knowledge_search",
                "input_source": "question",
                "param": {
                    "diseaseName": "Gastritis",
                    "symptom": "medication treatment"
                }
            },
            {
                "step": "2.2 Obtain the usage instructions and side effects information of the medication",
                "tool": "medical_knowledge_search",
                "input_source": "question",
                "param": {
                    "diseaseName": "Gastritis",
                    "medication": "Gastritis medication name"
                }
            },
            {
                "step": "3.1 Search for non-medication treatment methods for gastritis",
                "tool": "medical_knowledge_search",
                "input_source": "question",
                "param": {
                    "diseaseName": "Gastritis",
                    "symptom": "non-medication treatment"
                }
            },
            {
                "step": "3.2 Obtain lifestyle adjustment recommendations",
                "tool": "medical_knowledge_search",
                "input_source": "question",
                "param": {
                    "diseaseName": "Gastritis",
                    "symptom": "lifestyle adjustment"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "I need to modify the configuration file \"/etc/system.conf\" on the server, update the content to \"MaxConnections:100\", and then delete the no longer needed log file \"/var/log/old_logs.txt\".\n",
        "toolset": [
            {
                "name": "ssh_connect",
                "input_structure": "Requires server address (IP or domain), username, and either a password or a key for authentication. Network access to the server is necessary. User must ensure correct credentials are provided.",
                "description": "Connect to a server using SSH protocol",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "server_address": {
                            "type": "string",
                            "description": "The IP address or domain name of the server"
                        },
                        "username": {
                            "type": "string",
                            "description": "The username to log in to the server"
                        },
                        "password": {
                            "type": "string",
                            "description": "The password to log in to the server"
                        },
                        "key": {
                            "type": "string",
                            "description": "The key"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the connection status, including a boolean for success and a string message.",
                    "properties": {
                        "connection_status": {
                            "type": "string",
                            "description": "Whether the connection to the server was successful"
                        },
                        "status": {
                            "type": "boolean",
                            "description": "Whether the connection operation was successful"
                        }
                    }
                }
            },
            {
                "name": "file_modify",
                "input_structure": "Requires the file path of the file to be modified and the new content. The user must have write permissions for the file. The file must exist at the specified path.",
                "description": "Used to modify the content of an existing file.",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "description": "The file path of the content to be modified",
                            "type": "string"
                        },
                        "new_file_path": {
                            "description": "The new file path",
                            "type": "string"
                        },
                        "content": {
                            "description": "The new content to be modified to",
                            "type": "string"
                        },
                        "append_content": {
                            "description": "The new content to be appended",
                            "type": "string"
                        },
                        "original_content": {
                            "description": "The original text to be modified",
                            "type": "string"
                        },
                        "section": {
                            "description": "The section position to be modified",
                            "type": "string"
                        },
                        "new_title": {
                            "description": "The new title after modification",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A boolean status indicating whether the modification was successful.",
                    "properties": {
                        "status": {
                            "description": "Whether the modification operation was successful",
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "name": "verify_file_content",
                "input_structure": "Requires the file path and the expected content to verify. The file must be accessible for reading.",
                "description": "Verify if the content of the specified file matches the expectation",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "type": "string",
                            "description": "The path of the file"
                        },
                        "expected_content": {
                            "type": "string",
                            "description": "The expected content of the file"
                        },
                        "required_contents": {
                            "type": "array",
                            "description": "List of contents that must be included in the file",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object with a boolean indicating match status and a string for verification status.",
                    "properties": {
                        "match": {
                            "type": "boolean",
                            "description": "Whether the file content matches the expectation"
                        },
                        "verification_status": {
                            "type": "string",
                            "description": "The verification status of the file content"
                        }
                    }
                }
            },
            {
                "name": "file_delete",
                "input_structure": "Requires the file path of the file to be deleted. The user must have delete permissions for the file.",
                "description": "Used to delete a file at a specified path. After performing file_write or file_modify operations, if the related file is no longer needed, this API can be executed to delete it.",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "description": "The file path to be deleted",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A boolean status indicating whether the delete operation was successful.",
                    "properties": {
                        "status": {
                            "description": "Whether the delete operation was successful",
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "name": "check_file_deleted",
                "input_structure": "Requires the file path of the file to check. The file must be accessible for verification.",
                "description": "Used to check if the file has been successfully deleted.",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "type": "string",
                            "description": "The path of the file"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A string indicating the deletion status of the file.",
                    "properties": {
                        "deletion_status": {
                            "type": "string",
                            "description": "The deletion status of the file"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Connect to the server",
                "tool": "ssh_connect",
                "input_source": "question",
                "param": {
                    "server_address": "Server IP",
                    "password": "Server access credentials"
                }
            },
            {
                "step": "1.4 Modify the configuration file content",
                "tool": "file_modify",
                "input_source": "question",
                "param": {
                    "file_path": "/etc/system.conf",
                    "content": "MaxConnections:100"
                }
            },
            {
                "step": "1.5 Verify configuration update",
                "tool": "verify_file_content",
                "input_source": "file_modify tool",
                "param": {
                    "file_path": "/etc/system.conf",
                    "expected_content": "MaxConnections:100"
                }
            },
            {
                "step": "2.2 Delete the log file",
                "tool": "file_delete",
                "input_source": "question",
                "param": {
                    "file_path": "/var/log/old_logs.txt"
                }
            },
            {
                "step": "2.3 Verify deletion operation",
                "tool": "check_file_deleted",
                "input_source": "file_delete tool",
                "param": {
                    "file_path": "/var/log/old_logs.txt"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "I need a tool to calculate and tell me the population numbers of males and females in China for the year 2023, and to verify whether the sum of these two numbers equals the total population of China.",
        "toolset": [
            {
                "name": "population_info_search",
                "input_structure": "Requires the country name, year, and optionally gender to query population data. The tool accesses a population database or API to retrieve the requested information.",
                "description": "Population Information Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "country": {
                            "description": "Country Name",
                            "type": "string"
                        },
                        "year": {
                            "description": "Query Year",
                            "type": "string"
                        },
                        "gender": {
                            "description": "Gender, 'male' for male, 'female' for female",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an integer representing the population quantity for the specified parameters.",
                    "properties": {
                        "population": {
                            "description": "Population Quantity",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "calculate_population_sum",
                "input_structure": "Requires two integer inputs representing male and female population numbers. The tool calculates their sum.",
                "description": "Calculate the sum of two population numbers",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "male_population": {
                            "type": "integer",
                            "description": "Male population number"
                        },
                        "female_population": {
                            "type": "integer",
                            "description": "Female population number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an integer representing the sum of the male and female population numbers.",
                    "properties": {
                        "sum": {
                            "type": "integer",
                            "description": "Sum of population numbers"
                        }
                    }
                }
            },
            {
                "name": "compare_population",
                "input_structure": "Requires two integer inputs: the total population number and the calculated sum of male and female populations. The tool compares these values.",
                "description": "Compare whether two population numbers are consistent",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "total_population": {
                            "type": "integer",
                            "description": "Total population number"
                        },
                        "calculated_sum": {
                            "type": "integer",
                            "description": "Sum of calculated population numbers"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a boolean indicating whether the calculated sum matches the total population number.",
                    "properties": {
                        "match": {
                            "type": "boolean",
                            "description": "Whether it matches"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Query male population number",
                "tool": "population_info_search",
                "input_source": "question",
                "param": {
                    "country": "China",
                    "year": "2023",
                    "gender": "male"
                }
            },
            {
                "step": "2.2 Query female population number",
                "tool": "population_info_search",
                "input_source": "question",
                "param": {
                    "country": "China",
                    "year": "2023",
                    "gender": "female"
                }
            },
            {
                "step": "3.2 Query total population number",
                "tool": "population_info_search",
                "input_source": "question",
                "param": {
                    "country": "China",
                    "year": "2023"
                }
            },
            {
                "step": "4.1 Calculate the sum of male and female population numbers",
                "tool": "calculate_population_sum",
                "input_source": "population_info_search tool",
                "param": {
                    "male_population": "<male population data>",
                    "female_population": "<female population data>"
                }
            },
            {
                "step": "4.2 Compare whether the sum of the population numbers is consistent with the total population number",
                "tool": "compare_population",
                "input_source": "calculate_population_sum tool",
                "param": {
                    "total_population": "<total population data>",
                    "calculated_sum": "<calculated population sum>"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "I need you to change the originally scheduled home cleaning service from next Wednesday to a service that offers eco-friendly cleaning options during 9 AM to 12 PM next Friday, and ensure that the service location remains at No.6 Jianguomenwai Avenue, Chaoyang District, Beijing. After the change, please provide the contact information of the service provider and the confirmation of the new booking time.",
        "toolset": [
            {
                "name": "filter_cleaning_service",
                "input_structure": "Requires the city and district where the service is needed. The eco_friendly parameter should be set to true to filter services offering eco-friendly options. User must specify these parameters to get a list of qualified providers.",
                "description": "Filter home cleaning service providers offering eco-friendly cleaning options in specific cities and districts",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "city": {
                            "type": "string",
                            "description": "The city where the service is located"
                        },
                        "district": {
                            "type": "string",
                            "description": "The district where the service is located"
                        },
                        "eco_friendly": {
                            "type": "boolean",
                            "description": "Whether eco-friendly cleaning options are provided"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An array of service providers that meet the eco-friendly criteria in the specified city and district.",
                    "properties": {
                        "service_providers": {
                            "type": "array",
                            "description": "List of qualified service providers"
                        }
                    }
                }
            },
            {
                "name": "home_cleaning_query",
                "input_structure": "Requires the date, time, address, and city of the cleaning service to inquire about. This information is necessary to retrieve the status of existing bookings.",
                "description": "Home Cleaning Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "cleaningDate": {
                            "description": "The cleaning date to inquire about",
                            "type": "string"
                        },
                        "cleaningTime": {
                            "description": "The cleaning time to inquire about",
                            "type": "string"
                        },
                        "address": {
                            "description": "The home address to inquire about",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the home is located to inquire about",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A string indicating the status of the home cleaning bookings that match the inquiry criteria.",
                    "properties": {
                        "cleaning_status": {
                            "description": "List of home cleaning bookings that meet the inquiry criteria",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "home_cleaning_cancelling",
                "input_structure": "Requires the date, time, address, and city of the cleaning service to be cancelled. This information is necessary to identify and cancel the correct booking.",
                "description": "Home Cleaning Booking Cancellation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "cleaningDate": {
                            "description": "The cleaning date to be cancelled",
                            "type": "string"
                        },
                        "cleaningTime": {
                            "description": "The cleaning time to be cancelled",
                            "type": "string"
                        },
                        "address": {
                            "description": "The address of the house where cleaning is to be cancelled",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the home to be cleaned is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A string indicating the status of the cancellation request for the specified home cleaning service.",
                    "properties": {
                        "cleaning_status": {
                            "description": "Home cleaning cancellation status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "home_cleaning_booking",
                "input_structure": "Requires the date, time, city, address, contact information, payment information, and any special cleaning details. This information is necessary to successfully book a new cleaning service.",
                "description": "Home Cleaning Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "cleaningDate": {
                            "description": "Cleaning Date",
                            "type": "string"
                        },
                        "cleaningTime": {
                            "description": "Cleaning Time",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the home is located",
                            "type": "string"
                        },
                        "address": {
                            "description": "Address of the house to be cleaned",
                            "type": "string"
                        },
                        "contact_info": {
                            "description": "User's contact information",
                            "type": "string"
                        },
                        "payment_info": {
                            "description": "User's payment information",
                            "type": "string"
                        },
                        "cleaning_details": {
                            "description": "Scope and special requirements of the cleaning service",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A string indicating the status of the new home cleaning booking.",
                    "properties": {
                        "cleaning_status": {
                            "description": "Home Cleaning Booking Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1.2 Filter for service providers that offer eco-friendly cleaning products",
                "tool": "filter_cleaning_service",
                "input_source": "question",
                "param": {
                    "city": "Beijing",
                    "district": "Chaoyang",
                    "eco_friendly": "true"
                }
            },
            {
                "step": "3.1.1 Obtain the contact information of the original service provider",
                "tool": "home_cleaning_query",
                "input_source": "question",
                "param": {
                    "cleaningDate": "next Wednesday",
                    "cleaningTime": "original time",
                    "address": "No.6 Jianguomenwai Avenu",
                    "city": "Beijing"
                }
            },
            {
                "step": "3.1.2 Notify the cancellation of the originally scheduled service",
                "tool": "home_cleaning_cancelling",
                "input_source": "home_cleaning_query tool",
                "param": {
                    "cleaningDate": "next Wednesday",
                    "cleaningTime": "original time",
                    "address": "No.6 Jianguomenwai Avenu",
                    "city": "Beijing"
                }
            },
            {
                "step": "3.2.4 Complete the new service booking",
                "tool": "home_cleaning_booking",
                "input_source": "filter_cleaning_service tool",
                "param": {
                    "cleaningDate": "next Friday",
                    "cleaningTime": "9 AM to 12 PM",
                    "city": "Beijing",
                    "address": "No.6 Jianguomenwai Avenu"
                }
            },
            {
                "step": "4.1 Obtain the contact information of the new service provider",
                "tool": "home_cleaning_query",
                "input_source": "home_cleaning_booking tool",
                "param": {
                    "cleaningDate": "next Friday",
                    "cleaningTime": "9 AM to 12 PM",
                    "address": "No.6 Jianguomenwai Avenu",
                    "city": "Beijing"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "I need to book a home cleaning service at 10 a.m. on December 1st to the address at No. 88 Jianguo Road, Chaoyang District, Beijing. I would also like to know if it is possible to change the time to 2 p.m. if it rains on that day, as well as how to check the detailed information of the changed booking, and tell me what information is needed to cancel the booking.",
        "toolset": [
            {
                "name": "home_cleaning_booking",
                "input_structure": "Requires the date and time for the cleaning service, the city and address where the service is needed, and the user's contact and payment information. The user may also specify any special cleaning requirements.",
                "description": "Home Cleaning Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "cleaningDate": {
                            "description": "Cleaning Date",
                            "type": "string"
                        },
                        "cleaningTime": {
                            "description": "Cleaning Time",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the home is located",
                            "type": "string"
                        },
                        "address": {
                            "description": "Address of the house to be cleaned",
                            "type": "string"
                        },
                        "contact_info": {
                            "description": "User's contact information",
                            "type": "string"
                        },
                        "payment_info": {
                            "description": "User's payment information",
                            "type": "string"
                        },
                        "cleaning_details": {
                            "description": "Scope and special requirements of the cleaning service",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation of the booking status, indicating whether the booking was successful or if there were any issues.",
                    "properties": {
                        "cleaning_status": {
                            "description": "Home Cleaning Booking Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "weather_query",
                "input_structure": "Requires the date and location for which the weather forecast is needed. The user can specify the number of forecast hours.",
                "description": "Get the weather forecast for a specified location and date",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "date": {
                            "type": "string",
                            "description": "The date for which to obtain the weather forecast"
                        },
                        "location": {
                            "type": "string",
                            "description": "The location for which to query the weather"
                        },
                        "forecast_hours": {
                            "type": "integer",
                            "description": "Forecast time (hours)",
                            "minimum": 1,
                            "maximum": 24
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides detailed weather information including temperature, humidity, and weather conditions for the specified location and date.",
                    "properties": {
                        "weather_info": {
                            "type": "string",
                            "description": "Weather forecast information"
                        },
                        "weather_data": {
                            "type": "object",
                            "description": "The obtained weather data, including temperature, probability of precipitation, wind speed, etc."
                        },
                        "status": {
                            "type": "boolean",
                            "description": "Whether the retrieval operation was successful"
                        },
                        "temperature": {
                            "type": "string",
                            "description": "Temperature information"
                        },
                        "humidity": {
                            "type": "string",
                            "description": "Humidity information"
                        },
                        "weather_status": {
                            "type": "string",
                            "description": "Current weather condition description"
                        }
                    }
                }
            },
            {
                "name": "home_cleaning_changing",
                "input_structure": "Requires the original booking details and the new desired time or date for the cleaning service. The user must provide the original and new details for the change to be processed.",
                "description": "Home Cleaning Reservation Change Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "originalCleaningDate": {
                            "description": "The cleaning date that needs to be changed",
                            "type": "string"
                        },
                        "originalCleaningTime": {
                            "description": "The cleaning time that needs to be changed",
                            "type": "string"
                        },
                        "originalAddress": {
                            "description": "The home address that needs to be changed",
                            "type": "string"
                        },
                        "originalCity": {
                            "description": "The city of the home that needs to be changed",
                            "type": "string"
                        },
                        "newCleaningDate": {
                            "description": "The new cleaning date. If not provided, the default is that the cleaning date remains unchanged.",
                            "type": "string"
                        },
                        "newCleaningTime": {
                            "description": "The new cleaning time. If not provided, the default is that the cleaning time remains unchanged.",
                            "type": "string"
                        },
                        "newAddress": {
                            "description": "The new home address. If not provided, the default is that the address remains unchanged.",
                            "type": "string"
                        },
                        "newCity": {
                            "description": "The city of the home after the change. If not provided, the default is that the city remains unchanged.",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation of the change status, indicating whether the change was successful or if there were any issues.",
                    "properties": {
                        "cleaning_status": {
                            "description": "Home Cleaning Change Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "home_cleaning_query",
                "input_structure": "Requires the date, time, city, and address for which the user wants to inquire about existing bookings.",
                "description": "Home Cleaning Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "cleaningDate": {
                            "description": "The cleaning date to inquire about",
                            "type": "string"
                        },
                        "cleaningTime": {
                            "description": "The cleaning time to inquire about",
                            "type": "string"
                        },
                        "address": {
                            "description": "The home address to inquire about",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the home is located to inquire about",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A list of bookings that match the inquiry criteria, including details of each booking.",
                    "properties": {
                        "cleaning_status": {
                            "description": "List of home cleaning bookings that meet the inquiry criteria",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "home_cleaning_cancelling",
                "input_structure": "Requires the date, time, city, and address of the booking that the user wishes to cancel.",
                "description": "Home Cleaning Booking Cancellation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "cleaningDate": {
                            "description": "The cleaning date to be cancelled",
                            "type": "string"
                        },
                        "cleaningTime": {
                            "description": "The cleaning time to be cancelled",
                            "type": "string"
                        },
                        "address": {
                            "description": "The address of the house where cleaning is to be cancelled",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the home to be cleaned is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation of the cancellation status, indicating whether the cancellation was successful or if there were any issues.",
                    "properties": {
                        "cleaning_status": {
                            "description": "Home cleaning cancellation status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Book cleaning service",
                "tool": "home_cleaning_booking",
                "input_source": "question",
                "param": {
                    "cleaningDate": "December 1st",
                    "cleaningTime": "10 a.m.",
                    "city": "Beijing",
                    "address": "Chaoyang District No. 88 Jianguo Road"
                }
            },
            {
                "step": "2.2 Check the weather forecast",
                "tool": "weather_query",
                "input_source": "question",
                "param": {
                    "date": "December 1st",
                    "location": "Beijing Chaoyang District"
                }
            },
            {
                "step": "3.2 Confirm the possibility of changing the booking",
                "tool": "home_cleaning_changing",
                "input_source": "home_cleaning_booking tool",
                "param": {
                    "originalCleaningDate": "December 1st",
                    "originalCleaningTime": "10 a.m.",
                    "originalAddress": "No. 88 Jianguo Road",
                    "originalCity": "Beijing",
                    "newCleaningTime": "2 p.m."
                }
            },
            {
                "step": "4.2 Check detailed booking information",
                "tool": "home_cleaning_query",
                "input_source": "home_cleaning_booking tool",
                "param": {
                    "cleaningDate": "December 1st",
                    "cleaningTime": "10 a.m.",
                    "city": "Beijing",
                    "address": "No. 88 Jianguo Road"
                }
            },
            {
                "step": "5.2 Confirm the process and required information for cancelling the booking (Cancelling booking process: process details, Required information: information needed for cancelling)",
                "tool": "home_cleaning_cancelling",
                "input_source": "home_cleaning_booking tool",
                "param": {
                    "cleaningDate": "December 1st",
                    "cleaningTime": "10 a.m.",
                    "city": "Beijing",
                    "address": "No. 88 Jianguo Road"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "Please rearrange the originally scheduled home cleaning service from next Wednesday to next Friday morning between 9 AM and 12 PM, and select a service provider with good reviews within the address range of No.6 Jianguomenwai Avenue, Chaoyang District, Beijing. After completing the booking, verify and confirm the service provider's reputation score and the new booking details.",
        "toolset": [
            {
                "name": "filter_good_reputation_cleaners",
                "input_structure": "Requires an address to filter service providers within a specified location range. The address must be a valid string representing the location where the service is needed.",
                "description": "Filter service providers with good reputation within a specified location range",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "string",
                            "description": "Address of the service provider"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An array of service providers who have good reviews and are located within the specified address range.",
                    "properties": {
                        "providers": {
                            "type": "array",
                            "description": "List of qualified service providers"
                        }
                    }
                }
            },
            {
                "name": "home_cleaning_cancelling",
                "input_structure": "Requires the original booking date, time, address, and city to cancel the existing cleaning service. All fields must be valid strings representing the current booking details.",
                "description": "Home Cleaning Booking Cancellation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "cleaningDate": {
                            "description": "The cleaning date to be cancelled",
                            "type": "string"
                        },
                        "cleaningTime": {
                            "description": "The cleaning time to be cancelled",
                            "type": "string"
                        },
                        "address": {
                            "description": "The address of the house where cleaning is to be cancelled",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the home to be cleaned is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message indicating whether the cancellation of the home cleaning service was successful.",
                    "properties": {
                        "cleaning_status": {
                            "description": "Home cleaning cancellation status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "confirm_cleaning_availability",
                "input_structure": "Requires the service provider's name, desired booking date, and time slot to check availability. All fields must be valid strings.",
                "description": "Confirm the booking availability of the service provider for the specified date and time slot",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "provider": {
                            "type": "string",
                            "description": "Service provider"
                        },
                        "date": {
                            "type": "string",
                            "description": "Booking date"
                        },
                        "time": {
                            "type": "string",
                            "description": "Booking time slot"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message indicating whether the service provider is available for the specified date and time slot.",
                    "properties": {
                        "availability_status": {
                            "type": "string",
                            "description": "Booking availability status of the service provider"
                        }
                    }
                }
            },
            {
                "name": "home_cleaning_booking",
                "input_structure": "Requires the new booking date, time, city, address, user's contact information, payment information, and any special cleaning details. All fields must be valid strings.",
                "description": "Home Cleaning Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "cleaningDate": {
                            "description": "Cleaning Date",
                            "type": "string"
                        },
                        "cleaningTime": {
                            "description": "Cleaning Time",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the home is located",
                            "type": "string"
                        },
                        "address": {
                            "description": "Address of the house to be cleaned",
                            "type": "string"
                        },
                        "contact_info": {
                            "description": "User's contact information",
                            "type": "string"
                        },
                        "payment_info": {
                            "description": "User's payment information",
                            "type": "string"
                        },
                        "cleaning_details": {
                            "description": "Scope and special requirements of the cleaning service",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message indicating whether the new home cleaning booking was successful.",
                    "properties": {
                        "cleaning_status": {
                            "description": "Home Cleaning Booking Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "check_provider_reputation",
                "input_structure": "Requires the name of the service provider to check their reputation score. The provider name must be a valid string.",
                "description": "Check the reputation score of the service provider",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "provider": {
                            "type": "string",
                            "description": "Service provider"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A numerical score representing the reputation of the service provider.",
                    "properties": {
                        "reputation_score": {
                            "type": "string",
                            "description": "Reputation score of the service provider"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.2 Filter service providers with good reviews",
                "tool": "filter_good_reputation_cleaners",
                "input_source": "question",
                "param": {
                    "address": "No.6 Jianguomenwai Avenu"
                }
            },
            {
                "step": "3.1 Cancel original booking",
                "tool": "home_cleaning_cancelling",
                "input_source": "question",
                "param": {
                    "cleaningDate": "next Wednesday",
                    "cleaningTime": "original booking time",
                    "address": "original booking address",
                    "city": "original booking city"
                }
            },
            {
                "step": "3.2.2 Confirm service provider's available booking time",
                "tool": "confirm_cleaning_availability",
                "input_source": "filter_good_reputation_cleaners tool",
                "param": {
                    "provider": "<filtered service provider>",
                    "date": "next Friday",
                    "time": "9 AM to 12 PM"
                }
            },
            {
                "step": "3.2.3 Complete new service booking",
                "tool": "home_cleaning_booking",
                "input_source": "question",
                "param": {
                    "cleaningDate": "next Friday",
                    "cleaningTime": "9 AM to 12 PM",
                    "city": "Beijing",
                    "address": "No.6 Jianguomenwai Avenu",
                    "contact_info": "user contact method",
                    "payment_info": "<booking voucher information>"
                }
            },
            {
                "step": "4.1 Confirm service provider reputation score",
                "tool": "check_provider_reputation",
                "input_source": "filter_good_reputation_cleaners tool",
                "param": {
                    "provider": "<filtered service provider>"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "I need to book a home cleaning service at 10 a.m. on May 15, 2023, at No.1 Zhongguancun Street, Haidian District, Beijing, and change the service time to 2 p.m. on the same day after the booking is successful, and finally confirm and view the adjusted booking details.",
        "toolset": [
            {
                "name": "home_cleaning_query",
                "input_structure": "Requires the date, time, address, and city for which the cleaning service is being inquired. The user must provide these details to search for available cleaning services.",
                "description": "Home Cleaning Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "cleaningDate": {
                            "description": "The cleaning date to inquire about",
                            "type": "string"
                        },
                        "cleaningTime": {
                            "description": "The cleaning time to inquire about",
                            "type": "string"
                        },
                        "address": {
                            "description": "The home address to inquire about",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the home is located to inquire about",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a list of available home cleaning bookings that match the inquiry criteria, including provider details and availability.",
                    "properties": {
                        "cleaning_status": {
                            "description": "List of home cleaning bookings that meet the inquiry criteria",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "home_cleaning_booking",
                "input_structure": "Requires the date, time, address, city, contact information, payment information, and any special cleaning requirements. The user must ensure all details are accurate for successful booking.",
                "description": "Home Cleaning Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "cleaningDate": {
                            "description": "Cleaning Date",
                            "type": "string"
                        },
                        "cleaningTime": {
                            "description": "Cleaning Time",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the home is located",
                            "type": "string"
                        },
                        "address": {
                            "description": "Address of the house to be cleaned",
                            "type": "string"
                        },
                        "contact_info": {
                            "description": "User's contact information",
                            "type": "string"
                        },
                        "payment_info": {
                            "description": "User's payment information",
                            "type": "string"
                        },
                        "cleaning_details": {
                            "description": "Scope and special requirements of the cleaning service",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms the booking status, providing a confirmation number or status message indicating success or failure.",
                    "properties": {
                        "cleaning_status": {
                            "description": "Home Cleaning Booking Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "home_cleaning_changing",
                "input_structure": "Requires the original booking details (date, time, address, city) and the new desired booking time. The user must provide accurate details to successfully change the booking.",
                "description": "Home Cleaning Reservation Change Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "originalCleaningDate": {
                            "description": "The cleaning date that needs to be changed",
                            "type": "string"
                        },
                        "originalCleaningTime": {
                            "description": "The cleaning time that needs to be changed",
                            "type": "string"
                        },
                        "originalAddress": {
                            "description": "The home address that needs to be changed",
                            "type": "string"
                        },
                        "originalCity": {
                            "description": "The city of the home that needs to be changed",
                            "type": "string"
                        },
                        "newCleaningDate": {
                            "description": "The new cleaning date. If not provided, the default is that the cleaning date remains unchanged.",
                            "type": "string"
                        },
                        "newCleaningTime": {
                            "description": "The new cleaning time. If not provided, the default is that the cleaning time remains unchanged.",
                            "type": "string"
                        },
                        "newAddress": {
                            "description": "The new home address. If not provided, the default is that the address remains unchanged.",
                            "type": "string"
                        },
                        "newCity": {
                            "description": "The city of the home after the change. If not provided, the default is that the city remains unchanged.",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a status message indicating whether the booking change was successful, including any new booking details.",
                    "properties": {
                        "cleaning_status": {
                            "description": "Home Cleaning Change Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Search for home cleaning service providers",
                "tool": "home_cleaning_query",
                "input_source": "question",
                "param": {
                    "address": "No.1 Zhongguancun Stree",
                    "cleaningDate": "2023-05-15",
                    "cleaningTime": "10:00",
                    "city": "Beijing"
                }
            },
            {
                "step": "1.4 Book the service",
                "tool": "home_cleaning_booking",
                "input_source": "home_cleaning_query tool",
                "param": {
                    "address": "No.1 Zhongguancun Stree",
                    "cleaningDate": "2023-05-15",
                    "cleaningTime": "10:00",
                    "city": "Beijing",
                    "contact_info": "User contact information",
                    "payment_info": "User payment information"
                }
            },
            {
                "step": "2.2 Find the original booking",
                "tool": "home_cleaning_query",
                "input_source": "home_cleaning_booking tool",
                "param": {
                    "address": "No.1 Zhongguancun Stree",
                    "cleaningDate": "2023-05-15",
                    "cleaningTime": "10:00",
                    "city": "Beijing"
                }
            },
            {
                "step": "2.3 Request to change the booking time",
                "tool": "home_cleaning_changing",
                "input_source": "home_cleaning_query tool",
                "param": {
                    "originalAddress": "No.1 Zhongguancun Stree",
                    "originalCleaningDate": "2023-05-15",
                    "originalCleaningTime": "10:00",
                    "newCleaningTime": "14:00",
                    "originalCity": "Beijing"
                }
            },
            {
                "step": "3.1 Find the changed booking",
                "tool": "home_cleaning_query",
                "input_source": "home_cleaning_changing tool",
                "param": {
                    "address": "No.1 Zhongguancun Stree",
                    "cleaningDate": "2023-05-15",
                    "cleaningTime": "14:00",
                    "city": "Beijing"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "Please organize and display all my schedule for this week, ensuring to use my schedule ID A123 to retrieve and arrange them in chronological order, and schedule a new meeting named 'Strategic Planning Meeting' at 10 a.m. this Wednesday in Meeting Room 5, setting it as the highest priority.",
        "toolset": [
            {
                "name": "manage_schedule",
                "input_structure": "Requires a schedule ID to retrieve or modify schedules. The tool can add, update, or delete events based on the provided parameters. Necessary inputs include event name, time, location, and priority. User confirmation may be needed for changes.",
                "description": "Manage and arrange schedules",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "schedule_id": {
                            "type": "string",
                            "description": "The ID of the schedule"
                        },
                        "event_name": {
                            "type": "string",
                            "description": "Event name"
                        },
                        "event_time": {
                            "type": "string",
                            "description": "Event time"
                        },
                        "event_location": {
                            "type": "string",
                            "description": "Event geographical location"
                        },
                        "event_priority": {
                            "type": "integer",
                            "description": "Event priority (starting from 1, the smaller the number, the higher the priority)"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The tool outputs a confirmation message indicating whether the schedule was successfully arranged or modified. It may also return the updated schedule details.",
                    "properties": {
                        "outcome": {
                            "description": "Whether the schedule was successfully arranged",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "agenda_sorting",
                "input_structure": "Requires an agenda ID and optionally a title, start and end times, and priority to sort the agenda. The tool organizes events chronologically and by priority.",
                "description": "Sort the agenda",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "agenda_id": {
                            "type": "string",
                            "description": "The ID of the agenda"
                        },
                        "agenda_title": {
                            "type": "string",
                            "description": "The name of the agenda"
                        },
                        "start_time": {
                            "type": "string",
                            "description": "The start time of the agenda"
                        },
                        "end_time": {
                            "type": "string",
                            "description": "The end time of the agenda"
                        },
                        "priority": {
                            "type": "integer",
                            "description": "The priority of the agenda"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The tool outputs a sorted list of agenda items, organized by time and priority. It confirms successful sorting.",
                    "properties": {
                        "outcome": {
                            "description": "Whether the agenda was successfully sorted",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "check_room_availability",
                "input_structure": "Requires details about the room, including location, check-in date, and room type. The tool checks availability and may require user confirmation for booking.",
                "description": "Check the availability and price of room types at a specified hotel on specific dates",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "hotel_name": {
                            "type": "string",
                            "description": "Hotel Name"
                        },
                        "check_in_date": {
                            "type": "string",
                            "description": "Check-in Date"
                        },
                        "check_out_date": {
                            "type": "string",
                            "description": "Check-out Date"
                        },
                        "location": {
                            "type": "string",
                            "description": "Hotel Location"
                        },
                        "room_type": {
                            "type": "string",
                            "description": "Room Type"
                        },
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel Identifier ID"
                        },
                        "number_of_rooms": {
                            "type": "integer",
                            "description": "Number of Rooms"
                        },
                        "location_preference": {
                            "type": "string",
                            "description": "Location Preference"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The tool outputs availability status, room price, and a list of available rooms. It may also provide booking options and promotions.",
                    "properties": {
                        "availability": {
                            "type": "boolean",
                            "description": "Whether the room is available"
                        },
                        "price": {
                            "type": "number",
                            "description": "Room Price"
                        },
                        "availability_status": {
                            "type": "string",
                            "description": "Hotel Room Availability Status"
                        },
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel Identifier ID"
                        },
                        "available_rooms": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "List of Available Rooms"
                        },
                        "offers": {
                            "type": "array",
                            "description": "List of Available Promotions"
                        },
                        "selected_option": {
                            "type": "string",
                            "description": "Selected Booking Option"
                        }
                    }
                }
            },
            {
                "name": "schedule_sorter",
                "input_structure": "Requires event details such as ID, name, time, location, and priority to sort the schedule. The tool organizes events based on these parameters.",
                "description": "Schedule Sorting Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "event_id": {
                            "type": "string",
                            "description": "ID of the event"
                        },
                        "event_name": {
                            "type": "string",
                            "description": "Name of the event"
                        },
                        "start_time": {
                            "type": "string",
                            "description": "Start time of the event"
                        },
                        "end_time": {
                            "type": "string",
                            "description": "End time of the event"
                        },
                        "location": {
                            "type": "string",
                            "description": "Geographical location of the event"
                        },
                        "priority": {
                            "type": "integer",
                            "description": "Priority of the event"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The tool outputs a sorted array of events, organized by time and priority. It confirms successful sorting.",
                    "properties": {
                        "sort_results": {
                            "description": "Sorted schedule",
                            "type": "array"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Retrieve all schedules for this week",
                "tool": "manage_schedule",
                "input_source": "question",
                "param": {
                    "schedule_id": "A123"
                }
            },
            {
                "step": "1.3 Arrange schedules in chronological order",
                "tool": "agenda_sorting",
                "input_source": "manage_schedule tool",
                "param": {
                    "agenda_id": "A123"
                }
            },
            {
                "step": "2.1 Confirm meeting room availability (Meeting Room Number: 5, Meeting Time: this Wednesday at 10 a.m.)",
                "tool": "check_room_availability",
                "input_source": "question",
                "param": {
                    "location": "Meeting Room 5",
                    "check_in_date": "this Wednesday at 10 a.m."
                }
            },
            {
                "step": "2.2 Add new meeting to the schedule (Meeting Name: Strategic Planning Meeting, Meeting Time: this Wednesday at 10 a.m., Meeting Location: Meeting Room 5, Meeting Priority: highest priority)",
                "tool": "manage_schedule",
                "input_source": "check_room_availability tool",
                "param": {
                    "schedule_id": "A123",
                    "event_name": "Strategic Planning Meeting",
                    "event_time": "this Wednesday at 10 a.m.",
                    "event_location": "Meeting Room 5",
                    "event_priority": "1"
                }
            },
            {
                "step": "3.1 Update the schedule list",
                "tool": "schedule_sorter",
                "input_source": "manage_schedule tool",
                "param": {
                    "event_id": "A123"
                }
            }
        ],
        "reference_count": 5
    },
    {
        "question": "I need to modify the configuration file config. on the server, changing the database connection string to \"db_connection\": \"Server:localhost;Database:mydb;User:myuser;Password:mypass\". Then delete a backup file named old_config_bak..\n",
        "toolset": [
            {
                "name": "ssh_connect",
                "input_structure": "Requires server address, username, and password or key for authentication. The server must be accessible over the network, and SSH service should be running.",
                "description": "Connect to a server using SSH protocol",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "server_address": {
                            "type": "string",
                            "description": "The IP address or domain name of the server"
                        },
                        "username": {
                            "type": "string",
                            "description": "The username to log in to the server"
                        },
                        "password": {
                            "type": "string",
                            "description": "The password to log in to the server"
                        },
                        "key": {
                            "type": "string",
                            "description": "The key"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the connection status and success of the operation.",
                    "properties": {
                        "connection_status": {
                            "type": "string",
                            "description": "Whether the connection to the server was successful"
                        },
                        "status": {
                            "type": "boolean",
                            "description": "Whether the connection operation was successful"
                        }
                    }
                }
            },
            {
                "name": "file_modify",
                "input_structure": "Requires the file path of the file to be modified and the new content to replace or append. The file must exist and be writable.",
                "description": "Used to modify the content of an existing file.",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "description": "The file path of the content to be modified",
                            "type": "string"
                        },
                        "new_file_path": {
                            "description": "The new file path",
                            "type": "string"
                        },
                        "content": {
                            "description": "The new content to be modified to",
                            "type": "string"
                        },
                        "append_content": {
                            "description": "The new content to be appended",
                            "type": "string"
                        },
                        "original_content": {
                            "description": "The original text to be modified",
                            "type": "string"
                        },
                        "section": {
                            "description": "The section position to be modified",
                            "type": "string"
                        },
                        "new_title": {
                            "description": "The new title after modification",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A boolean status indicating the success of the modification operation.",
                    "properties": {
                        "status": {
                            "description": "Whether the modification operation was successful",
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "name": "check_file_existence",
                "input_structure": "Requires the file path to check for existence. The path must be accessible.",
                "description": "Check if the file at the specified path exists",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "type": "string",
                            "description": "The file path to check"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A boolean indicating whether the file exists.",
                    "properties": {
                        "existence": {
                            "type": "boolean",
                            "description": "Whether the file exists"
                        }
                    }
                }
            },
            {
                "name": "file_delete",
                "input_structure": "Requires the file path of the file to be deleted. The file must exist and be deletable.",
                "description": "Used to delete a file at a specified path. After performing file_write or file_modify operations, if the related file is no longer needed, this API can be executed to delete it.",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "description": "The file path to be deleted",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A boolean status indicating the success of the delete operation.",
                    "properties": {
                        "status": {
                            "description": "Whether the delete operation was successful",
                            "type": "boolean"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.1.2 Use SSH to connect to the server",
                "tool": "ssh_connect",
                "input_source": "question",
                "param": {
                    "server_address": "specific server address"
                }
            },
            {
                "step": "1.2.2 Modify the content of the configuration file",
                "tool": "file_modify",
                "input_source": "ssh_connect tool",
                "param": {
                    "file_path": "specific server address/config.",
                    "content": "{\"db_connection\": \"Server:localhost;Database:mydb;User:myuser;Password:mypass\"}"
                }
            },
            {
                "step": "2.1.2 Check the existence of the backup file",
                "tool": "check_file_existence",
                "input_source": "question",
                "param": {
                    "file_path": "specific server address/old_config_bak."
                }
            },
            {
                "step": "2.2.1 Delete the backup file",
                "tool": "file_delete",
                "input_source": "check_file_existence tool",
                "param": {
                    "file_path": "specific server address/old_config_bak."
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need a new daily report file, and add today's to-do items in it: 'Department meeting at 10 am, discuss new project progress with client Zhang San at 3 pm.'\n",
        "toolset": [
            {
                "name": "file_write",
                "input_structure": "Requires a valid file system path where write permissions are available. The path must specify both directory location and filename. Content must be a string. The user should confirm before overwriting existing files.",
                "description": "Used to write content to a specified file. If the file does not exist, a new file will be created.",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "description": "The file path where the content will be written",
                            "type": "string"
                        },
                        "content": {
                            "description": "The content to be written",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A new or overwritten file created at the specified path containing the provided content.",
                    "properties": {
                        "status": {
                            "description": "Whether the write operation was successful",
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "name": "file_modify",
                "input_structure": "Requires an existing file path with read and write permissions. The user must specify the content to be modified or appended, and optionally, the section or title to be changed.",
                "description": "Used to modify the content of an existing file.",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "description": "The file path of the content to be modified",
                            "type": "string"
                        },
                        "new_file_path": {
                            "description": "The new file path",
                            "type": "string"
                        },
                        "content": {
                            "description": "The new content to be modified to",
                            "type": "string"
                        },
                        "append_content": {
                            "description": "The new content to be appended",
                            "type": "string"
                        },
                        "original_content": {
                            "description": "The original text to be modified",
                            "type": "string"
                        },
                        "section": {
                            "description": "The section position to be modified",
                            "type": "string"
                        },
                        "new_title": {
                            "description": "The new title after modification",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The specified file is modified with new content, appended content, or a new title as requested.",
                    "properties": {
                        "status": {
                            "description": "Whether the modification operation was successful",
                            "type": "boolean"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Create daily report file and name it (File name: Daily report file of today's date)",
                "tool": "file_write",
                "input_source": "question",
                "param": {
                    "file_path": "Daily_Report_Today's_Date.txt",
                    "content": ""
                }
            },
            {
                "step": "2.1 Edit document title to 'To-Do Items'",
                "tool": "file_modify",
                "input_source": "file_write tool",
                "param": {
                    "file_path": "Daily_Report_Today's_Date.txt",
                    "new_title": "To-Do Items"
                }
            },
            {
                "step": "2.2 Add item 'Department meeting at 10 am'",
                "tool": "file_modify",
                "input_source": "file_modify tool",
                "param": {
                    "file_path": "Daily_Report_Today's_Date.txt",
                    "append_content": "Department meeting at 10 am\n"
                }
            },
            {
                "step": "2.3 Add item 'Discuss new project progress with client Zhang San at 3 pm'",
                "tool": "file_modify",
                "input_source": "file_modify tool",
                "param": {
                    "file_path": "Daily_Report_Today's_Date.txt",
                    "append_content": "Discuss new project progress with client Zhang San at 3 pm\n"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to first write a piece of text into the document temp.txt on the D drive, then change the words '临时' to '永久' in the file, and finally delete the file after confirming the changes are correct.\n",
        "toolset": [
            {
                "name": "file_write",
                "input_structure": "Requires a valid file system path where write permissions are available. The path must specify both directory location and filename. Content must be a string. The user should confirm before overwriting existing files.",
                "description": "Used to write content to a specified file. If the file does not exist, a new file will be created.",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "description": "The file path where the content will be written",
                            "type": "string"
                        },
                        "content": {
                            "description": "The content to be written",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A new or overwritten file created at the specified path containing the provided content.",
                    "properties": {
                        "status": {
                            "description": "Whether the write operation was successful",
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "name": "file_modify",
                "input_structure": "Requires an existing file path and the content to be modified. The user must specify the original content to be replaced and the new content. The file must be accessible for reading and writing.",
                "description": "Used to modify the content of an existing file.",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "description": "The file path of the content to be modified",
                            "type": "string"
                        },
                        "new_file_path": {
                            "description": "The new file path",
                            "type": "string"
                        },
                        "content": {
                            "description": "The new content to be modified to",
                            "type": "string"
                        },
                        "append_content": {
                            "description": "The new content to be appended",
                            "type": "string"
                        },
                        "original_content": {
                            "description": "The original text to be modified",
                            "type": "string"
                        },
                        "section": {
                            "description": "The section position to be modified",
                            "type": "string"
                        },
                        "new_title": {
                            "description": "The new title after modification",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The file at the specified path with the original content replaced by the new content.",
                    "properties": {
                        "status": {
                            "description": "Whether the modification operation was successful",
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "name": "check_file_content",
                "input_structure": "Requires a file path and the expected content to verify. The file must be accessible for reading.",
                "description": "Verify if the content of the specified file is consistent with the expectation",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "type": "string",
                            "description": "The file path of the content to be verified"
                        },
                        "expected_content": {
                            "type": "string",
                            "description": "The expected file content"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A boolean indicating whether the file content matches the expected content.",
                    "properties": {
                        "check_status": {
                            "type": "boolean",
                            "description": "Whether the content is consistent with the expectation"
                        }
                    }
                }
            },
            {
                "name": "file_delete",
                "input_structure": "Requires a valid file path to delete. The file must exist and be accessible for deletion.",
                "description": "Used to delete a file at a specified path. After performing file_write or file_modify operations, if the related file is no longer needed, this API can be executed to delete it.",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "file_path": {
                            "description": "The file path to be deleted",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A boolean indicating whether the file was successfully deleted.",
                    "properties": {
                        "status": {
                            "description": "Whether the delete operation was successful",
                            "type": "boolean"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Write to document and save",
                "tool": "file_write",
                "input_source": "question",
                "param": {
                    "file_path": "D:/temp.txt",
                    "content": "Specified text"
                }
            },
            {
                "step": "2.2 Modify the content in the document",
                "tool": "file_modify",
                "input_source": "file_write tool",
                "param": {
                    "file_path": "D:/temp.txt",
                    "original_content": "Temporary",
                    "content": "Permanent"
                }
            },
            {
                "step": "3.2 Verify the content in the document",
                "tool": "check_file_content",
                "input_source": "file_modify tool",
                "param": {
                    "file_path": "D:/temp.txt",
                    "expected_content": "Permanent"
                }
            },
            {
                "step": "4.2 Delete document",
                "tool": "file_delete",
                "input_source": "check_file_content tool",
                "param": {
                    "file_path": "D:/temp.txt"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Can you help me log into my two different platform accounts and then check their account balances? The first account ID is 12345678, password is Password123; the second account ID is 87654321, password is 123Password.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account ID and password for authentication. Optionally, a verification code may be needed if two-factor authentication is enabled. The user must provide valid credentials for successful login.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, typically containing a string message such as 'success' or 'failure'.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "account_balance_query",
                "input_structure": "Requires account ID to identify which account's balance to query. Optionally, a date can be specified to retrieve the balance as of a particular day.",
                "description": "Account Balance Retrieval Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "type": "integer",
                            "description": "Account ID"
                        },
                        "date": {
                            "type": "string",
                            "description": "Date for querying balance"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the account balance information, typically a string that represents the balance amount.",
                    "properties": {
                        "balance_info": {
                            "description": "Account Balance Information",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Log into the account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "12345678",
                    "password": "Password123"
                }
            },
            {
                "step": "2.2 Inquire about account balance",
                "tool": "account_balance_query",
                "input_source": "question",
                "param": {
                    "account_id": "12345678"
                }
            },
            {
                "step": "3.2 Log into the account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "87654321",
                    "password": "123Password"
                }
            },
            {
                "step": "4.2 Inquire about account balance",
                "tool": "account_balance_query",
                "input_source": "question",
                "param": {
                    "account_id": "87654321"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I would like to know today's stock trading information and make a stock purchase. My account number is 123456, and the password is password789. I plan to buy 100 shares of Tencent stock at a price of 450 yuan per share, with the transaction deadline set for 3 pm today.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account ID and password for authentication. Optionally, a verification code or username may be required. The user must ensure the credentials are correct and have permission to access the account.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, typically a string message confirming success or failure.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "stock_query",
                "input_structure": "Requires a valid stock code to query trading information. The user must ensure the stock code is correct and corresponds to a listed stock.",
                "description": "Query the trading information of a specified stock",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "stock_code": {
                            "type": "string",
                            "description": "The stock code to query"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the query status and the trading information of the stock, typically as a string.",
                    "properties": {
                        "query_status": {
                            "type": "string",
                            "description": "The status of whether the query was successful"
                        },
                        "stock_info": {
                            "type": "string",
                            "description": "The trading information of the stock"
                        }
                    }
                }
            },
            {
                "name": "check_balance",
                "input_structure": "Requires account ID and the amount needed for the transaction. Optionally, a bank card number may be required. The user must ensure the account has sufficient funds.",
                "description": "Account Balance Check Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "string"
                        },
                        "card_number": {
                            "type": "string",
                            "description": "Bank Card Number"
                        },
                        "required_amount": {
                            "type": "number",
                            "description": "Required Amount of Money"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the account balance and whether it meets the required conditions, typically a boolean value.",
                    "properties": {
                        "balance": {
                            "description": "Account Balance",
                            "type": "number"
                        },
                        "balance_status": {
                            "description": "Whether the Balance Meets the Conditions",
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "name": "foreign_currency_purchase",
                "input_structure": "Requires currency type, purchase price, and amount to buy. Optionally, the exchange rate and account balance may be needed. The user must ensure the account is authorized for such transactions.",
                "description": "Foreign Exchange Purchase Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "currency_type": {
                            "description": "Currency Type",
                            "type": "string"
                        },
                        "buy_price": {
                            "description": "Purchase Price, if not provided then the current latest price",
                            "type": "number"
                        },
                        "exchange_rate": {
                            "description": "Exchange Rate at the time of purchase",
                            "type": "number"
                        },
                        "buy_amount": {
                            "description": "Amount of Money to Purchase",
                            "type": "integer"
                        },
                        "account_balance": {
                            "description": "Account Balance",
                            "type": "number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing information on whether the purchase was successful, typically a string message.",
                    "properties": {
                        "purchased_info": {
                            "description": "Information on whether the purchase was successful",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Log into account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "123456",
                    "password": "password789"
                }
            },
            {
                "step": "1.4 Query stock trading information",
                "tool": "stock_query",
                "input_source": "question",
                "param": {
                    "stock_code": "Tencent stock"
                }
            },
            {
                "step": "2.1 Confirm whether the account balance is sufficient (Purchase Quantity: 100 shares, Stock Price: 450 yuan/share)",
                "tool": "check_balance",
                "input_source": "question",
                "param": {
                    "account_id": "123456",
                    "required_amount": "45000"
                }
            },
            {
                "step": "2.3 Submit purchase order",
                "tool": "foreign_currency_purchase",
                "input_source": "question",
                "param": {
                    "currency_type": "Tencent stock",
                    "buy_price": "450",
                    "buy_amount": "100"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I want to check and purchase foreign exchange, my account ID is 12345, and the password is password123. I want to know how much Euro I have and how much RMB is needed to purchase 5000 US dollars.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account ID and password for authentication. Optionally, a verification code may be needed. The user must provide valid credentials to access the account.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, typically a success or failure message.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "foreign_currency_query",
                "input_structure": "Requires the type of currency to query. The user must specify a valid currency code to retrieve the balance.",
                "description": "Query the amount of specific foreign currency held in the account",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "currency_type": {
                            "description": "Currency type",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the current balance of the specified foreign currency.",
                    "properties": {
                        "foreign_currency_info": {
                            "description": "Current foreign currency holding information",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "get_exchange_rate",
                "input_structure": "Requires the source and target currency types. The user must specify valid currency codes to obtain the exchange rate.",
                "description": "Get the latest exchange rate for the specified currency pair",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "from_currency": {
                            "type": "string",
                            "description": "Source currency type"
                        },
                        "to_currency": {
                            "type": "string",
                            "description": "Target currency type"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the current exchange rate between the specified currencies.",
                    "properties": {
                        "exchange_rate": {
                            "type": "number",
                            "description": "Current exchange rate"
                        }
                    }
                }
            },
            {
                "name": "calculate_exchange_amount",
                "input_structure": "Requires the target amount, exchange rate, and the source and target currency types. The user must provide these details to calculate the conversion amount.",
                "description": "Calculate the currency exchange amount based on the exchange rate",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "target_amount": {
                            "type": "integer",
                            "description": "The amount of the target currency"
                        },
                        "exchange_rate": {
                            "type": "number",
                            "description": "The exchange rate between currencies"
                        },
                        "currency_from": {
                            "type": "string",
                            "description": "Source currency type"
                        },
                        "currency_to": {
                            "type": "string",
                            "description": "Target currency type"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the amount of currency after conversion based on the provided exchange rate.",
                    "properties": {
                        "conversion_amount": {
                            "type": "number",
                            "description": "The amount of currency after conversion"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.1 Log in to the foreign exchange trading platform (Account ID: 12345, Password: password123)",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "12345",
                    "password": "password123"
                }
            },
            {
                "step": "1.2 Query foreign exchange balance",
                "tool": "foreign_currency_query",
                "input_source": "question",
                "param": {
                    "currency_type": "EUR"
                }
            },
            {
                "step": "2.1 Get current exchange rate from US dollar to RMB",
                "tool": "get_exchange_rate",
                "input_source": "question",
                "param": {
                    "from_currency": "USD",
                    "to_currency": "CNY"
                }
            },
            {
                "step": "2.3 Calculate the RMB required to purchase 5000 US dollars",
                "tool": "calculate_exchange_amount",
                "input_source": "get_exchange_rate tool",
                "param": {
                    "currency_from": "USD",
                    "currency_to": "CNY",
                    "target_amount": "5000",
                    "exchange_rate": "<Current exchange rate>"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I would like to inquire about the asset status of my corporate account and the recent transaction records. My account ID is 556677, and the password is Pwd2023.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account ID and password for authentication. Optionally, a verification code or username may be needed. The user must ensure credentials are correct and valid.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, typically a success or failure message.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "get_asset_overview",
                "input_structure": "Requires a valid account ID to retrieve asset information. The user must have access rights to view the account's asset details.",
                "description": "Get account asset overview",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "type": "integer",
                            "description": "Account ID"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the total asset value and a detailed breakdown of asset distribution.",
                    "properties": {
                        "asset_total": {
                            "type": "number",
                            "description": "Total assets"
                        },
                        "asset_distribution": {
                            "type": "object",
                            "description": "Asset distribution"
                        }
                    }
                }
            },
            {
                "name": "get_transaction_history",
                "input_structure": "Requires a valid account ID and a specified time range to fetch transaction history. The user must ensure the time range is correctly formatted.",
                "description": "Retrieve account transaction history",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "type": "integer",
                            "description": "Account ID"
                        },
                        "time_range": {
                            "type": "string",
                            "description": "Time range for the query"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An array of transaction records, each detailing individual transactions within the specified time range.",
                    "properties": {
                        "transactions": {
                            "type": "array",
                            "description": "Details of transaction records"
                        }
                    }
                }
            },
            {
                "name": "account_logout",
                "input_structure": "Requires a valid account ID to log out. The user must ensure the account is currently logged in.",
                "description": "Account Logout Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the logout status, typically a confirmation message of successful logout.",
                    "properties": {
                        "logout_status": {
                            "description": "Logout Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Log in to the account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "556677",
                    "password": "Pwd2023"
                }
            },
            {
                "step": "2.1 Obtain asset status information",
                "tool": "get_asset_overview",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "556677"
                }
            },
            {
                "step": "3.1 Obtain transaction record information",
                "tool": "get_transaction_history",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "556677",
                    "time_range": "recent"
                }
            },
            {
                "step": "4.1 Log out",
                "tool": "account_logout",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "556677"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I want to check my Japanese Yen account balance and purchase 5,000 Yen.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires user credentials including account ID and password. May also require a verification code for two-factor authentication. The user must have an active internet connection to access the bank's login portal.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message indicating whether the login was successful or failed, potentially including error messages if applicable.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "foreign_currency_query",
                "input_structure": "Requires the type of currency to be specified. The user must be logged into their account to access currency information.",
                "description": "Query the amount of specific foreign currency held in the account",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "currency_type": {
                            "description": "Currency type",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A string detailing the current balance of the specified foreign currency in the user's account.",
                    "properties": {
                        "foreign_currency_info": {
                            "description": "Current foreign currency holding information",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "foreign_currency_purchase",
                "input_structure": "Requires the currency type, amount to purchase, and current account balance. The user must confirm the exchange rate and any applicable fees before proceeding.",
                "description": "Foreign Exchange Purchase Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "currency_type": {
                            "description": "Currency Type",
                            "type": "string"
                        },
                        "buy_price": {
                            "description": "Purchase Price, if not provided then the current latest price",
                            "type": "number"
                        },
                        "exchange_rate": {
                            "description": "Exchange Rate at the time of purchase",
                            "type": "number"
                        },
                        "buy_amount": {
                            "description": "Amount of Money to Purchase",
                            "type": "integer"
                        },
                        "account_balance": {
                            "description": "Account Balance",
                            "type": "number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation message indicating whether the purchase was successful, including details of the transaction such as amount purchased and any fees applied.",
                    "properties": {
                        "purchased_info": {
                            "description": "Information on whether the purchase was successful",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Log into bank account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "User Account ID",
                    "password": "User Account Password"
                }
            },
            {
                "step": "1.3 View Japanese Yen account balance",
                "tool": "foreign_currency_query",
                "input_source": "account_login tool",
                "param": {
                    "currency_type": "JPY"
                }
            },
            {
                "step": "2.2.4 Confirm transaction",
                "tool": "foreign_currency_purchase",
                "input_source": "foreign_currency_query tool",
                "param": {
                    "currency_type": "JPY",
                    "buy_amount": "5000",
                    "account_balance": "<Japanese Yen Account Balance>"
                }
            },
            {
                "step": "2.3.1 View new Japanese Yen account balance",
                "tool": "foreign_currency_query",
                "input_source": "foreign_currency_purchase tool",
                "param": {
                    "currency_type": "JPY"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "My account ID is 54321, and the password is PWD2023. I plan to make two foreign exchange transactions. The first is to buy 10,000 euros, and the second is to sell 5,000 US dollars. Please help me operate.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account ID and password for authentication. Optionally, a verification code or username may be needed. The user must ensure the credentials are correct and have access to any required two-factor authentication methods.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, typically a string message confirming success or detailing any errors encountered.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "foreign_currency_purchase",
                "input_structure": "Requires currency type and amount to purchase. Optionally, the purchase price and exchange rate can be specified. The user must ensure sufficient account balance and verify the currency type is supported.",
                "description": "Foreign Exchange Purchase Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "currency_type": {
                            "description": "Currency Type",
                            "type": "string"
                        },
                        "buy_price": {
                            "description": "Purchase Price, if not provided then the current latest price",
                            "type": "number"
                        },
                        "exchange_rate": {
                            "description": "Exchange Rate at the time of purchase",
                            "type": "number"
                        },
                        "buy_amount": {
                            "description": "Amount of Money to Purchase",
                            "type": "integer"
                        },
                        "account_balance": {
                            "description": "Account Balance",
                            "type": "number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing information about the purchase success, typically a string message confirming the transaction or detailing any errors.",
                    "properties": {
                        "purchased_info": {
                            "description": "Information on whether the purchase was successful",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "foreign_currency_query",
                "input_structure": "Requires the currency type to query. The user must ensure the currency type is supported and that they have the necessary permissions to access account information.",
                "description": "Query the amount of specific foreign currency held in the account",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "currency_type": {
                            "description": "Currency type",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the current foreign currency holding information, typically a string detailing the amount held.",
                    "properties": {
                        "foreign_currency_info": {
                            "description": "Current foreign currency holding information",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "foreign_currency_sale",
                "input_structure": "Requires currency type and amount to sell. Optionally, the selling price can be specified. The user must ensure they have sufficient holdings of the specified currency and verify the currency type is supported.",
                "description": "Foreign Exchange Selling Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "currency_type": {
                            "description": "Currency Type",
                            "type": "string"
                        },
                        "sell_price": {
                            "description": "Selling Price, if not provided, the latest price will be used",
                            "type": "number"
                        },
                        "sell_amount": {
                            "description": "Amount of Money to Sell",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing information about the sale success, typically a string message confirming the transaction or detailing any errors.",
                    "properties": {
                        "sale_info": {
                            "description": "Information on whether the sale was successful",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Log in to the account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "54321",
                    "password": "PWD2023"
                }
            },
            {
                "step": "2.1.2 Buy the specified amount of euros",
                "tool": "foreign_currency_purchase",
                "input_source": "question",
                "param": {
                    "currency_type": "EUR",
                    "buy_amount": "10000"
                }
            },
            {
                "step": "2.2.2 Check the US dollar holdings",
                "tool": "foreign_currency_query",
                "input_source": "question",
                "param": {
                    "currency_type": "USD"
                }
            },
            {
                "step": "2.2.4 Sell the specified amount of US dollars",
                "tool": "foreign_currency_sale",
                "input_source": "foreign_currency_query tool",
                "param": {
                    "currency_type": "USD",
                    "sell_amount": "-5000"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I would like to check the latest debt status of my two credit cards, with card numbers 6222020003334444 and 6251098765432109, please help me handle it.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires an account ID, username, password, and a verification code. The account ID must be an integer, and the username and password must be strings. The user must provide valid credentials for successful login.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, typically a string message confirming success or failure.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "credit_card_debt",
                "input_structure": "Requires a credit card number, account ID, and optionally a currency and date range. The credit card number and account ID must be valid and associated with the user's account.",
                "description": "Query credit card debt amount",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "credit_card_number": {
                            "description": "Credit card number",
                            "type": "string"
                        },
                        "currency": {
                            "description": "Currency",
                            "type": "string",
                            "default": "CNY"
                        },
                        "account_id": {
                            "type": "integer",
                            "description": "Credit card account ID"
                        },
                        "card_last_digits": {
                            "type": "string",
                            "description": "Last digits of credit card"
                        },
                        "date_range": {
                            "type": "string",
                            "description": "Date range for the query"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the current debt amount for the specified credit card, typically a numeric value representing the debt.",
                    "properties": {
                        "debt": {
                            "description": "Current credit card debt amount",
                            "type": "number"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.2 Log into the first credit card account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "First credit card account ID",
                    "password": "User identity verification information"
                }
            },
            {
                "step": "2.4 Log into the second credit card account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "Second credit card account ID",
                    "password": "User identity verification information"
                }
            },
            {
                "step": "3.1 Inquire about the latest debt of the first credit card",
                "tool": "credit_card_debt",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "First credit card account ID"
                }
            },
            {
                "step": "3.2 Inquire about the latest debt of the second credit card",
                "tool": "credit_card_debt",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "Second credit card account ID"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to check my bank account balance and make a transfer. My account ID is 88888888, and the password is Pwd890.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires the user's account ID and password for authentication. Optionally, a verification code may be needed for two-factor authentication. The user must ensure the credentials are correct and have access to any required verification methods.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, typically containing a success or failure message.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "balance_query",
                "input_structure": "Requires the user's account ID to query the balance. Optionally, a threshold amount can be specified to trigger alerts if the balance falls below this value.",
                "description": "Query and return account balance information",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "type": "integer",
                            "description": "Account ID"
                        },
                        "threshold_amount": {
                            "type": "number",
                            "description": "Balance threshold"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the current account balance and additional balance information.",
                    "properties": {
                        "balance_info": {
                            "description": "Account balance information",
                            "type": "string"
                        },
                        "balance": {
                            "type": "integer",
                            "description": "Current account balance"
                        }
                    }
                }
            },
            {
                "name": "transfer_money",
                "input_structure": "Requires details of the recipient, including account number, name, and bank information. The transfer amount and the user's account ID are also necessary. Security verification may be required.",
                "description": "Perform transfer operation",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_name": {
                            "type": "string",
                            "description": "Name of the bank receiving the remittance"
                        },
                        "account_number": {
                            "type": "string",
                            "description": "Account number of the remittance recipient"
                        },
                        "swift_code": {
                            "type": "string",
                            "description": "SWIFT code or other international remittance required information"
                        },
                        "amount": {
                            "type": "number",
                            "description": "Remittance amount"
                        },
                        "recipient_info": {
                            "type": "string",
                            "description": "Recipient's account information"
                        },
                        "account_id": {
                            "type": "integer",
                            "description": "Account ID"
                        },
                        "recipient_name": {
                            "type": "string",
                            "description": "Recipient's name"
                        },
                        "transfer_mode": {
                            "type": "string",
                            "description": "Transfer method"
                        },
                        "security_code": {
                            "description": "Security verification code",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the status of the transfer, a receipt, transaction ID, and completion time.",
                    "properties": {
                        "transfer_status": {
                            "type": "string",
                            "description": "Status of the transfer operation"
                        },
                        "transfer_receipt": {
                            "type": "string",
                            "description": "Remittance receipt information"
                        },
                        "transaction_id": {
                            "type": "string",
                            "description": "Transaction number"
                        },
                        "completion_time": {
                            "type": "string",
                            "description": "Completion time"
                        }
                    }
                }
            },
            {
                "name": "confirm_transfer",
                "input_structure": "Requires the user's account ID, recipient account details, and the transfer amount to confirm the success of the transaction.",
                "description": "Confirm whether the transfer operation is successful",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "type": "integer",
                            "description": "Source account ID"
                        },
                        "recipient_account": {
                            "type": "string",
                            "description": "Recipient account"
                        },
                        "transfer_amount": {
                            "type": "number",
                            "description": "Transfer amount"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the confirmation status of the transfer, typically a success or failure message.",
                    "properties": {
                        "confirmation_status": {
                            "description": "Transfer confirmation status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Log into bank account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "88888888",
                    "password": "Pwd890"
                }
            },
            {
                "step": "1.3 View account balance",
                "tool": "balance_query",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "88888888"
                }
            },
            {
                "step": "2.2 Execute transfer",
                "tool": "transfer_money",
                "input_source": "question",
                "param": {
                    "account_id": "88888888",
                    "account_number": "Recipient Account",
                    "recipient_name": "Recipient Name",
                    "account_name": "Recipient Bank",
                    "amount": "Transfer Amount"
                }
            },
            {
                "step": "2.3 Confirm transfer success",
                "tool": "confirm_transfer",
                "input_source": "transfer_money tool",
                "param": {
                    "account_id": "88888888",
                    "recipient_account": "Recipient Account",
                    "transfer_amount": "Transfer Amount"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I want to merge and transfer the balance from my two accounts into my main account, the account IDs are 9527 and 8848, and the password for both is Pwd123.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account ID and password for authentication. Optionally, a verification code may be needed if two-factor authentication is enabled. The user must provide valid credentials to access the account.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, typically containing a success or failure message.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "transfer_all_to_main_account",
                "input_structure": "Requires source account ID, target account ID, and the amount to transfer. The user must ensure sufficient balance in the source account and provide correct account IDs.",
                "description": "Transfer the entire balance from the specified account to the main account",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "source_account_id": {
                            "type": "string",
                            "description": "Source account ID"
                        },
                        "target_account_id": {
                            "type": "string",
                            "description": "Target account ID"
                        },
                        "amount": {
                            "type": "string",
                            "description": "Transfer amount"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the transfer status, typically containing a success or failure message.",
                    "properties": {
                        "transfer_status": {
                            "type": "string",
                            "description": "Status of whether the transfer was successful"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Log into account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "9527",
                    "password": "Pwd123"
                }
            },
            {
                "step": "3.1 Log into account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "8848",
                    "password": "Pwd123"
                }
            },
            {
                "step": "4.2 Transfer to main account (Target account ID: Main account ID, Transfer amount: Account 9527 balance)",
                "tool": "transfer_all_to_main_account",
                "input_source": "question",
                "param": {
                    "source_account_id": "9527",
                    "target_account_id": "Main account ID",
                    "amount": "Account 9527 balance"
                }
            },
            {
                "step": "4.5 Transfer to main account (Target account ID: Main account ID, Transfer amount: Account 8848 balance)",
                "tool": "transfer_all_to_main_account",
                "input_source": "question",
                "param": {
                    "source_account_id": "8848",
                    "target_account_id": "Main account ID",
                    "amount": "Account 8848 balance"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I want to know the balances of my two accounts, which are 123456 and 654321, both passwords are Pwd2023.\n",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account ID and password for authentication. Optionally, a username and verification code may be needed. The user must ensure credentials are correct and valid.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the login status, typically a success or failure message.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "account_balance_query",
                "input_structure": "Requires account ID and optionally a date to query the balance. The account must be logged in prior to querying.",
                "description": "Account Balance Retrieval Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "type": "integer",
                            "description": "Account ID"
                        },
                        "date": {
                            "type": "string",
                            "description": "Date for querying balance"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the balance information as a string, representing the current or queried balance.",
                    "properties": {
                        "balance_info": {
                            "description": "Account Balance Information",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Log into the first account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "123456",
                    "password": "Pwd2023"
                }
            },
            {
                "step": "2.2 Obtain the balance information of the first account",
                "tool": "account_balance_query",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "123456"
                }
            },
            {
                "step": "3.1 Log into the second account",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "654321",
                    "password": "Pwd2023"
                }
            },
            {
                "step": "3.2 Obtain the balance information of the second account",
                "tool": "account_balance_query",
                "input_source": "account_login tool",
                "param": {
                    "account_id": "654321"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to know the detailed information about the 'Happy Savings High Gold' deposit product, including its minimum deposit amount, annual interest rate, and deposit term. Also, I want to use my account number 123456 and password 789123 along with the most recently received verification code 8888 to apply for a loan, and I would like to know the review time for this loan application as well as how to check the status of all my current loan applications.",
        "toolset": [
            {
                "name": "deposit_product_selection",
                "input_structure": "Requires the name of the deposit product to query. The user must provide the exact product name to retrieve detailed information.",
                "description": "Deposit Product Selection Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "product_name": {
                            "description": "Name of the deposit product",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns detailed information about the deposit product, including minimum deposit amount, annual interest rate, and deposit term.",
                    "properties": {
                        "product_details": {
                            "description": "Detailed information of the deposit product",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "loan_application",
                "input_structure": "Requires account credentials including account number, password, and a verification code. The user must ensure the credentials are correct and up-to-date.",
                "description": "Online Banking Loan Application Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account": {
                            "description": "Card (Account) Number/Mobile Number/Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "Account Password",
                            "type": "string"
                        },
                        "captcha": {
                            "description": "Verification Code",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the status of the loan application, indicating whether it was successfully submitted or if there were any issues.",
                    "properties": {
                        "application_status": {
                            "description": "Loan Application Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "loan_application_time",
                "input_structure": "Requires account credentials including account number, password, and a verification code. The user must ensure the credentials are correct and up-to-date.",
                "description": "Retrieve the audit time of loan application",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account": {
                            "type": "string",
                            "description": "Card (account) number/mobile number/username"
                        },
                        "password": {
                            "type": "string",
                            "description": "Account password"
                        },
                        "captcha": {
                            "type": "string",
                            "description": "Verification code"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the estimated time required for the loan application review process.",
                    "properties": {
                        "application_time": {
                            "type": "string",
                            "description": "Audit time of the loan application"
                        }
                    }
                }
            },
            {
                "name": "detailed_inquiry",
                "input_structure": "Requires account credentials including identity, password, and a verification code. The user must ensure the credentials are correct and up-to-date.",
                "description": "Business Inquiry - Detailed Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "identity": {
                            "description": "Card (Account) Number/Phone Number/Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "Account Password",
                            "type": "string"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides detailed information about the user's current loan applications, including their status.",
                    "properties": {
                        "detailed_info": {
                            "description": "Business Detailed Information",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Query detailed information of deposit product",
                "tool": "deposit_product_selection",
                "input_source": "question",
                "param": {
                    "product_name": "Happy Savings High Gold"
                }
            },
            {
                "step": "2.2 Submit loan application",
                "tool": "loan_application",
                "input_source": "question",
                "param": {
                    "account": "123456",
                    "password": "789123",
                    "captcha": "8888"
                }
            },
            {
                "step": "2.3 Obtain loan review time",
                "tool": "loan_application_time",
                "input_source": "loan_application tool",
                "param": {
                    "account": "123456",
                    "password": "789123",
                    "captcha": "8888"
                }
            },
            {
                "step": "3.2 Query loan application status",
                "tool": "detailed_inquiry",
                "input_source": "loan_application tool",
                "param": {
                    "identity": "123456",
                    "password": "789123",
                    "verification_code": "8888"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to find a large-denomination time deposit product with an annual interest rate of about 3.5%, the initial deposit amount not exceeding 10,000 yuan, and choose a product named 'Youli Time Deposit' to make a fixed deposit of 5,000 yuan, while checking the current balance of my bank card number 6225880142567890.",
        "toolset": [
            {
                "name": "deposit_product_search",
                "input_structure": "Requires criteria for searching deposit products, including product type, interest rate, and minimum deposit amount. The user must specify these parameters to retrieve matching products.",
                "description": "Deposit Product Inquiry",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "product_type": {
                            "description": "Product Type (Demand Deposit/Time Deposit/Large Certificate of Deposit/)",
                            "type": "string"
                        },
                        "product_rate": {
                            "description": "Product Interest Rate (%)",
                            "type": "number"
                        },
                        "minimum_deposit": {
                            "description": "Minimum Deposit Amount (CNY)",
                            "type": "number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a list of deposit products matching the search criteria, including details such as product name, type, interest rate, minimum deposit, currency, and term.",
                    "properties": {
                        "product_name": {
                            "type": "string",
                            "description": "Product Name"
                        },
                        "product_type": {
                            "type": "string",
                            "description": "Product Type"
                        },
                        "product_rate": {
                            "type": "number",
                            "description": "Product Interest Rate (%)"
                        },
                        "minimum_deposit": {
                            "type": "number",
                            "description": "Minimum Deposit Amount (CNY)"
                        },
                        "currency": {
                            "type": "string",
                            "description": "Currency"
                        },
                        "term": {
                            "type": "string",
                            "description": "Deposit Term"
                        }
                    }
                }
            },
            {
                "name": "account_login",
                "input_structure": "Requires user credentials including account ID, username, password, and a verification code. These are necessary to authenticate and access the banking service platform.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates the login status, confirming whether the user has successfully logged into the banking platform.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "fixed_deposit_transaction",
                "input_structure": "Requires details of the fixed deposit transaction including product name, transfer card number, deposit amount, account credentials, deposit term, and verification code. These are necessary to execute the transaction.",
                "description": "Handling fixed deposit transactions",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "product_name": {
                            "description": "Product Name",
                            "type": "string"
                        },
                        "transfer_card_number": {
                            "description": "Transfer Card Number",
                            "type": "string"
                        },
                        "amount": {
                            "description": "Amount",
                            "type": "number"
                        },
                        "account": {
                            "description": "Card (Account) Number/Mobile Number/Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "Account Password",
                            "type": "string"
                        },
                        "deposit_term": {
                            "description": "Deposit Term",
                            "type": "string"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the status of the transaction, indicating whether the fixed deposit was successfully processed.",
                    "properties": {
                        "transaction_status": {
                            "description": "Transaction Handling Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "bank_balance_query",
                "input_structure": "Requires the bank card number to query the balance. The user must provide this information to retrieve the current balance.",
                "description": "Query the balance information for a specified bank card number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "bank_card_number": {
                            "description": "Bank card number",
                            "type": "string",
                            "default": ""
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the current balance of the specified bank card number.",
                    "properties": {
                        "balance": {
                            "description": "Bank card balance",
                            "type": "number"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Retrieve matching deposit products",
                "tool": "deposit_product_search",
                "input_source": "question",
                "param": {
                    "product_type": "large-denomination time deposit",
                    "product_rate": "3.5",
                    "minimum_deposit": "10000"
                }
            },
            {
                "step": "2.2 Log in to the banking service platform",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "User bank account information",
                    "password": "User bank account password",
                    "verification_code": "User verification code"
                }
            },
            {
                "step": "2.3.4 Complete the fixed deposit operation",
                "tool": "fixed_deposit_transaction",
                "input_source": "deposit_product_search tool",
                "param": {
                    "product_name": "Youli Time Deposit",
                    "transfer_card_number": "User bank account information",
                    "amount": "5000"
                }
            },
            {
                "step": "3.3 Obtain current balance information",
                "tool": "bank_balance_query",
                "input_source": "question",
                "param": {
                    "bank_card_number": "6225880142567890"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to create a transaction for today (2023-05-13) using my account ID U123456 and merchant ID M654321 for a transaction of 1000 yuan, then change the description of this transaction to 'Purchase of office equipment', then delete this problematic transaction, and use my account ID U123456 to complain to customer service about the merchant, because the office equipment I purchased failed within a week and the merchant refused to provide after-sales service.",
        "toolset": [
            {
                "name": "create_transaction",
                "input_structure": "Requires account ID, merchant ID, transaction amount in RMB, transaction time in date-time format, and an optional description. The user must ensure the account and merchant IDs are valid and that the transaction amount is a positive integer.",
                "description": "Create a new transaction for submitting merchant and customer transaction information to the platform",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "User account ID",
                            "type": "string"
                        },
                        "merchant_id": {
                            "description": "Merchant ID",
                            "type": "string"
                        },
                        "amount": {
                            "description": "Transaction amount in RMB",
                            "type": "integer"
                        },
                        "transaction_time": {
                            "description": "Transaction time",
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "description": "Transaction description",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A transaction ID is generated and returned, representing the newly created transaction.",
                    "properties": {
                        "transaction_id": {
                            "description": "Generated transaction ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "modify_transaction",
                "input_structure": "Requires a valid transaction ID, and optionally a new transaction amount and description. The transaction ID must correspond to an existing transaction.",
                "description": "Modify the content of a transaction, based on the transaction ID",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "transaction_id": {
                            "description": "The transaction ID to modify",
                            "type": "string"
                        },
                        "amount": {
                            "description": "The new transaction amount, in RMB",
                            "type": "integer"
                        },
                        "description": {
                            "description": "The new transaction description",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message indicating whether the modification was successful.",
                    "properties": {
                        "status": {
                            "description": "The status of the modification",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "del_transaction",
                "input_structure": "Requires a valid transaction ID to identify which transaction to delete. The transaction ID must correspond to an existing transaction.",
                "description": "Delete a transaction by transaction ID",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "transaction_id": {
                            "description": "Transaction ID",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message indicating whether the deletion was successful.",
                    "properties": {
                        "status": {
                            "description": "Deletion status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "customer_service",
                "input_structure": "Requires account ID, merchant ID, and a description of the issue. The user must ensure the account and merchant IDs are valid.",
                "description": "Users contact customer service through the platform to submit questions and requests",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "User account ID",
                            "type": "string"
                        },
                        "content": {
                            "description": "The content of the user's questions and requests",
                            "type": "string"
                        },
                        "merchant_id": {
                            "description": "Merchant ID",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message indicating whether the complaint was successfully submitted, along with any response from customer service.",
                    "properties": {
                        "status": {
                            "description": "Status of the submission",
                            "type": "string"
                        },
                        "response": {
                            "description": "Customer service's reply",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Create transaction record",
                "tool": "create_transaction",
                "input_source": "question",
                "param": {
                    "account_id": "U123456",
                    "merchant_id": "M654321",
                    "amount": "1000",
                    "transaction_time": "2023-05-13T00:00:00Z"
                }
            },
            {
                "step": "2.2 Modify transaction record description",
                "tool": "modify_transaction",
                "input_source": "create_transaction tool",
                "param": {
                    "transaction_id": "<created transaction ID>",
                    "description": "Purchase of office equipment"
                }
            },
            {
                "step": "3.2 Delete transaction record",
                "tool": "del_transaction",
                "input_source": "create_transaction tool",
                "param": {
                    "transaction_id": "<created transaction ID>"
                }
            },
            {
                "step": "4.2 Submit complaint",
                "tool": "customer_service",
                "input_source": "question",
                "param": {
                    "account_id": "U123456",
                    "content": "Merchant ID M65432"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I want to travel abroad and need to know how much euros I can get with 1000 US dollars, what is the current exchange rate of US dollars to Japanese yen, and how much US dollars I will get if I exchange 5000 Japanese yen.",
        "toolset": [
            {
                "name": "currency_exchange_rate",
                "input_structure": "Requires specification of source and target currency codes in ISO 4217 format. Network access is necessary to query real-time exchange rates from financial data providers.",
                "description": "Query the current exchange rate of a currency pair",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "currency_from": {
                            "description": "Source currency type",
                            "type": "string"
                        },
                        "currency_to": {
                            "description": "Target currency type",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the current market exchange rate as a numerical value representing the conversion rate from the source currency to the target currency.",
                    "properties": {
                        "exchange_rate": {
                            "description": "Current market exchange rate",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "foreign_currency_exchange",
                "input_structure": "Requires the amount to be exchanged, source and target currency codes, and the applicable exchange rate. The tool calculates the converted amount based on these inputs.",
                "description": "Foreign Currency Exchange Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "description": "Amount to be exchanged",
                            "type": "integer"
                        },
                        "sourceCurrency": {
                            "description": "Source currency type",
                            "type": "string"
                        },
                        "targetCurrency": {
                            "description": "Target currency type",
                            "type": "string"
                        },
                        "rate": {
                            "description": "Exchange rate",
                            "type": "number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the amount after conversion as a numerical value, reflecting the equivalent value in the target currency.",
                    "properties": {
                        "exchangedAmount": {
                            "description": "Amount after exchange",
                            "type": "number"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.1.2 Query the exchange rate of US dollars to euros",
                "tool": "currency_exchange_rate",
                "input_source": "question",
                "param": {
                    "currency_from": "USD/EUR"
                }
            },
            {
                "step": "1.2.2 Query the exchange rate of US dollars to Japanese yen",
                "tool": "currency_exchange_rate",
                "input_source": "question",
                "param": {
                    "currency_from": "USD/JPY"
                }
            },
            {
                "step": "2.1.2 Use the exchange rate to calculate 1000 US dollars to euros",
                "tool": "foreign_currency_exchange",
                "input_source": "currency_exchange_rate tool",
                "param": {
                    "amount": "1000",
                    "sourceCurrency": "USD",
                    "targetCurrency": "EUR",
                    "rate": "<USD to EUR exchange rate>"
                }
            },
            {
                "step": "2.2.2 Use the exchange rate to calculate 5000 Japanese yen to US dollars",
                "tool": "foreign_currency_exchange",
                "input_source": "currency_exchange_rate tool",
                "param": {
                    "amount": "5000",
                    "sourceCurrency": "JPY",
                    "targetCurrency": "USD",
                    "rate": "<USD to JPY exchange rate>"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please inquire about the current debt amount of my credit card with the last five digits 12345, and deduct the corresponding 12000 RMB from my savings card number 6212345678900011 to repay this debt, then help me check the amount of the outstanding bill for the same credit card within 30 days after today.",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account ID, username, password, and verification code. The user must have valid credentials for the banking service platform.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A login status object indicating success or failure of the login attempt.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "credit_card_debt",
                "input_structure": "Requires credit card number, currency, account ID, last digits of the credit card, and optionally a date range. The user must have access to the credit card account.",
                "description": "Query credit card debt amount",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "credit_card_number": {
                            "description": "Credit card number",
                            "type": "string"
                        },
                        "currency": {
                            "description": "Currency",
                            "type": "string",
                            "default": "CNY"
                        },
                        "account_id": {
                            "type": "integer",
                            "description": "Credit card account ID"
                        },
                        "card_last_digits": {
                            "type": "string",
                            "description": "Last digits of credit card"
                        },
                        "date_range": {
                            "type": "string",
                            "description": "Date range for the query"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the current debt amount of the specified credit card.",
                    "properties": {
                        "debt": {
                            "description": "Current credit card debt amount",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "credit_card_repayment",
                "input_structure": "Requires overdraft card number, repayment amount, payment card number, and currency. The user must have sufficient funds in the payment card.",
                "description": "Credit Card Repayment",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "overdraft_card_number": {
                            "description": "Overdraft Card Number",
                            "type": "string"
                        },
                        "repayment_amount": {
                            "description": "Repayment Amount",
                            "type": "number"
                        },
                        "payment_card_number": {
                            "description": "Payment Card Number",
                            "type": "string"
                        },
                        "currency": {
                            "description": "Currency",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation object indicating the success of the repayment transaction.",
                    "properties": {
                        "confirmation": {
                            "description": "Repayment Confirmation Information",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Log in to the banking service platform",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "Account ID",
                    "password": "Account Password",
                    "verification_code": "Verification Code"
                }
            },
            {
                "step": "1.3 Inquire about the current credit card debt amount",
                "tool": "credit_card_debt",
                "input_source": "account_login tool",
                "param": {
                    "credit_card_number": "Last five digits 12345"
                }
            },
            {
                "step": "2.2 Transfer from savings card to credit card",
                "tool": "credit_card_repayment",
                "input_source": "credit_card_debt tool",
                "param": {
                    "overdraft_card_number": "Last five digits 12345",
                    "repayment_amount": "12000",
                    "payment_card_number": "6212345678900011",
                    "currency": "RMB"
                }
            },
            {
                "step": "3.2 Inquire about the credit card's outstanding bill amount within the specified date range",
                "tool": "credit_card_debt",
                "input_source": "question",
                "param": {
                    "credit_card_number": "Last five digits 12345",
                    "date_range": "Within 30 days after today"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please help me log into my online banking account using account ID 12345678, password abcd1234, and verification code 8888, then check the balance of my bank card 6225880112345678, and find a time deposit product with an annual interest rate of at least 3% and an initial deposit amount not exceeding 5000 yuan, and finally use my account funds to invest 5000 yuan in this product.",
        "toolset": [
            {
                "name": "account_login",
                "input_structure": "Requires account ID, password, and verification code. The user must provide these credentials to authenticate and access the online banking system.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message indicating whether the login was successful or failed.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "bank_balance_query",
                "input_structure": "Requires a valid bank card number to query the balance. The user must ensure the card number is correct and authorized for balance inquiries.",
                "description": "Query the balance information for a specified bank card number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "bank_card_number": {
                            "description": "Bank card number",
                            "type": "string",
                            "default": ""
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A numerical value representing the current balance of the specified bank card.",
                    "properties": {
                        "balance": {
                            "description": "Bank card balance",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "deposit_product_search",
                "input_structure": "Requires criteria such as product type, interest rate, and minimum deposit amount to filter available deposit products. The user must specify these parameters to receive a list of matching products.",
                "description": "Deposit Product Inquiry",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "product_type": {
                            "description": "Product Type (Demand Deposit/Time Deposit/Large Certificate of Deposit/)",
                            "type": "string"
                        },
                        "product_rate": {
                            "description": "Product Interest Rate (%)",
                            "type": "number"
                        },
                        "minimum_deposit": {
                            "description": "Minimum Deposit Amount (CNY)",
                            "type": "number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A list of deposit products matching the criteria, including details such as product name, type, interest rate, minimum deposit, currency, and term.",
                    "properties": {
                        "product_name": {
                            "type": "string",
                            "description": "Product Name"
                        },
                        "product_type": {
                            "type": "string",
                            "description": "Product Type"
                        },
                        "product_rate": {
                            "type": "number",
                            "description": "Product Interest Rate (%)"
                        },
                        "minimum_deposit": {
                            "type": "number",
                            "description": "Minimum Deposit Amount (CNY)"
                        },
                        "currency": {
                            "type": "string",
                            "description": "Currency"
                        },
                        "term": {
                            "type": "string",
                            "description": "Deposit Term"
                        }
                    }
                }
            },
            {
                "name": "fixed_deposit_transaction",
                "input_structure": "Requires product name, transfer card number, amount, and account credentials to process a fixed deposit transaction. The user must ensure all details are correct and authorized for the transaction.",
                "description": "Handling fixed deposit transactions",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "product_name": {
                            "description": "Product Name",
                            "type": "string"
                        },
                        "transfer_card_number": {
                            "description": "Transfer Card Number",
                            "type": "string"
                        },
                        "amount": {
                            "description": "Amount",
                            "type": "number"
                        },
                        "account": {
                            "description": "Card (Account) Number/Mobile Number/Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "Account Password",
                            "type": "string"
                        },
                        "deposit_term": {
                            "description": "Deposit Term",
                            "type": "string"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message indicating whether the transaction was successful or failed.",
                    "properties": {
                        "transaction_status": {
                            "description": "Transaction Handling Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Submit login request",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "12345678",
                    "password": "abcd1234",
                    "verification_code": "8888"
                }
            },
            {
                "step": "2.2 Submit balance inquiry request",
                "tool": "bank_balance_query",
                "input_source": "question",
                "param": {
                    "bank_card_number": "6225880112345678"
                }
            },
            {
                "step": "3.2 Submit filtering request and obtain product list",
                "tool": "deposit_product_search",
                "input_source": "question",
                "param": {
                    "product_type": "Time Deposit",
                    "product_rate": "3",
                    "minimum_deposit": "5000"
                }
            },
            {
                "step": "4.2 Submit investment request",
                "tool": "fixed_deposit_transaction",
                "input_source": "deposit_product_search tool",
                "param": {
                    "product_name": "<Name of the filtered product>",
                    "transfer_card_number": "6225880112345678",
                    "amount": "5000"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to find a fixed deposit product with an interest rate of no less than 1.5%, the minimum deposit amount does not exceed 5000 yuan, and handle the business of depositing 5000 yuan, then check my bank card balance, and finally make a real-time remittance of 2000 yuan from this card to my brother Wang Qiang's account at the Bank of China, no need for postscripts or SMS notifications.",
        "toolset": [
            {
                "name": "deposit_product_search",
                "input_structure": "Requires specifying the type of deposit product, the minimum interest rate, and the maximum deposit amount. The user must provide these parameters to filter the available products.",
                "description": "Deposit Product Inquiry",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "product_type": {
                            "description": "Product Type (Demand Deposit/Time Deposit/Large Certificate of Deposit/)",
                            "type": "string"
                        },
                        "product_rate": {
                            "description": "Product Interest Rate (%)",
                            "type": "number"
                        },
                        "minimum_deposit": {
                            "description": "Minimum Deposit Amount (CNY)",
                            "type": "number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a list of deposit products that match the criteria, including details such as product name, type, interest rate, minimum deposit, currency, and term.",
                    "properties": {
                        "product_name": {
                            "type": "string",
                            "description": "Product Name"
                        },
                        "product_type": {
                            "type": "string",
                            "description": "Product Type"
                        },
                        "product_rate": {
                            "type": "number",
                            "description": "Product Interest Rate (%)"
                        },
                        "minimum_deposit": {
                            "type": "number",
                            "description": "Minimum Deposit Amount (CNY)"
                        },
                        "currency": {
                            "type": "string",
                            "description": "Currency"
                        },
                        "term": {
                            "type": "string",
                            "description": "Deposit Term"
                        }
                    }
                }
            },
            {
                "name": "fixed_deposit_transaction",
                "input_structure": "Requires user identity verification and deposit details, including product name, transfer card number, deposit amount, and account credentials. The user must ensure the accuracy of these details.",
                "description": "Handling fixed deposit transactions",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "product_name": {
                            "description": "Product Name",
                            "type": "string"
                        },
                        "transfer_card_number": {
                            "description": "Transfer Card Number",
                            "type": "string"
                        },
                        "amount": {
                            "description": "Amount",
                            "type": "number"
                        },
                        "account": {
                            "description": "Card (Account) Number/Mobile Number/Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "Account Password",
                            "type": "string"
                        },
                        "deposit_term": {
                            "description": "Deposit Term",
                            "type": "string"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms the completion of the fixed deposit transaction, providing a status message indicating success or failure.",
                    "properties": {
                        "transaction_status": {
                            "description": "Transaction Handling Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "bank_balance_query",
                "input_structure": "Requires the bank card number for which the balance is to be queried. The user must ensure the card number is correct and valid.",
                "description": "Query the balance information for a specified bank card number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "bank_card_number": {
                            "description": "Bank card number",
                            "type": "string",
                            "default": ""
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the current balance of the specified bank card.",
                    "properties": {
                        "balance": {
                            "description": "Bank card balance",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "domestic_remittance",
                "input_structure": "Requires details of the remittance including payee information, remittance amount, and payer card number. The user must ensure all details are accurate to avoid transaction errors.",
                "description": "Make a single remittance to a designated domestic account",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "payee_name": {
                            "description": "Payee Name",
                            "type": "string"
                        },
                        "payee_card_number": {
                            "description": "Payee Card Number",
                            "type": "string"
                        },
                        "payee_bank": {
                            "description": "Payee Bank",
                            "type": "string"
                        },
                        "remittance_amount": {
                            "description": "Remittance Amount",
                            "type": "number"
                        },
                        "remittance_method": {
                            "description": "Remittance Method (Instant/Regular/Next Day)",
                            "type": "string"
                        },
                        "payer_card_number": {
                            "description": "Payer Card Number",
                            "type": "string"
                        },
                        "postscript": {
                            "description": "Postscript (Optional)",
                            "type": "string"
                        },
                        "sms_notification": {
                            "description": "SMS Notification (Optional)",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a transaction ID and status indicating the success or failure of the remittance, along with a timestamp of the transaction.",
                    "properties": {
                        "transaction_id": {
                            "description": "Transaction ID",
                            "type": "string"
                        },
                        "status": {
                            "description": "Remittance Status",
                            "type": "string"
                        },
                        "timestamp": {
                            "description": "Transaction Timestamp",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Query for fixed deposit products that meet the conditions",
                "tool": "deposit_product_search",
                "input_source": "question",
                "param": {
                    "product_type": "fixed deposit",
                    "product_rate": "1.5",
                    "minimum_deposit": "5000"
                }
            },
            {
                "step": "2.2 Complete the fixed deposit operation",
                "tool": "fixed_deposit_transaction",
                "input_source": "deposit_product_search tool",
                "param": {
                    "product_name": "<Product name>",
                    "transfer_card_number": "User bank card number",
                    "amount": "5000"
                }
            },
            {
                "step": "3.1 Query the balance of a specified bank card",
                "tool": "bank_balance_query",
                "input_source": "question",
                "param": {
                    "bank_card_number": "User bank card number"
                }
            },
            {
                "step": "4.2 Complete the real-time remittance operation",
                "tool": "domestic_remittance",
                "input_source": "question",
                "param": {
                    "payee_name": "Wang Qiang",
                    "payee_card_number": "Bank of China account",
                    "payee_bank": "Bank of China",
                    "remittance_amount": "2000",
                    "remittance_method": "Real-time",
                    "payer_card_number": "User bank card number",
                    "postscript": "",
                    "sms_notification": ""
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please query and adjust the transaction record at the SuperMarket merchant for my account ID 123456789 from yesterday, change the incorrectly displayed amount of 300 yuan to the actual 500 yuan, then delete this modified transaction record, and report the issue of incorrect amount displayed by the system to customer service, requesting them to check the system to avoid similar errors in the future.",
        "toolset": [
            {
                "name": "find_transaction",
                "input_structure": "Requires account ID, merchant name, and transaction time to locate the specific transaction record. The user must provide accurate details to ensure the correct transaction is found.",
                "description": "Find transaction records based on account ID and transaction information",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "transaction_time": {
                            "type": "string",
                            "description": "Transaction time"
                        },
                        "amount": {
                            "type": "integer",
                            "description": "Transaction amount"
                        },
                        "account_id": {
                            "type": "string",
                            "description": "User account ID"
                        },
                        "merchant_name": {
                            "type": "string",
                            "description": "Merchant name"
                        },
                        "merchant_id": {
                            "type": "string",
                            "description": "Merchant ID"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the transaction ID of the found transaction record, which can be used for further operations.",
                    "properties": {
                        "transaction_id": {
                            "description": "Found transaction ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "modify_transaction",
                "input_structure": "Requires the transaction ID of the record to be modified and the new amount. The user must ensure the transaction ID is correct to avoid unintended modifications.",
                "description": "Modify the content of a transaction, based on the transaction ID",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "transaction_id": {
                            "description": "The transaction ID to modify",
                            "type": "string"
                        },
                        "amount": {
                            "description": "The new transaction amount, in RMB",
                            "type": "integer"
                        },
                        "description": {
                            "description": "The new transaction description",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates the status of the modification operation, confirming whether it was successful or not.",
                    "properties": {
                        "status": {
                            "description": "The status of the modification",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "del_transaction",
                "input_structure": "Requires the transaction ID of the record to be deleted. The user must confirm the transaction ID to prevent accidental deletions.",
                "description": "Delete a transaction by transaction ID",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "transaction_id": {
                            "description": "Transaction ID",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates the status of the deletion operation, confirming whether it was successful or not.",
                    "properties": {
                        "status": {
                            "description": "Deletion status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "customer_service",
                "input_structure": "Requires account ID and a detailed description of the issue to be reported. The user should provide clear and concise information to facilitate effective communication.",
                "description": "Users contact customer service through the platform to submit questions and requests",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "User account ID",
                            "type": "string"
                        },
                        "content": {
                            "description": "The content of the user's questions and requests",
                            "type": "string"
                        },
                        "merchant_id": {
                            "description": "Merchant ID",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the status of the submission and any response from customer service, indicating the next steps or resolution.",
                    "properties": {
                        "status": {
                            "description": "Status of the submission",
                            "type": "string"
                        },
                        "response": {
                            "description": "Customer service's reply",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.3 Find and select specific transaction record",
                "tool": "find_transaction",
                "input_source": "question",
                "param": {
                    "account_id": "123456789",
                    "merchant_name": "SuperMarket",
                    "transaction_time": "yesterday's date"
                }
            },
            {
                "step": "2.2 Modify transaction amount",
                "tool": "modify_transaction",
                "input_source": "find_transaction tool",
                "param": {
                    "transaction_id": "<specific transaction record's transaction ID>",
                    "amount": "500"
                }
            },
            {
                "step": "3.2 Delete specific transaction record",
                "tool": "del_transaction",
                "input_source": "find_transaction tool",
                "param": {
                    "transaction_id": "<specific transaction record's transaction ID>"
                }
            },
            {
                "step": "4.2 Contact customer service and submit the issue",
                "tool": "customer_service",
                "input_source": "question",
                "param": {
                    "account_id": "123456789",
                    "content": "The system displays an incorrect amount, request to check the system"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please provide me with the current prices of gold, silver, and platinum, as well as their price change percentages for today, this week, this month, and this year. Also, verify if the price mentioned in my \"Gold Investment Purchase Agreement\" is consistent with the current market price, especially the clause that states 'Party A shall purchase 20 ounces of gold from Party B at the price of $1800 per ounce'.",
        "toolset": [
            {
                "name": "precious_metals_quotes_search",
                "input_structure": "Requires the type of precious metal as input. The tool fetches current market prices and percentage changes for the specified metal. Network access is required to retrieve up-to-date data.",
                "description": "Precious Metals Quotation Search Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "metalsType": {
                            "description": "Type of precious metal",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the current price and percentage changes (daily, weekly, monthly, yearly) for the specified metal. Example: {\"current_price\": 1800, \"day_change\": 0.5, \"week_change\": 1.2, \"month_change\": 3.4, \"year_change\": 5.6}.",
                    "properties": {
                        "current_price": {
                            "description": "Current price",
                            "type": "number"
                        },
                        "day_change": {
                            "description": "Daily change",
                            "type": "number"
                        },
                        "week_change": {
                            "description": "Weekly change",
                            "type": "number"
                        },
                        "month_change": {
                            "description": "Monthly change",
                            "type": "number"
                        },
                        "year_change": {
                            "description": "Annual change",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "contract_content_search",
                "input_structure": "Requires the contract name and type to locate the document. The tool retrieves the full content of the specified contract. Network access may be needed to access remote document storage.",
                "description": "Contract Content Retrieval Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "input": {
                            "description": "User Input",
                            "type": "string"
                        },
                        "contractType": {
                            "description": "Contract Type",
                            "type": "string"
                        },
                        "contractName": {
                            "description": "Contract Name",
                            "type": "string"
                        },
                        "subContractName": {
                            "description": "Subcontract Name",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the full text content of the specified contract. Example: {\"contract_content\": \"Party A shall purchase 20 ounces of gold from Party B at the price of $1800 per ounce.\"}.",
                    "properties": {
                        "contract_content": {
                            "description": "Contract Content",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.1 Obtain current gold price and percentage change",
                "tool": "precious_metals_quotes_search",
                "input_source": "question",
                "param": {
                    "metalsType": "gold"
                }
            },
            {
                "step": "1.2 Obtain current silver price and percentage change",
                "tool": "precious_metals_quotes_search",
                "input_source": "question",
                "param": {
                    "metalsType": "silver"
                }
            },
            {
                "step": "1.3 Obtain current platinum price and percentage change",
                "tool": "precious_metals_quotes_search",
                "input_source": "question",
                "param": {
                    "metalsType": "platinum"
                }
            },
            {
                "step": "2.1 Retrieve the content of the 'Gold Investment Purchase Agreement' document (Contract content: Gold Investment Purchase Agreement content)",
                "tool": "contract_content_search",
                "input_source": "question",
                "param": {
                    "input": "Gold Investment Purchase Agreement",
                    "contractType": "investment agreement",
                    "contractName": "Gold Investment Purchase Agreement"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to find a fixed deposit product with an annual interest rate of at least 4%, the initial deposit amount should not exceed 50,000 yuan, and to handle a deposit of 50,000 yuan from my ICBC card 622200202003056789, then I also need to check the balance of this card, the password is 998877.",
        "toolset": [
            {
                "name": "deposit_product_search",
                "input_structure": "Requires criteria for filtering deposit products, including product type, minimum interest rate, and maximum deposit amount. The user must specify these criteria to search for suitable products.",
                "description": "Deposit Product Inquiry",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "product_type": {
                            "description": "Product Type (Demand Deposit/Time Deposit/Large Certificate of Deposit/)",
                            "type": "string"
                        },
                        "product_rate": {
                            "description": "Product Interest Rate (%)",
                            "type": "number"
                        },
                        "minimum_deposit": {
                            "description": "Minimum Deposit Amount (CNY)",
                            "type": "number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a list of deposit products matching the criteria, including product name, type, interest rate, minimum deposit, currency, and term.",
                    "properties": {
                        "product_name": {
                            "type": "string",
                            "description": "Product Name"
                        },
                        "product_type": {
                            "type": "string",
                            "description": "Product Type"
                        },
                        "product_rate": {
                            "type": "number",
                            "description": "Product Interest Rate (%)"
                        },
                        "minimum_deposit": {
                            "type": "number",
                            "description": "Minimum Deposit Amount (CNY)"
                        },
                        "currency": {
                            "type": "string",
                            "description": "Currency"
                        },
                        "term": {
                            "type": "string",
                            "description": "Deposit Term"
                        }
                    }
                }
            },
            {
                "name": "account_login",
                "input_structure": "Requires user credentials including account ID, password, and a verification code. The user must provide these details to log in to the online banking system.",
                "description": "Account Login Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "Account ID",
                            "type": "integer"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "User Password",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates the login status, confirming whether the login was successful or not.",
                    "properties": {
                        "login_status": {
                            "description": "Login Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "fixed_deposit_transaction",
                "input_structure": "Requires details of the fixed deposit transaction including product name, transfer card number, amount, account credentials, deposit term, and verification code. The user must provide these details to complete the transaction.",
                "description": "Handling fixed deposit transactions",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "product_name": {
                            "description": "Product Name",
                            "type": "string"
                        },
                        "transfer_card_number": {
                            "description": "Transfer Card Number",
                            "type": "string"
                        },
                        "amount": {
                            "description": "Amount",
                            "type": "number"
                        },
                        "account": {
                            "description": "Card (Account) Number/Mobile Number/Username",
                            "type": "string"
                        },
                        "password": {
                            "description": "Account Password",
                            "type": "string"
                        },
                        "deposit_term": {
                            "description": "Deposit Term",
                            "type": "string"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates the status of the transaction, confirming whether the deposit was successfully handled.",
                    "properties": {
                        "transaction_status": {
                            "description": "Transaction Handling Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "bank_balance_query",
                "input_structure": "Requires the bank card number for which the balance is to be queried. The user must provide this information to retrieve the balance.",
                "description": "Query the balance information for a specified bank card number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "bank_card_number": {
                            "description": "Bank card number",
                            "type": "string",
                            "default": ""
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the current balance of the specified bank card.",
                    "properties": {
                        "balance": {
                            "description": "Bank card balance",
                            "type": "number"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Filter fixed deposit products",
                "tool": "deposit_product_search",
                "input_source": "question",
                "param": {
                    "product_type": "Fixed deposit",
                    "product_rate": "4",
                    "minimum_deposit": "50000"
                }
            },
            {
                "step": "2.2 Log in to online banking",
                "tool": "account_login",
                "input_source": "question",
                "param": {
                    "account_id": "622200202003056789",
                    "password": "998877",
                    "verification_code": "The obtained verification code"
                }
            },
            {
                "step": "2.3 Handle the deposit",
                "tool": "fixed_deposit_transaction",
                "input_source": "deposit_product_search tool",
                "param": {
                    "product_name": "<The name of the best fixed deposit product filtered>",
                    "transfer_card_number": "622200202003056789",
                    "amount": "50000"
                }
            },
            {
                "step": "3.3 Obtain and record the bank card balance information (Bank card balance: The bank card balance information)",
                "tool": "bank_balance_query",
                "input_source": "question",
                "param": {
                    "bank_card_number": "622200202003056789"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please perform a real-time query and inform me how much Japanese Yen can be exchanged with 5000 Chinese Yuan using the latest exchange rate, and also tell me how much Chinese Yuan is 100 Euros according to the current exchange rate.",
        "toolset": [
            {
                "name": "currency_conversion",
                "input_structure": "Requires the amount to be converted, the original currency type, and the target currency type. An optional exchange rate can be provided, otherwise, the tool will fetch the latest rate. The date of the exchange rate query must be specified if historical data is needed.",
                "description": "Currency Conversion Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "description": "Amount to be converted",
                            "type": "integer"
                        },
                        "from_currency": {
                            "description": "Original currency type (e.g., USD, CNY, etc.)",
                            "type": "string"
                        },
                        "to_currency": {
                            "description": "Target currency type (e.g., EUR, JPY, etc.)",
                            "type": "string"
                        },
                        "exchange_rate": {
                            "type": "number",
                            "description": "Current exchange rate of foreign currency"
                        },
                        "date": {
                            "type": "string",
                            "description": "The date of the exchange rate query, must be a past date",
                            "format": "date-time",
                            "example": "2022-01-01"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "The tool returns the conversion result as a number, indicating the amount in the target currency. It also provides the exchange status and the date of the exchange rate used.",
                    "properties": {
                        "conversion_result": {
                            "description": "Result after conversion",
                            "type": "number"
                        },
                        "exchange_status": {
                            "type": "string",
                            "description": "Information on whether the exchange was successful"
                        },
                        "date": {
                            "type": "string",
                            "description": "Date of the exchange rate used",
                            "format": "date-time"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Obtain the exchange rate from RMB to JPY",
                "tool": "currency_conversion",
                "input_source": "question",
                "param": {
                    "amount": "1",
                    "from_currency": "CNY",
                    "to_currency": "JPY"
                }
            },
            {
                "step": "1.3 Obtain the exchange rate from EUR to CNY",
                "tool": "currency_conversion",
                "input_source": "question",
                "param": {
                    "amount": "1",
                    "from_currency": "EUR",
                    "to_currency": "CNY"
                }
            },
            {
                "step": "2.1.2 Calculate the amount of Japanese Yen that can be exchanged with 5000 RMB",
                "tool": "currency_conversion",
                "input_source": "currency_conversion tool",
                "param": {
                    "amount": "5000",
                    "from_currency": "CNY",
                    "to_currency": "JPY"
                }
            },
            {
                "step": "2.2.2 Calculate the amount of Chinese Yuan that can be exchanged with 100 EUR",
                "tool": "currency_conversion",
                "input_source": "currency_conversion tool",
                "param": {
                    "amount": "100",
                    "from_currency": "EUR",
                    "to_currency": "CNY"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "First, I need to check the progress of my credit card application under my ID card, then check the balance of my ICBC (Industrial and Commercial Bank of China) card, and inquire about the debt amount of my China Merchants Bank credit card. Finally, I want to use the balance of my ICBC card to pay off the 500 yuan debt on my China Merchants Bank credit card.",
        "toolset": [
            {
                "name": "credit_card_progress",
                "input_structure": "Requires user identity information including name, ID type, ID number, and a verification code. The user must provide accurate details to retrieve the application progress.",
                "description": "Query the progress of credit card application/handling",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "description": "Name",
                            "type": "string"
                        },
                        "id_type": {
                            "description": "Type of Identification",
                            "type": "string"
                        },
                        "id_number": {
                            "description": "Identification Number",
                            "type": "string"
                        },
                        "verification_code": {
                            "description": "Verification Code",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status and detailed progress of the credit card application as a string.",
                    "properties": {
                        "status": {
                            "description": "Application Status",
                            "type": "string"
                        },
                        "progress_details": {
                            "description": "Progress Details",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "bank_balance_query",
                "input_structure": "Requires the bank card number to query the balance. The card number must be valid and associated with the user's account.",
                "description": "Query the balance information for a specified bank card number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "bank_card_number": {
                            "description": "Bank card number",
                            "type": "string",
                            "default": ""
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the current balance of the specified bank card as a numerical value.",
                    "properties": {
                        "balance": {
                            "description": "Bank card balance",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "credit_card_debt",
                "input_structure": "Requires credit card number, currency, and optionally account ID, last digits of the card, and date range. Accurate details are necessary to retrieve the debt amount.",
                "description": "Query credit card debt amount",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "credit_card_number": {
                            "description": "Credit card number",
                            "type": "string"
                        },
                        "currency": {
                            "description": "Currency",
                            "type": "string",
                            "default": "CNY"
                        },
                        "account_id": {
                            "type": "integer",
                            "description": "Credit card account ID"
                        },
                        "card_last_digits": {
                            "type": "string",
                            "description": "Last digits of credit card"
                        },
                        "date_range": {
                            "type": "string",
                            "description": "Date range for the query"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the current debt amount of the specified credit card as a numerical value.",
                    "properties": {
                        "debt": {
                            "description": "Current credit card debt amount",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "credit_card_repayment",
                "input_structure": "Requires overdraft card number, repayment amount, payment card number, and currency. The user must ensure sufficient balance and correct details for successful repayment.",
                "description": "Credit Card Repayment",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "overdraft_card_number": {
                            "description": "Overdraft Card Number",
                            "type": "string"
                        },
                        "repayment_amount": {
                            "description": "Repayment Amount",
                            "type": "number"
                        },
                        "payment_card_number": {
                            "description": "Payment Card Number",
                            "type": "string"
                        },
                        "currency": {
                            "description": "Currency",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a confirmation message indicating the success or failure of the repayment operation.",
                    "properties": {
                        "confirmation": {
                            "description": "Repayment Confirmation Information",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Check the progress of the credit card application",
                "tool": "credit_card_progress",
                "input_source": "question",
                "param": {
                    "name": "User Name",
                    "id_type": "ID Card",
                    "id_number": "User ID Card Number",
                    "verification_code": "Verification Code"
                }
            },
            {
                "step": "2.2 Check the balance of the ICBC card",
                "tool": "bank_balance_query",
                "input_source": "question",
                "param": {
                    "bank_card_number": "ICBC Card Number"
                }
            },
            {
                "step": "3.2 Inquire about the debt amount of the China Merchants Bank credit card",
                "tool": "credit_card_debt",
                "input_source": "question",
                "param": {
                    "credit_card_number": "China Merchants Bank Credit Card Number"
                }
            },
            {
                "step": "4.2 Perform the credit card repayment operation",
                "tool": "credit_card_repayment",
                "input_source": "question",
                "param": {
                    "overdraft_card_number": "China Merchants Bank Credit Card Number",
                    "repayment_amount": "500",
                    "payment_card_number": "ICBC Card Number",
                    "currency": "RMB"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please create a transaction complaint using my account ID A123456 and merchant ID M654321, record the incorrect transaction amount of 299 yuan and the transaction time at 9 o'clock this morning, then immediately submit a complaint about receiving goods in the wrong color, and finally delete the transaction after the merchant agrees to refund and compensate me 50 yuan for the loss.",
        "toolset": [
            {
                "name": "create_transaction",
                "input_structure": "Requires account ID, merchant ID, transaction amount, transaction time, and a description of the transaction. The user must provide valid IDs and a description of the issue.",
                "description": "Create a new transaction for submitting merchant and customer transaction information to the platform",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "User account ID",
                            "type": "string"
                        },
                        "merchant_id": {
                            "description": "Merchant ID",
                            "type": "string"
                        },
                        "amount": {
                            "description": "Transaction amount in RMB",
                            "type": "integer"
                        },
                        "transaction_time": {
                            "description": "Transaction time",
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "description": "Transaction description",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A transaction ID is generated and returned, representing the newly created transaction record.",
                    "properties": {
                        "transaction_id": {
                            "description": "Generated transaction ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "customer_service",
                "input_structure": "Requires account ID, merchant ID, and the content of the user's request or complaint. The user must provide a clear description of the issue.",
                "description": "Users contact customer service through the platform to submit questions and requests",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "User account ID",
                            "type": "string"
                        },
                        "content": {
                            "description": "The content of the user's questions and requests",
                            "type": "string"
                        },
                        "merchant_id": {
                            "description": "Merchant ID",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message and a response from customer service are returned, indicating the outcome of the request.",
                    "properties": {
                        "status": {
                            "description": "Status of the submission",
                            "type": "string"
                        },
                        "response": {
                            "description": "Customer service's reply",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "del_transaction",
                "input_structure": "Requires a transaction ID to identify which transaction record to delete. The user must ensure the transaction ID is correct.",
                "description": "Delete a transaction by transaction ID",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "transaction_id": {
                            "description": "Transaction ID",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message indicating whether the transaction was successfully deleted.",
                    "properties": {
                        "status": {
                            "description": "Deletion status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.4 Create and submit the transaction complaint",
                "tool": "create_transaction",
                "input_source": "question",
                "param": {
                    "account_id": "A123456",
                    "merchant_id": "M654321",
                    "amount": "299",
                    "transaction_time": "this morning at 9 o'clock",
                    "description": "Received goods in the wrong color"
                }
            },
            {
                "step": "2.2 Check and confirm the merchant agrees to refund and compensate (Compensation amount: 50 yuan)",
                "tool": "customer_service",
                "input_source": "question",
                "param": {
                    "account_id": "A123456",
                    "content": "Confirm merchant refund of 299 yuan and compensation of 50 yuan loss"
                }
            },
            {
                "step": "3.1 Obtain the transaction ID",
                "tool": "create_transaction",
                "input_source": "create_transaction tool",
                "param": {
                    "account_id": "A123456",
                    "merchant_id": "M654321",
                    "amount": "299",
                    "transaction_time": "this morning at 9 o'clock",
                    "description": "Received goods in the wrong color"
                }
            },
            {
                "step": "3.2 Delete the transaction record",
                "tool": "del_transaction",
                "input_source": "create_transaction tool",
                "param": {
                    "transaction_id": "<Transaction ID>"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to create a transaction record at 5 PM today, with account ID 123456, merchant ID 78910, and the amount of 500 yuan. Then, I need to change the transaction description to \"Office Supplies Purchase\", followed by cancelling and deleting this transaction, and I would like to have a feature that allows customer service to set a reminder for me.",
        "toolset": [
            {
                "name": "create_transaction",
                "input_structure": "Requires account ID, merchant ID, transaction amount, transaction time, and an optional description. All inputs must be valid and formatted correctly. The user must ensure that the account and merchant IDs are correct and that the transaction time is in a valid date-time format.",
                "description": "Create a new transaction for submitting merchant and customer transaction information to the platform",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "User account ID",
                            "type": "string"
                        },
                        "merchant_id": {
                            "description": "Merchant ID",
                            "type": "string"
                        },
                        "amount": {
                            "description": "Transaction amount in RMB",
                            "type": "integer"
                        },
                        "transaction_time": {
                            "description": "Transaction time",
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "description": "Transaction description",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A transaction ID is generated and returned, representing the newly created transaction record.",
                    "properties": {
                        "transaction_id": {
                            "description": "Generated transaction ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "modify_transaction",
                "input_structure": "Requires a valid transaction ID and the new values for the fields to be modified, such as amount and description. The transaction ID must correspond to an existing transaction.",
                "description": "Modify the content of a transaction, based on the transaction ID",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "transaction_id": {
                            "description": "The transaction ID to modify",
                            "type": "string"
                        },
                        "amount": {
                            "description": "The new transaction amount, in RMB",
                            "type": "integer"
                        },
                        "description": {
                            "description": "The new transaction description",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a status indicating whether the modification was successful.",
                    "properties": {
                        "status": {
                            "description": "The status of the modification",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "del_transaction",
                "input_structure": "Requires a valid transaction ID for the transaction to be deleted. The transaction ID must correspond to an existing transaction.",
                "description": "Delete a transaction by transaction ID",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "transaction_id": {
                            "description": "Transaction ID",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a status indicating whether the deletion was successful.",
                    "properties": {
                        "status": {
                            "description": "Deletion status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "customer_service",
                "input_structure": "Requires account ID, content of the request, and optionally a merchant ID. The account ID must be valid, and the content should clearly describe the request or question.",
                "description": "Users contact customer service through the platform to submit questions and requests",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "account_id": {
                            "description": "User account ID",
                            "type": "string"
                        },
                        "content": {
                            "description": "The content of the user's questions and requests",
                            "type": "string"
                        },
                        "merchant_id": {
                            "description": "Merchant ID",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a status of the submission and a response from customer service.",
                    "properties": {
                        "status": {
                            "description": "Status of the submission",
                            "type": "string"
                        },
                        "response": {
                            "description": "Customer service's reply",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Create and save the transaction record",
                "tool": "create_transaction",
                "input_source": "question",
                "param": {
                    "account_id": "123456",
                    "merchant_id": "78910",
                    "amount": "500",
                    "transaction_time": "5 PM today"
                }
            },
            {
                "step": "2.2 Modify the transaction record description",
                "tool": "modify_transaction",
                "input_source": "create_transaction tool",
                "param": {
                    "transaction_id": "<created transaction ID>",
                    "description": "Office Supplies Purchase"
                }
            },
            {
                "step": "3.1 Delete the transaction record",
                "tool": "del_transaction",
                "input_source": "create_transaction tool",
                "param": {
                    "transaction_id": "<created transaction ID>"
                }
            },
            {
                "step": "4.2 Submit customer service reminder request",
                "tool": "customer_service",
                "input_source": "question",
                "param": {
                    "account_id": "123456",
                    "content": "Please set up a reminder for me"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please check the latest status of my two orders with the numbers 123456789 and 987654321, and confirm whether they are both associated with my customer ID A123456.",
        "toolset": [
            {
                "name": "order_tracking",
                "input_structure": "Requires an order number and optionally a customer ID to verify association. The order number must be a valid string representing an existing order. The customer ID, if provided, must be a valid string associated with the order.",
                "description": "Order Tracking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "orderNumber": {
                            "description": "Order Number",
                            "type": "string"
                        },
                        "customerID": {
                            "description": "Customer ID",
                            "type": "string"
                        },
                        "orderDate": {
                            "description": "Order Date",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the current status of the specified order as a string. If a customer ID is provided, it confirms the association between the order and the customer.",
                    "properties": {
                        "orderStatus": {
                            "description": "Order Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Retrieve the status of order number 123456789",
                "tool": "order_tracking",
                "input_source": "question",
                "param": {
                    "orderNumber": "123456789"
                }
            },
            {
                "step": "1.4 Retrieve the status of order number 987654321",
                "tool": "order_tracking",
                "input_source": "question",
                "param": {
                    "orderNumber": "987654321"
                }
            },
            {
                "step": "2.2 Check whether order number 123456789 is associated with customer ID A123456",
                "tool": "order_tracking",
                "input_source": "question",
                "param": {
                    "orderNumber": "123456789",
                    "customerID": "A123456"
                }
            },
            {
                "step": "2.3 Check whether order number 987654321 is associated with customer ID A123456",
                "tool": "order_tracking",
                "input_source": "question",
                "param": {
                    "orderNumber": "987654321",
                    "customerID": "A123456"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to use the ordering service to order 2 portions of Tomato and Eggs with ID 101 and 1 portion of Green Pepper Beef with ID 102, and I wish to confirm the details of the generated order.",
        "toolset": [
            {
                "name": "menu_select_api",
                "input_structure": "Requires dish ID and quantity as inputs. Dish ID must be an integer representing the unique identifier of the dish. Quantity must be an integer indicating how many portions are desired. The user must ensure the dish ID is valid and available on the menu.",
                "description": "Ordering API for selecting dishes",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dish_id": {
                            "description": "Dish ID",
                            "type": "integer"
                        },
                        "quantity": {
                            "description": "Quantity of dishes",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the generated order ID, which is used for subsequent ordering and checkout operations.",
                    "properties": {
                        "order_id": {
                            "description": "Generated order ID for subsequent ordering and checkout operations",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "order_details_api",
                "input_structure": "Requires an order ID as input. The order ID must be an integer and should correspond to a previously created order. The user must ensure the order ID is valid and exists in the system.",
                "description": "API to get order details, used to confirm the names, quantities, and prices of dishes in the order",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "order_id": {
                            "description": "Order ID",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing details of the dishes in the order, including names, quantities, and prices, as well as the total price and delivery address.",
                    "properties": {
                        "dishes": {
                            "description": "Details of the dishes in the order",
                            "type": "array"
                        },
                        "total_price": {
                            "description": "Total price of the order",
                            "type": "integer"
                        },
                        "address": {
                            "description": "Delivery address",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "checkout_api",
                "input_structure": "Requires order ID, payment amount, and payment method as inputs. Order ID must be an integer from a previously created order. Payment amount must be an integer matching the total order price. Payment method must be an integer representing the chosen payment option.",
                "description": "Checkout API, dependent on the result of the previous Place Order API 'Order ID'",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "order_id": {
                            "description": "Order ID",
                            "type": "integer"
                        },
                        "amount": {
                            "description": "Payment Amount",
                            "type": "integer"
                        },
                        "payment_method": {
                            "description": "Payment Method",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the total bill amount and the payment status, indicating whether the payment was successful.",
                    "properties": {
                        "total_bill": {
                            "description": "Total Bill Amount",
                            "type": "integer"
                        },
                        "payment_status": {
                            "description": "Payment Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Select the first dish and set the quantity",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "101",
                    "quantity": "2"
                }
            },
            {
                "step": "1.3 Select the second dish and set the quantity",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "102",
                    "quantity": "1"
                }
            },
            {
                "step": "1.5.2 Check order details",
                "tool": "order_details_api",
                "input_source": "menu_select_api tool",
                "param": {
                    "order_id": "<Generated order ID>"
                }
            },
            {
                "step": "1.6 Complete payment",
                "tool": "checkout_api",
                "input_source": "menu_select_api tool",
                "param": {
                    "order_id": "<Generated order ID>"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to understand the overall evaluation of Chinese restaurants in Chaoyang District, Beijing, and also submit a 4-star review for the 'Manhan Quanxi' restaurant, mentioning the elegant environment and authentic Beijing roast duck. I would also like to view my previous review for the 'Jinmanlou' restaurant and predict the star rating I might give.",
        "toolset": [
            {
                "name": "restaurant_review",
                "input_structure": "Requires location and cuisine type to query restaurant reviews. Optionally, a visit date can be provided to filter reviews. The user must specify the geographical area and type of cuisine for accurate results.",
                "description": "Restaurant Review Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "location": {
                            "description": "Restaurant location",
                            "type": "string"
                        },
                        "cuisine": {
                            "description": "Type of cuisine offered by the restaurant",
                            "type": "string"
                        },
                        "visitDate": {
                            "description": "Visit date",
                            "format": "date",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides an object containing the average rating, total number of reviews, and details of the highest-rated review for the specified location and cuisine.",
                    "properties": {
                        "avg_rating": {
                            "description": "Average restaurant rating",
                            "type": "number"
                        },
                        "total_reviews": {
                            "description": "Total number of reviews",
                            "type": "integer"
                        },
                        "top_review": {
                            "description": "Details of the highest-rated review",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "restaurant_review_tool",
                "input_structure": "Requires restaurant name, star rating, and review text to submit a review. The visit date is optional but recommended for context. The user must ensure the restaurant name is correct and the review text is appropriate.",
                "description": "For submitting reviews of a specific restaurant",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "restaurantName": {
                            "description": "Name of the restaurant",
                            "type": "string"
                        },
                        "visitDate": {
                            "description": "Visit date",
                            "type": "string",
                            "format": "date-time"
                        },
                        "stars": {
                            "description": "Star rating",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 5
                        },
                        "reviewText": {
                            "description": "Content of the review",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object indicating the average star rating, total number of reviews, and the status of the review submission.",
                    "properties": {
                        "average_stars": {
                            "description": "Average star rating",
                            "type": "number"
                        },
                        "total_reviews": {
                            "description": "Total number of reviews",
                            "type": "integer"
                        },
                        "status": {
                            "description": "Status of the review submission",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "restaurant_review_analyzer",
                "input_structure": "Requires review text, visit date, and restaurant name to analyze and predict the star rating. The user must provide a complete review text for accurate sentiment analysis.",
                "description": "Restaurant Review Analysis Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "reviewText": {
                            "description": "Content of the user's review",
                            "type": "string"
                        },
                        "visitDate": {
                            "description": "Date of the user's visit",
                            "type": "string"
                        },
                        "restaurantName": {
                            "description": "Name of the restaurant",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Outputs an object containing the sentiment analysis result and the predicted star rating based on the review text.",
                    "properties": {
                        "sentiment": {
                            "description": "Sentiment analysis result of the review",
                            "type": "string"
                        },
                        "starRating": {
                            "description": "Predicted star rating",
                            "type": "integer"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Collect and summarize review data",
                "tool": "restaurant_review",
                "input_source": "question",
                "param": {
                    "location": "Chaoyang District",
                    "cuisine": "Chinese"
                }
            },
            {
                "step": "2.2 Submit review",
                "tool": "restaurant_review_tool",
                "input_source": "question",
                "param": {
                    "restaurantName": "Manhan Quanxi",
                    "stars": "4",
                    "reviewText": "Elegant environment and authentic Beijing roast duck"
                }
            },
            {
                "step": "3.2 Find and display user's previous review content",
                "tool": "restaurant_review_tool",
                "input_source": "question",
                "param": {
                    "restaurantName": "Jinmanlou"
                }
            },
            {
                "step": "4.3 Use review prediction model",
                "tool": "restaurant_review_analyzer",
                "input_source": "restaurant_review_tool tool",
                "param": {
                    "reviewText": "<User's previous review content>",
                    "restaurantName": "Jinmanlou"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please arrange a table for four at your restaurant at 7 o'clock tonight, and pre-order a tomato beef brisket pot and a steamed sea bass. Also, complete the payment in advance so that we can enjoy the meal directly.",
        "toolset": [
            {
                "name": "table_booking_api",
                "input_structure": "Requires user name, contact information, restaurant name, reservation date and time, number of people, and any special requirements. The restaurant ID and table ID are also needed if available.",
                "description": "Restaurant table reservation",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "User name"
                        },
                        "contact": {
                            "type": "string",
                            "description": "User contact information"
                        },
                        "table_id": {
                            "type": "integer",
                            "description": "Table number"
                        },
                        "time": {
                            "type": "string",
                            "description": "Reservation time"
                        },
                        "restaurant_name": {
                            "type": "string",
                            "description": "Restaurant name"
                        },
                        "date": {
                            "type": "string",
                            "description": "Reservation date"
                        },
                        "number_of_people": {
                            "type": "string",
                            "description": "Number of people for the reservation"
                        },
                        "special_requirements": {
                            "type": "string",
                            "description": "Special dietary requirements"
                        },
                        "restaurant_id": {
                            "type": "integer",
                            "description": "Restaurant ID"
                        },
                        "seats": {
                            "type": "integer",
                            "description": "Number of seats at the table"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing reservation status, reservation ID, and detailed reservation information.",
                    "properties": {
                        "reservation_status": {
                            "type": "string",
                            "description": "Reservation status"
                        },
                        "reservation_id": {
                            "type": "integer",
                            "description": "Reservation ID"
                        },
                        "reservation_details": {
                            "type": "object",
                            "description": "Reservation details"
                        }
                    }
                }
            },
            {
                "name": "menu_select_api",
                "input_structure": "Requires dish ID and quantity for each dish to be pre-ordered. The user should confirm the dish availability and any special instructions.",
                "description": "Ordering API for selecting dishes",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dish_id": {
                            "description": "Dish ID",
                            "type": "integer"
                        },
                        "quantity": {
                            "description": "Quantity of dishes",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the generated order ID for subsequent ordering and checkout operations.",
                    "properties": {
                        "order_id": {
                            "description": "Generated order ID for subsequent ordering and checkout operations",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "checkout_api",
                "input_structure": "Requires order ID, payment amount, and payment method. The user should ensure the payment method is valid and sufficient funds are available.",
                "description": "Checkout API, dependent on the result of the previous Place Order API 'Order ID'",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "order_id": {
                            "description": "Order ID",
                            "type": "integer"
                        },
                        "amount": {
                            "description": "Payment Amount",
                            "type": "integer"
                        },
                        "payment_method": {
                            "description": "Payment Method",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the total bill amount and payment status.",
                    "properties": {
                        "total_bill": {
                            "description": "Total Bill Amount",
                            "type": "integer"
                        },
                        "payment_status": {
                            "description": "Payment Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.4 Contact restaurant for reservation",
                "tool": "table_booking_api",
                "input_source": "question",
                "param": {
                    "time": "Tonight at 7 o'clock",
                    "number_of_people": "Four"
                }
            },
            {
                "step": "2.3 Notify restaurant to pre-order dishes",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "Tomato Beef Brisket Pot ID",
                    "quantity": "1"
                }
            },
            {
                "step": "2.4 Provide pre-ordered dish information",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "Steamed Sea Bass ID",
                    "quantity": "1"
                }
            },
            {
                "step": "3.3 Complete payment",
                "tool": "checkout_api",
                "input_source": "menu_select_api tool",
                "param": {
                    "order_id": "<Generated Order ID>",
                    "amount": "Total Dish Price",
                    "payment_method": "Restaurant Payment Methods"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please book a serving of scrambled eggs with tomatoes and two servings of Kung Pao chicken for table number 8 at tonight's party, and help me check out after confirming the order.",
        "toolset": [
            {
                "name": "menu_select_api",
                "input_structure": "Requires dish ID and quantity for each dish to be ordered. The API needs access to the restaurant's menu database to validate dish availability. User confirmation may be required for dish selection.",
                "description": "Ordering API for selecting dishes",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dish_id": {
                            "description": "Dish ID",
                            "type": "integer"
                        },
                        "quantity": {
                            "description": "Quantity of dishes",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Generates an order ID that can be used for further operations like order confirmation and checkout.",
                    "properties": {
                        "order_id": {
                            "description": "Generated order ID for subsequent ordering and checkout operations",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "place_order",
                "input_structure": "Requires a list of dishes with their IDs and quantities, a table ID, and an order ID. The API needs access to the restaurant's reservation system to confirm table availability.",
                "description": "Place an order based on dish information and table number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dishes": {
                            "type": "array",
                            "description": "List of dishes, each dish includes dish ID and quantity"
                        },
                        "table_id": {
                            "type": "integer",
                            "description": "Table number"
                        },
                        "order_id": {
                            "type": "integer",
                            "description": "Order number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms the order by generating an order ID and provides a confirmation message.",
                    "properties": {
                        "order_id": {
                            "type": "integer",
                            "description": "Generated order ID"
                        },
                        "confirmation": {
                            "description": "Order confirmation message",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "checkout_api",
                "input_structure": "Requires an order ID, payment amount, and payment method. The API needs access to the payment gateway to process the transaction.",
                "description": "Checkout API, dependent on the result of the previous Place Order API 'Order ID'",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "order_id": {
                            "description": "Order ID",
                            "type": "integer"
                        },
                        "amount": {
                            "description": "Payment Amount",
                            "type": "integer"
                        },
                        "payment_method": {
                            "description": "Payment Method",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the total bill amount and the status of the payment transaction.",
                    "properties": {
                        "total_bill": {
                            "description": "Total Bill Amount",
                            "type": "integer"
                        },
                        "payment_status": {
                            "description": "Payment Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.3.2 Select dishes and generate order",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "scrambled eggs with tomatoes",
                    "quantity": "1"
                }
            },
            {
                "step": "1.3.3 Select dishes and update order",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "Kung Pao chicken",
                    "quantity": "2"
                }
            },
            {
                "step": "1.3.6 Specify delivery table number and confirm order",
                "tool": "place_order",
                "input_source": "menu_select_api tool",
                "param": {
                    "order_id": "<Generated order ID>",
                    "table_id": "8"
                }
            },
            {
                "step": "2.3 Complete payment",
                "tool": "checkout_api",
                "input_source": "place_order tool",
                "param": {
                    "order_id": "<Generated order ID>",
                    "amount": "<Confirmed order amount>",
                    "payment_method": "User-selected payment method"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I want to find Italian restaurants located in Central, especially those that have received customer reviews in the past month, and conduct sentiment analysis and star rating prediction for a restaurant named La Tavola, and finally, I would like to post a 4-star review saying 'The dishes are exquisite, but the service is a bit slow.'",
        "toolset": [
            {
                "name": "restaurant_review",
                "input_structure": "Requires location, cuisine type, and a visit date to filter restaurant reviews. The location should be a valid geographical area, cuisine should be a recognized type, and visit date should be formatted as a date string.",
                "description": "Restaurant Review Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "location": {
                            "description": "Restaurant location",
                            "type": "string"
                        },
                        "cuisine": {
                            "description": "Type of cuisine offered by the restaurant",
                            "type": "string"
                        },
                        "visitDate": {
                            "description": "Visit date",
                            "format": "date",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides average rating, total number of reviews, and details of the highest-rated review for the specified criteria.",
                    "properties": {
                        "avg_rating": {
                            "description": "Average restaurant rating",
                            "type": "number"
                        },
                        "total_reviews": {
                            "description": "Total number of reviews",
                            "type": "integer"
                        },
                        "top_review": {
                            "description": "Details of the highest-rated review",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "restaurant_review_analyzer",
                "input_structure": "Requires review text, visit date, and restaurant name for analysis. Review text should be a string, visit date a valid date string, and restaurant name a recognized entity.",
                "description": "Restaurant Review Analysis Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "reviewText": {
                            "description": "Content of the user's review",
                            "type": "string"
                        },
                        "visitDate": {
                            "description": "Date of the user's visit",
                            "type": "string"
                        },
                        "restaurantName": {
                            "description": "Name of the restaurant",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Outputs sentiment analysis result and predicted star rating based on the review text.",
                    "properties": {
                        "sentiment": {
                            "description": "Sentiment analysis result of the review",
                            "type": "string"
                        },
                        "starRating": {
                            "description": "Predicted star rating",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "restaurant_review_tool",
                "input_structure": "Requires restaurant name, visit date, star rating, and review text for submission. Restaurant name should be a valid entity, visit date a date-time string, star rating an integer between 1 and 5, and review text a string.",
                "description": "For submitting reviews of a specific restaurant",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "restaurantName": {
                            "description": "Name of the restaurant",
                            "type": "string"
                        },
                        "visitDate": {
                            "description": "Visit date",
                            "type": "string",
                            "format": "date-time"
                        },
                        "stars": {
                            "description": "Star rating",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 5
                        },
                        "reviewText": {
                            "description": "Content of the review",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms the submission status and provides updated average star rating and total number of reviews.",
                    "properties": {
                        "average_stars": {
                            "description": "Average star rating",
                            "type": "number"
                        },
                        "total_reviews": {
                            "description": "Total number of reviews",
                            "type": "integer"
                        },
                        "status": {
                            "description": "Status of the review submission",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.4 Search for Italian restaurants and check reviews",
                "tool": "restaurant_review",
                "input_source": "question",
                "param": {
                    "location": "Central",
                    "cuisine": "Italian",
                    "visitDate": "One month before the current date"
                }
            },
            {
                "step": "2.2 Conduct sentiment analysis on high reviews",
                "tool": "restaurant_review_analyzer",
                "input_source": "restaurant_review tool",
                "param": {
                    "reviewText": "<List of high reviews for La Tavola restaurant>",
                    "restaurantName": "La Tavola"
                }
            },
            {
                "step": "3.1 Predict the star rating for high reviews",
                "tool": "restaurant_review_analyzer",
                "input_source": "restaurant_review tool",
                "param": {
                    "reviewText": "<List of high reviews for La Tavola restaurant>",
                    "restaurantName": "La Tavola"
                }
            },
            {
                "step": "4.3 Submit the review",
                "tool": "restaurant_review_tool",
                "input_source": "question",
                "param": {
                    "restaurantName": "La Tavola",
                    "visitDate": "Current date",
                    "stars": "4",
                    "reviewText": "The dishes are exquisite, but the service is a bit slow."
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to host a party at home and would like to use a service to select 3 servings of Kung Pao Chicken and 5 servings of Shredded Pork with Green Pepper, add them to the same order, and assign it to my table ID 32. Then confirm the order, prepare the dishes, and help me complete the payment after a bill of 520 yuan is generated.",
        "toolset": [
            {
                "name": "menu_select_api",
                "input_structure": "Requires dish ID and quantity as inputs. The dish ID must be a valid integer corresponding to a menu item. Quantity must be a positive integer. The user should ensure the dish is available before selection.",
                "description": "Ordering API for selecting dishes",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dish_id": {
                            "description": "Dish ID",
                            "type": "integer"
                        },
                        "quantity": {
                            "description": "Quantity of dishes",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the generated order ID, which is used for subsequent ordering and checkout operations.",
                    "properties": {
                        "order_id": {
                            "description": "Generated order ID for subsequent ordering and checkout operations",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "place_order",
                "input_structure": "Requires a list of dishes with dish IDs and quantities, a table ID, and an order ID. The table ID must be a valid integer representing the table number. The order ID should be obtained from the menu selection step.",
                "description": "Place an order based on dish information and table number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "dishes": {
                            "type": "array",
                            "description": "List of dishes, each dish includes dish ID and quantity"
                        },
                        "table_id": {
                            "type": "integer",
                            "description": "Table number"
                        },
                        "order_id": {
                            "type": "integer",
                            "description": "Order number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the order ID and a confirmation message indicating the order has been placed successfully.",
                    "properties": {
                        "order_id": {
                            "type": "integer",
                            "description": "Generated order ID"
                        },
                        "confirmation": {
                            "description": "Order confirmation message",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "checkout_api",
                "input_structure": "Requires an order ID, payment amount, and payment method. The order ID should be from the place order step. The payment amount must match the total bill generated.",
                "description": "Checkout API, dependent on the result of the previous Place Order API 'Order ID'",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "order_id": {
                            "description": "Order ID",
                            "type": "integer"
                        },
                        "amount": {
                            "description": "Payment Amount",
                            "type": "integer"
                        },
                        "payment_method": {
                            "description": "Payment Method",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the total bill amount and the payment status, indicating whether the payment was successful.",
                    "properties": {
                        "total_bill": {
                            "description": "Total Bill Amount",
                            "type": "integer"
                        },
                        "payment_status": {
                            "description": "Payment Status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Select Kung Pao Chicken to add to order",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "Kung Pao Chicken ID",
                    "quantity": "3"
                }
            },
            {
                "step": "1.4 Select Shredded Pork with Green Pepper to add to order",
                "tool": "menu_select_api",
                "input_source": "question",
                "param": {
                    "dish_id": "Shredded Pork with Green Pepper ID",
                    "quantity": "5"
                }
            },
            {
                "step": "2.2 Assign order to table",
                "tool": "place_order",
                "input_source": "menu_select_api tool",
                "param": {
                    "dishes": "[{'dish_id':'Kung Pao Chicken ID'}]",
                    "table_id": "32",
                    "order_id": "<Order ID>"
                }
            },
            {
                "step": "5.4 Complete payment operation",
                "tool": "checkout_api",
                "input_source": "place_order tool",
                "param": {
                    "order_id": "<Order ID>",
                    "amount": "520",
                    "payment_method": "online_payment"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I am Zhang Sanli, I have booked a single room at H1234 Hotel, with the check-in date on January 1, 2023, and the check-out date on January 10, 2023. I now need to change the room type to a deluxe single room and change the check-out date to January 15, 2023.\n",
        "toolset": [
            {
                "name": "hotel_booking_query",
                "input_structure": "Requires the hotel name, check-in and check-out dates, and optionally the confirmation number and room type. The user must provide valid dates and hotel details to retrieve booking information.",
                "description": "Hotel Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "checkInDate": {
                            "description": "Expected Check-in Date",
                            "type": "string"
                        },
                        "checkOutDate": {
                            "description": "Expected Check-out Date",
                            "type": "string"
                        },
                        "hotelName": {
                            "description": "Hotel Name",
                            "type": "string"
                        },
                        "confirmation_number": {
                            "description": "Booking Confirmation Number",
                            "type": "string"
                        },
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel Identifier ID"
                        },
                        "room_type": {
                            "type": "string",
                            "description": "Room Type"
                        },
                        "number_of_rooms": {
                            "type": "integer",
                            "description": "Number of Rooms Inquired"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns booking availability and detailed order information including customer name, hotel ID, check-in and check-out dates, room type, number of rooms, and order status.",
                    "properties": {
                        "availability": {
                            "description": "Booking Availability",
                            "type": "boolean"
                        },
                        "order_details": {
                            "type": "object",
                            "description": "Booking Order Details",
                            "properties": {
                                "customer_name": {
                                    "description": "Customer Name",
                                    "type": "string"
                                },
                                "hotel_id": {
                                    "description": "Hotel Identifier ID",
                                    "type": "string"
                                },
                                "check_in": {
                                    "description": "Check-in Date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "check_out": {
                                    "description": "Check-out Date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "room_type": {
                                    "description": "Room Type",
                                    "type": "string"
                                },
                                "number_of_rooms": {
                                    "description": "Number of Rooms",
                                    "type": "integer"
                                },
                                "status": {
                                    "description": "Order Status",
                                    "type": "string"
                                }
                            }
                        },
                        "availability_status": {
                            "type": "string",
                            "description": "Room Availability Status"
                        }
                    }
                }
            },
            {
                "name": "hotel_booking_modification",
                "input_structure": "Requires a valid reservation confirmation number and the new details to be modified such as check-in date, check-out date, room type, and number of rooms. The user must ensure the confirmation number is correct.",
                "description": "Hotel order modification interface, used to modify existing hotel reservation orders. Depends on the confirmation number provided by the hotel booking interface (hotel_booking).",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "confirmation_number": {
                            "description": "Reservation confirmation number",
                            "type": "string"
                        },
                        "check_in": {
                            "description": "New check-in date",
                            "type": "string",
                            "format": "date"
                        },
                        "check_out": {
                            "description": "New check-out date",
                            "type": "string",
                            "format": "date"
                        },
                        "room_type": {
                            "description": "New room type",
                            "type": "string"
                        },
                        "number_of_rooms": {
                            "description": "New number of rooms",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the modification request indicating success or failure.",
                    "properties": {
                        "modification_status": {
                            "description": "Order modification status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.4 Retrieve booking confirmation number",
                "tool": "hotel_booking_query",
                "input_source": "question",
                "param": {
                    "hotelName": "H1234 Hotel",
                    "checkInDate": "January ",
                    "checkOutDate": "January 1",
                    "room_type": "Single room"
                }
            },
            {
                "step": "2.2 Call hotel booking modification interface to change room type",
                "tool": "hotel_booking_modification",
                "input_source": "hotel_booking_query tool",
                "param": {
                    "confirmation_number": "<Booking Confirmation Number>",
                    "room_type": "Deluxe single room"
                }
            },
            {
                "step": "3.2 Call hotel booking modification interface to change check-out date",
                "tool": "hotel_booking_modification",
                "input_source": "hotel_booking_query tool",
                "param": {
                    "confirmation_number": "<Booking Confirmation Number>",
                    "check_out": "January 1"
                }
            },
            {
                "step": "4.1 Call hotel booking query interface to get the latest booking details",
                "tool": "hotel_booking_query",
                "input_source": "hotel_booking_modification tool",
                "param": {
                    "confirmation_number": "<Booking Confirmation Number>"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I booked a hotel last month with the confirmation number H12345678, for a single room from March 20, 2023, to March 25, 2023, 1 room. Now I want to change it to a double room and add one more room, with the check-in date unchanged. Please help me modify the reservation.\n",
        "toolset": [
            {
                "name": "hotel_booking_query",
                "input_structure": "Requires a confirmation number to retrieve booking details. Optionally, check-in and check-out dates, hotel name, and room type can be provided to refine the query. The tool accesses the hotel's booking system to fetch current reservation details.",
                "description": "Hotel Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "checkInDate": {
                            "description": "Expected Check-in Date",
                            "type": "string"
                        },
                        "checkOutDate": {
                            "description": "Expected Check-out Date",
                            "type": "string"
                        },
                        "hotelName": {
                            "description": "Hotel Name",
                            "type": "string"
                        },
                        "confirmation_number": {
                            "description": "Booking Confirmation Number",
                            "type": "string"
                        },
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel Identifier ID"
                        },
                        "room_type": {
                            "type": "string",
                            "description": "Room Type"
                        },
                        "number_of_rooms": {
                            "type": "integer",
                            "description": "Number of Rooms Inquired"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object containing availability status and detailed order information, including customer name, hotel ID, check-in and check-out dates, room type, number of rooms, and order status.",
                    "properties": {
                        "availability": {
                            "description": "Booking Availability",
                            "type": "boolean"
                        },
                        "order_details": {
                            "type": "object",
                            "description": "Booking Order Details",
                            "properties": {
                                "customer_name": {
                                    "description": "Customer Name",
                                    "type": "string"
                                },
                                "hotel_id": {
                                    "description": "Hotel Identifier ID",
                                    "type": "string"
                                },
                                "check_in": {
                                    "description": "Check-in Date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "check_out": {
                                    "description": "Check-out Date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "room_type": {
                                    "description": "Room Type",
                                    "type": "string"
                                },
                                "number_of_rooms": {
                                    "description": "Number of Rooms",
                                    "type": "integer"
                                },
                                "status": {
                                    "description": "Order Status",
                                    "type": "string"
                                }
                            }
                        },
                        "availability_status": {
                            "type": "string",
                            "description": "Room Availability Status"
                        }
                    }
                }
            },
            {
                "name": "check_room_availability",
                "input_structure": "Requires hotel ID or name, check-in and check-out dates, and desired room type to check availability. The tool queries the hotel's reservation system to determine if the requested room type is available for the specified dates.",
                "description": "Check the availability and price of room types at a specified hotel on specific dates",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "hotel_name": {
                            "type": "string",
                            "description": "Hotel Name"
                        },
                        "check_in_date": {
                            "type": "string",
                            "description": "Check-in Date"
                        },
                        "check_out_date": {
                            "type": "string",
                            "description": "Check-out Date"
                        },
                        "location": {
                            "type": "string",
                            "description": "Hotel Location"
                        },
                        "room_type": {
                            "type": "string",
                            "description": "Room Type"
                        },
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel Identifier ID"
                        },
                        "number_of_rooms": {
                            "type": "integer",
                            "description": "Number of Rooms"
                        },
                        "location_preference": {
                            "type": "string",
                            "description": "Location Preference"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides availability status, room price, and a list of available rooms and offers. Includes hotel ID and selected booking option if applicable.",
                    "properties": {
                        "availability": {
                            "type": "boolean",
                            "description": "Whether the room is available"
                        },
                        "price": {
                            "type": "number",
                            "description": "Room Price"
                        },
                        "availability_status": {
                            "type": "string",
                            "description": "Hotel Room Availability Status"
                        },
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel Identifier ID"
                        },
                        "available_rooms": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "List of Available Rooms"
                        },
                        "offers": {
                            "type": "array",
                            "description": "List of Available Promotions"
                        },
                        "selected_option": {
                            "type": "string",
                            "description": "Selected Booking Option"
                        }
                    }
                }
            },
            {
                "name": "hotel_booking_modification",
                "input_structure": "Requires a confirmation number and new reservation details such as check-in and check-out dates, room type, and number of rooms. The tool submits a modification request to the hotel's booking system.",
                "description": "Hotel order modification interface, used to modify existing hotel reservation orders. Depends on the confirmation number provided by the hotel booking interface (hotel_booking).",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "confirmation_number": {
                            "description": "Reservation confirmation number",
                            "type": "string"
                        },
                        "check_in": {
                            "description": "New check-in date",
                            "type": "string",
                            "format": "date"
                        },
                        "check_out": {
                            "description": "New check-out date",
                            "type": "string",
                            "format": "date"
                        },
                        "room_type": {
                            "description": "New room type",
                            "type": "string"
                        },
                        "number_of_rooms": {
                            "description": "New number of rooms",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the modification request, indicating success or failure.",
                    "properties": {
                        "modification_status": {
                            "description": "Order modification status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Query reservation order details",
                "tool": "hotel_booking_query",
                "input_source": "question",
                "param": {
                    "confirmation_number": "H12345678"
                }
            },
            {
                "step": "3.2 Obtain hotel ID",
                "tool": "hotel_booking_query",
                "input_source": "hotel_booking_query tool",
                "param": {
                    "confirmation_number": "H12345678"
                }
            },
            {
                "step": "3.3 Confirm availability of the new room type",
                "tool": "check_room_availability",
                "input_source": "hotel_booking_query tool",
                "param": {
                    "hotel_id": "<Hotel ID>",
                    "check_in_date": "2023-03-20",
                    "check_out_date": "2023-03-25",
                    "room_type": "Double room",
                    "number_of_rooms": "2"
                }
            },
            {
                "step": "4.1 Submit reservation modification request",
                "tool": "hotel_booking_modification",
                "input_source": "question",
                "param": {
                    "confirmation_number": "H12345678",
                    "check_in": "2023-03-20",
                    "check_out": "2023-03-25",
                    "room_type": "Double room",
                    "number_of_rooms": "2"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to book the most luxurious hotel in Shanghai for May 1st to 5th, the customer's name is Zhang San, booking two suites.\n",
        "toolset": [
            {
                "name": "search_luxury_hotels",
                "input_structure": "Requires the name of the city where luxury hotels are to be searched. The city name must be a valid string representing a known location.",
                "description": "Search for luxury hotels in a specified city",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "city": {
                            "type": "string",
                            "description": "City name"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object containing the identifier ID of the luxury hotel found in the specified city.",
                    "properties": {
                        "hotel_id": {
                            "type": "string",
                            "description": "Identifier ID of the luxury hotel"
                        }
                    }
                }
            },
            {
                "name": "check_room_availability",
                "input_structure": "Requires hotel name, check-in and check-out dates, location, room type, hotel ID, number of rooms, and location preference. Dates must be in a valid format, and the hotel ID must be a valid identifier.",
                "description": "Check the availability and price of room types at a specified hotel on specific dates",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "hotel_name": {
                            "type": "string",
                            "description": "Hotel Name"
                        },
                        "check_in_date": {
                            "type": "string",
                            "description": "Check-in Date"
                        },
                        "check_out_date": {
                            "type": "string",
                            "description": "Check-out Date"
                        },
                        "location": {
                            "type": "string",
                            "description": "Hotel Location"
                        },
                        "room_type": {
                            "type": "string",
                            "description": "Room Type"
                        },
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel Identifier ID"
                        },
                        "number_of_rooms": {
                            "type": "integer",
                            "description": "Number of Rooms"
                        },
                        "location_preference": {
                            "type": "string",
                            "description": "Location Preference"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object indicating room availability, price, and a list of available rooms and offers. Includes the hotel ID and selected booking option.",
                    "properties": {
                        "availability": {
                            "type": "boolean",
                            "description": "Whether the room is available"
                        },
                        "price": {
                            "type": "number",
                            "description": "Room Price"
                        },
                        "availability_status": {
                            "type": "string",
                            "description": "Hotel Room Availability Status"
                        },
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel Identifier ID"
                        },
                        "available_rooms": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "List of Available Rooms"
                        },
                        "offers": {
                            "type": "array",
                            "description": "List of Available Promotions"
                        },
                        "selected_option": {
                            "type": "string",
                            "description": "Selected Booking Option"
                        }
                    }
                }
            },
            {
                "name": "confirm_room_price_and_policy",
                "input_structure": "Requires hotel ID and room type to confirm the price and booking policy. The hotel ID must be a valid identifier, and the room type must be specified.",
                "description": "Confirm the room price and booking policy of the specified hotel",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel Identifier ID"
                        },
                        "room_type": {
                            "type": "string",
                            "description": "Room Type"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object containing the confirmed room price and booking policy.",
                    "properties": {
                        "price": {
                            "type": "number",
                            "description": "Room Price"
                        },
                        "policy": {
                            "type": "string",
                            "description": "Booking Policy"
                        }
                    }
                }
            },
            {
                "name": "hotel_booking_query",
                "input_structure": "Requires check-in and check-out dates, hotel name, confirmation number, hotel ID, room type, and number of rooms. Dates must be in a valid format, and the confirmation number must be provided.",
                "description": "Hotel Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "checkInDate": {
                            "description": "Expected Check-in Date",
                            "type": "string"
                        },
                        "checkOutDate": {
                            "description": "Expected Check-out Date",
                            "type": "string"
                        },
                        "hotelName": {
                            "description": "Hotel Name",
                            "type": "string"
                        },
                        "confirmation_number": {
                            "description": "Booking Confirmation Number",
                            "type": "string"
                        },
                        "hotel_id": {
                            "type": "string",
                            "description": "Hotel Identifier ID"
                        },
                        "room_type": {
                            "type": "string",
                            "description": "Room Type"
                        },
                        "number_of_rooms": {
                            "type": "integer",
                            "description": "Number of Rooms Inquired"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object with booking availability and detailed order information, including customer name, hotel ID, dates, room type, and status.",
                    "properties": {
                        "availability": {
                            "description": "Booking Availability",
                            "type": "boolean"
                        },
                        "order_details": {
                            "type": "object",
                            "description": "Booking Order Details",
                            "properties": {
                                "customer_name": {
                                    "description": "Customer Name",
                                    "type": "string"
                                },
                                "hotel_id": {
                                    "description": "Hotel Identifier ID",
                                    "type": "string"
                                },
                                "check_in": {
                                    "description": "Check-in Date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "check_out": {
                                    "description": "Check-out Date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "room_type": {
                                    "description": "Room Type",
                                    "type": "string"
                                },
                                "number_of_rooms": {
                                    "description": "Number of Rooms",
                                    "type": "integer"
                                },
                                "status": {
                                    "description": "Order Status",
                                    "type": "string"
                                }
                            }
                        },
                        "availability_status": {
                            "type": "string",
                            "description": "Room Availability Status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Search for five-star hotels in the Shanghai area",
                "tool": "search_luxury_hotels",
                "input_source": "question",
                "param": {
                    "city": "Shanghai"
                }
            },
            {
                "step": "3.1 Check the room availability of the selected luxury hotel for the check-in date",
                "tool": "check_room_availability",
                "input_source": "search_luxury_hotels tool",
                "param": {
                    "hotel_id": "<Most luxurious hotel ID>",
                    "check_in_date": "May 1st",
                    "check_out_date": "5th",
                    "room_type": "Suite",
                    "number_of_rooms": "2"
                }
            },
            {
                "step": "3.2 Confirm the price and booking policy of the suite",
                "tool": "confirm_room_price_and_policy",
                "input_source": "check_room_availability tool",
                "param": {
                    "hotel_id": "<Most luxurious hotel ID>",
                    "room_type": "Suite"
                }
            },
            {
                "step": "3.5 Confirm the booking and obtain the booking voucher (Booking confirmation number: Booking confirmation number)",
                "tool": "hotel_booking_query",
                "input_source": "confirm_room_price_and_policy tool",
                "param": {
                    "confirmation_number": "<Booking confirmation number>"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to wake up early tomorrow, I want to set an alarm for both 7:00 AM and 8:30 AM, and because there is an important meeting tomorrow, please change the 7:00 AM alarm to 6:30 AM, and change the original one-time setting to ring every weekday.\n",
        "toolset": [
            {
                "name": "clock_alarm_set",
                "input_structure": "Requires time in HH:MM format, optional date, label, and frequency. Frequency can be once, daily, or specific days of the week. User confirmation needed for setting alarms.",
                "description": "Set Alarm Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "time": {
                            "description": "Alarm Set Time",
                            "type": "string"
                        },
                        "date": {
                            "description": "Alarm Set Date",
                            "type": "string"
                        },
                        "label": {
                            "description": "Alarm Label",
                            "type": "string"
                        },
                        "frequency": {
                            "description": "Alarm Set Frequency, options: Once, Daily, Monday to Sunday, default is Once",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the confirmation of the alarm set with details like time, date, label, and frequency.",
                    "properties": {
                        "clock_alarm_info": {
                            "description": "Alarm Setting Result",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "clock_alarm_change",
                "input_structure": "Requires original time and new time in HH:MM format, optional date, label, and frequency changes. User confirmation needed for modifying alarms.",
                "description": "Change Alarm Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "originalTime": {
                            "description": "The original time of the alarm to be changed",
                            "type": "string"
                        },
                        "date": {
                            "description": "The date after the alarm is changed",
                            "type": "string"
                        },
                        "label": {
                            "description": "The label after the alarm is changed",
                            "type": "string"
                        },
                        "changeTime": {
                            "description": "The time after the alarm is changed",
                            "type": "string"
                        },
                        "originalFrequency": {
                            "description": "The original frequency of the alarm to be changed",
                            "type": "string"
                        },
                        "changeFrequency": {
                            "description": "The frequency after the alarm is changed",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the confirmation of the alarm change with details like original and new time, date, label, and frequency.",
                    "properties": {
                        "clock_alarm_info": {
                            "description": "Alarm change result",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Set the first alarm",
                "tool": "clock_alarm_set",
                "input_source": "question",
                "param": {
                    "time": "07:00",
                    "frequency": "once"
                }
            },
            {
                "step": "1.3 Set the second alarm",
                "tool": "clock_alarm_set",
                "input_source": "question",
                "param": {
                    "time": "08:30",
                    "frequency": "once"
                }
            },
            {
                "step": "2.2 Adjust the alarm time",
                "tool": "clock_alarm_change",
                "input_source": "clock_alarm_set tool",
                "param": {
                    "originalTime": "07:00",
                    "changeTime": "06:30",
                    "originalFrequency": "once",
                    "changeFrequency": "every weekday"
                }
            },
            {
                "step": "3.2 Change the alarm to repeat on weekdays",
                "tool": "clock_alarm_change",
                "input_source": "clock_alarm_set tool",
                "param": {
                    "originalTime": "08:30",
                    "changeTime": "08:30",
                    "originalFrequency": "once",
                    "changeFrequency": "every weekday"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I would like to book two meeting rooms in Beijing and Shanghai, each for 4 hours, with the meeting starting at 9 a.m. today.\n",
        "toolset": [
            {
                "name": "conference_room_query",
                "input_structure": "Requires the start and end time of the meeting, the city where the meeting room is located, and optionally the room ID if a specific room is being queried. The user must provide valid date and time formats.",
                "description": "Conference Room Reservation Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "The start time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "The end time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "The ID of the conference room to be queried",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the conference room to be queried is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A list of available conference rooms that match the search criteria, including their status and availability.",
                    "properties": {
                        "conference_room_status": {
                            "description": "The reservation list of conference rooms that meet the search criteria",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "conference_room_booking",
                "input_structure": "Requires the start and end time of the meeting, the city, the room ID of the selected conference room, and optionally the meeting agenda. The user must ensure the room is available before booking.",
                "description": "Conference Room Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "Meeting start time (date+time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "Meeting end time (date+time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "Conference room ID",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the conference room is located",
                            "type": "string"
                        },
                        "content": {
                            "description": "Meeting agenda",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation of the booking status, indicating whether the booking was successful or if there were any issues.",
                    "properties": {
                        "booking_status": {
                            "description": "Conference room booking status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Query Beijing meeting room",
                "tool": "conference_room_query",
                "input_source": "question",
                "param": {
                    "startTime": "9 a.m. today",
                    "endTime": "1 p.m. today",
                    "city": "Beijing"
                }
            },
            {
                "step": "2.3 Select and book Beijing meeting room",
                "tool": "conference_room_booking",
                "input_source": "conference_room_query tool",
                "param": {
                    "startTime": "9 a.m. today",
                    "endTime": "1 p.m. today",
                    "roomID": "<Beijing meeting room number>",
                    "city": "Beijing"
                }
            },
            {
                "step": "3.1 Query Shanghai meeting room",
                "tool": "conference_room_query",
                "input_source": "question",
                "param": {
                    "startTime": "9 a.m. today",
                    "endTime": "1 p.m. today",
                    "city": "Shanghai"
                }
            },
            {
                "step": "3.3 Select and book Shanghai meeting room",
                "tool": "conference_room_booking",
                "input_source": "conference_room_query tool",
                "param": {
                    "startTime": "9 a.m. today",
                    "endTime": "1 p.m. today",
                    "roomID": "<Shanghai meeting room number>",
                    "city": "Shanghai"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I would like to change a flight booking, originally scheduled for March 20th at 17:00, flight HU1234, from Beijing to Shanghai. I hope to change it to the same time on March 21st for flight HU4321, passenger name is Zhang San.\n",
        "toolset": [
            {
                "name": "flight_search",
                "input_structure": "Requires details such as departure date, flight number, departure and arrival cities. Optional parameters include return date, destination, earliest departure time, direct flight preference, price limit, booking name, cabin class, and time period. Network access is needed to query flight databases.",
                "description": "Flight Ticket Search Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departure_date": {
                            "type": "string",
                            "description": "Departure Date"
                        },
                        "return_date": {
                            "type": "string",
                            "description": "Return Date"
                        },
                        "destination": {
                            "type": "string",
                            "description": "Destination"
                        },
                        "departure_city": {
                            "type": "string",
                            "description": "Departure City"
                        },
                        "arrival_city": {
                            "type": "string",
                            "description": "Arrival City"
                        },
                        "departure_time": {
                            "type": "string",
                            "description": "Earliest Departure Time"
                        },
                        "directFlight": {
                            "type": "boolean",
                            "description": "Direct Flight"
                        },
                        "flightNumber": {
                            "type": "string",
                            "description": "Flight Number"
                        },
                        "priceLimit": {
                            "type": "string",
                            "description": "Price Limit"
                        },
                        "bookingName": {
                            "type": "string",
                            "description": "Booking Name"
                        },
                        "cabinClass": {
                            "type": "string",
                            "description": "Cabin Class"
                        },
                        "timePeriod": {
                            "type": "string",
                            "description": "Time Period, e.g., 'morning'"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a list of available flight options with details such as flight number, departure and arrival times, and price. Also includes the price of the selected flight.",
                    "properties": {
                        "flight_options": {
                            "type": "array",
                            "description": "List of Available Flight Options",
                            "items": {
                                "type": "object"
                            }
                        },
                        "selected_flight_price": {
                            "type": "integer",
                            "description": "Price of the Selected Flight"
                        }
                    }
                }
            },
            {
                "name": "flight_ticket_cancelling",
                "input_structure": "Requires the departure date, flight number, and booking name of the flight to be cancelled. The user must confirm the cancellation before proceeding.",
                "description": "Flight Ticket Cancellation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure time of the flight to be cancelled",
                            "type": "string"
                        },
                        "flightNumber": {
                            "description": "Flight number to be cancelled",
                            "type": "string"
                        },
                        "bookingName": {
                            "description": "Name of the passenger for the flight to be cancelled",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the flight booking cancellation, indicating success or failure.",
                    "properties": {
                        "booking_status": {
                            "description": "Flight booking cancellation status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Query original flight information",
                "tool": "flight_search",
                "input_source": "question",
                "param": {
                    "departure_date": "2023-03-20 17:00",
                    "flightNumber": "HU1234",
                    "departure_city": "Beijing",
                    "arrival_city": "Shanghai"
                }
            },
            {
                "step": "2.2 Query new flight information",
                "tool": "flight_search",
                "input_source": "question",
                "param": {
                    "departure_date": "2023-03-21 17:00",
                    "flightNumber": "HU4321",
                    "departure_city": "Beijing",
                    "arrival_city": "Shanghai"
                }
            },
            {
                "step": "3.1 Check availability of new flight",
                "tool": "flight_search",
                "input_source": "flight_search tool",
                "param": {
                    "departure_date": "2023-03-21 17:00",
                    "flightNumber": "HU4321",
                    "departure_city": "Beijing",
                    "arrival_city": "Shanghai"
                }
            },
            {
                "step": "4.1 Cancel original flight booking",
                "tool": "flight_ticket_cancelling",
                "input_source": "question",
                "param": {
                    "departureDate": "2023-03-20 17:00",
                    "flightNumber": "HU1234",
                    "bookingName": "Zhang San"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to change the ticket for flight CA1234 from Beijing to Shanghai on April 10th to flight CA5678 on April 11th, with the passenger name being Li Ming.\n",
        "toolset": [
            {
                "name": "flight_search",
                "input_structure": "Requires flight details such as departure date, flight number, departure city, and arrival city. The tool accesses airline databases to retrieve available flight options and their statuses.",
                "description": "Flight Ticket Search Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departure_date": {
                            "type": "string",
                            "description": "Departure Date"
                        },
                        "return_date": {
                            "type": "string",
                            "description": "Return Date"
                        },
                        "destination": {
                            "type": "string",
                            "description": "Destination"
                        },
                        "departure_city": {
                            "type": "string",
                            "description": "Departure City"
                        },
                        "arrival_city": {
                            "type": "string",
                            "description": "Arrival City"
                        },
                        "departure_time": {
                            "type": "string",
                            "description": "Earliest Departure Time"
                        },
                        "directFlight": {
                            "type": "boolean",
                            "description": "Direct Flight"
                        },
                        "flightNumber": {
                            "type": "string",
                            "description": "Flight Number"
                        },
                        "priceLimit": {
                            "type": "string",
                            "description": "Price Limit"
                        },
                        "bookingName": {
                            "type": "string",
                            "description": "Booking Name"
                        },
                        "cabinClass": {
                            "type": "string",
                            "description": "Cabin Class"
                        },
                        "timePeriod": {
                            "type": "string",
                            "description": "Time Period, e.g., 'morning'"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a list of available flight options and the price of the selected flight. Each option includes details such as flight number, departure time, and price.",
                    "properties": {
                        "flight_options": {
                            "type": "array",
                            "description": "List of Available Flight Options",
                            "items": {
                                "type": "object"
                            }
                        },
                        "selected_flight_price": {
                            "type": "integer",
                            "description": "Price of the Selected Flight"
                        }
                    }
                }
            },
            {
                "name": "flight_ticket_changing",
                "input_structure": "Requires original and new flight details including flight numbers, departure dates, and passenger name. The tool modifies existing bookings in the airline's system.",
                "description": "Flight Ticket Booking Modification Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "originalDepartureDate": {
                            "description": "The flight departure time that needs to be changed",
                            "type": "string"
                        },
                        "originalFlightNumber": {
                            "description": "The flight number that needs to be changed",
                            "type": "string"
                        },
                        "originalName": {
                            "description": "The name of the passenger whose ticket information needs to be changed",
                            "type": "string"
                        },
                        "newFlightNumber": {
                            "description": "The new flight number after change",
                            "type": "string"
                        },
                        "newDepartureDate": {
                            "description": "The new flight departure time after change",
                            "type": "string"
                        },
                        "newDepartureCity": {
                            "description": "The departure city after change",
                            "type": "string"
                        },
                        "newArrivalCity": {
                            "description": "The arrival city after change",
                            "type": "string"
                        },
                        "newName": {
                            "description": "The name of the new passenger",
                            "type": "string"
                        },
                        "newID": {
                            "description": "The ID number of the new passenger",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the booking modification, indicating success or failure.",
                    "properties": {
                        "booking_status": {
                            "description": "The status of the flight ticket booking modification",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "send_ticket",
                "input_structure": "Requires user's email, flight details, and ticket information. The tool sends electronic tickets to the specified email address.",
                "description": "Send ticketing information to the user",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "description": "User's email address"
                        },
                        "eTicket": {
                            "type": "string",
                            "description": "The electronic ticket to be sent"
                        },
                        "bookingName": {
                            "type": "string",
                            "description": "Passenger's name"
                        },
                        "ticketID": {
                            "type": "string",
                            "description": "Ticket number"
                        },
                        "identityNumber": {
                            "type": "string",
                            "description": "Identity card number of the person purchasing the ticket"
                        },
                        "ticket_info": {
                            "type": "string",
                            "description": "Electronic flight ticket information"
                        },
                        "flightNumber": {
                            "type": "string",
                            "description": "Flight number"
                        },
                        "departureDate": {
                            "type": "string",
                            "description": "Departure date"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates whether the electronic ticket was successfully sent to the user.",
                    "properties": {
                        "send_status": {
                            "type": "string",
                            "description": "Status of the electronic ticket being sent"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Check original flight status",
                "tool": "flight_search",
                "input_source": "question",
                "param": {
                    "departure_date": "April 10th",
                    "flightNumber": "CA1234",
                    "departure_city": "Beijing",
                    "arrival_city": "Shanghai"
                }
            },
            {
                "step": "2.2 Check new flight status",
                "tool": "flight_search",
                "input_source": "question",
                "param": {
                    "departure_date": "April 11th",
                    "flightNumber": "CA5678",
                    "departure_city": "Beijing",
                    "arrival_city": "Shanghai"
                }
            },
            {
                "step": "2.3 Change flight",
                "tool": "flight_ticket_changing",
                "input_source": "question",
                "param": {
                    "originalDepartureDate": "April 10th",
                    "originalFlightNumber": "CA1234",
                    "originalName": "Li Ming",
                    "newFlightNumber": "CA5678",
                    "newDepartureDate": "April 11th"
                }
            },
            {
                "step": "3.1 Send new flight ticket details to user",
                "tool": "send_ticket",
                "input_source": "flight_ticket_changing tool",
                "param": {
                    "bookingName": "Li Ming",
                    "flightNumber": "CA5678",
                    "departureDate": "April 11th"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to purchase a train ticket from Beijing to Shanghai, with a departure time of 8:00 AM on March 17th, and I also need to book a return ticket from Shanghai to Beijing, with a departure time of 3:00 PM on March 20th.\n",
        "toolset": [
            {
                "name": "search_train",
                "input_structure": "Requires departure location, destination, departure time, and optional seat preferences. The user must provide valid station names and a specific date and time for departure.",
                "description": "Search for train tickets based on preferences and return a list of train services that meet the criteria",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departure": {
                            "type": "string",
                            "description": "Departure location"
                        },
                        "destination": {
                            "type": "string",
                            "description": "Destination"
                        },
                        "departure_time": {
                            "type": "string",
                            "description": "Departure time"
                        },
                        "departure_station": {
                            "type": "string",
                            "description": "Departure station"
                        },
                        "train_number": {
                            "type": "string",
                            "description": "Train number"
                        },
                        "seatPreference": {
                            "type": "string",
                            "description": "Seat preference"
                        },
                        "seatType": {
                            "type": "string",
                            "description": "Seat type"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a list of available train services that match the search criteria, including train IDs and options.",
                    "properties": {
                        "train_id": {
                            "description": "High-speed train service ID",
                            "type": "string"
                        },
                        "search_status": {
                            "description": "Search status",
                            "type": "string"
                        },
                        "train_options": {
                            "description": "List of train services that meet the criteria",
                            "type": "array"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_booking",
                "input_structure": "Requires passenger's name, ID number, departure and arrival stations, departure date and time, seat type, and train number. The user must ensure all details are correct and match the selected train schedule.",
                "description": "Train ticket booking tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure date and time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival station",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat type (e.g., hard seat, soft seat, sleeper)",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID number",
                            "type": "string"
                        },
                        "name": {
                            "description": "Passenger's name",
                            "type": "string"
                        },
                        "seatPreference": {
                            "description": "Seat preference",
                            "type": "string"
                        },
                        "trainNumber": {
                            "description": "Train number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms booking status and provides a booking ID for the purchased train ticket.",
                    "properties": {
                        "booking_status": {
                            "description": "Train ticket booking status",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train ticket booking ID",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.3 Search for outbound train ticket",
                "tool": "search_train",
                "input_source": "question",
                "param": {
                    "departure_time": "2023-03-17 08:00",
                    "departure": "Beijing",
                    "destination": "Shanghai",
                    "seatPreference": "Selected seat type"
                }
            },
            {
                "step": "2.6 Purchase outbound train ticket",
                "tool": "train_ticket_booking",
                "input_source": "search_train tool",
                "param": {
                    "trainNumber": "<Train schedule>",
                    "departureDate": "2023-03-17 08:00",
                    "startStation": "Beijing",
                    "endStation": "Shanghai",
                    "seatType": "Selected seat type",
                    "identityNumber": "User's ID number",
                    "name": "User's name"
                }
            },
            {
                "step": "3.3 Search for return train ticket",
                "tool": "search_train",
                "input_source": "question",
                "param": {
                    "departure_time": "2023-03-20 15:00",
                    "departure": "Shanghai",
                    "destination": "Beijing",
                    "seatPreference": "Selected seat type"
                }
            },
            {
                "step": "3.6 Purchase return train ticket",
                "tool": "train_ticket_booking",
                "input_source": "search_train tool",
                "param": {
                    "trainNumber": "<Selected schedule>",
                    "departureDate": "2023-03-20 15:00",
                    "startStation": "Shanghai",
                    "endStation": "Beijing",
                    "seatType": "Selected seat type",
                    "identityNumber": "User's ID number",
                    "name": "User's name"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to go on a business trip to Beijing tomorrow, and I need to book a G102 train ticket from Shanghai to Beijing at 8 o'clock tomorrow morning. Also, I need to change the train ticket I booked last month for the G105 from Shanghai to Guangzhou on May 1st to May 3rd.\n",
        "toolset": [
            {
                "name": "search_train",
                "input_structure": "Requires departure location, destination, departure time, departure station, train number, seat preference, and seat type. The user must provide these details to search for available train services.",
                "description": "Search for train tickets based on preferences and return a list of train services that meet the criteria",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departure": {
                            "type": "string",
                            "description": "Departure location"
                        },
                        "destination": {
                            "type": "string",
                            "description": "Destination"
                        },
                        "departure_time": {
                            "type": "string",
                            "description": "Departure time"
                        },
                        "departure_station": {
                            "type": "string",
                            "description": "Departure station"
                        },
                        "train_number": {
                            "type": "string",
                            "description": "Train number"
                        },
                        "seatPreference": {
                            "type": "string",
                            "description": "Seat preference"
                        },
                        "seatType": {
                            "type": "string",
                            "description": "Seat type"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a list of train services that match the search criteria, including train IDs and search status.",
                    "properties": {
                        "train_id": {
                            "description": "High-speed train service ID",
                            "type": "string"
                        },
                        "search_status": {
                            "description": "Search status",
                            "type": "string"
                        },
                        "train_options": {
                            "description": "List of train services that meet the criteria",
                            "type": "array"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_booking",
                "input_structure": "Requires departure date, start and end stations, seat type, passenger's ID number and name, seat preference, and train number. The user must provide these details to book a train ticket.",
                "description": "Train ticket booking tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure date and time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival station",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat type (e.g., hard seat, soft seat, sleeper)",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID number",
                            "type": "string"
                        },
                        "name": {
                            "description": "Passenger's name",
                            "type": "string"
                        },
                        "seatPreference": {
                            "description": "Seat preference",
                            "type": "string"
                        },
                        "trainNumber": {
                            "description": "Train number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the booking status and a unique ticket ID for the booked train ticket.",
                    "properties": {
                        "booking_status": {
                            "description": "Train ticket booking status",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train ticket booking ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_query",
                "input_structure": "Requires departure date, start and end stations, booking confirmation number, train ID, seat type, ticket ID, and passenger's ID number. The user must provide these details to query train ticket information.",
                "description": "Train Ticket Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure Time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure Station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival Station",
                            "type": "string"
                        },
                        "confirmation_number": {
                            "description": "Booking Confirmation Number",
                            "type": "string"
                        },
                        "trainID": {
                            "description": "Train Number",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat Type",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train Ticket Number",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID Number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the train ticket and detailed order information.",
                    "properties": {
                        "ticket_status": {
                            "description": "Train Ticket Booking List",
                            "type": "string"
                        },
                        "order_details": {
                            "description": "Booking Order Details",
                            "type": "object"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_changing",
                "input_structure": "Requires original ticket ID, passenger's ID number, new departure date, new train ID, new start and end stations, and new seat type. The user must provide these details to change a train ticket.",
                "description": "Train Ticket Rescheduling Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "originalTicketID": {
                            "type": "string",
                            "description": "The train ticket number that needs to be rescheduled"
                        },
                        "identityNumber": {
                            "type": "string",
                            "description": "The identity card number of the ticket purchaser"
                        },
                        "newDepartureDate": {
                            "type": "string",
                            "description": "The new departure date after changing"
                        },
                        "newTrainID": {
                            "type": "string",
                            "description": "The new train number after changing"
                        },
                        "newStartStation": {
                            "type": "string",
                            "description": "The new departure station after changing"
                        },
                        "newEndStation": {
                            "type": "string",
                            "description": "The new arrival station after changing"
                        },
                        "newSeatType": {
                            "type": "string",
                            "description": "The new seat type after changing"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the train ticket rescheduling process.",
                    "properties": {
                        "change_status": {
                            "type": "string",
                            "description": "Train ticket rescheduling status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.3 Query train ticket information",
                "tool": "search_train",
                "input_source": "question",
                "param": {
                    "departure_time": "Tomorrow morning at 8 o'clock",
                    "departure": "Shanghai",
                    "destination": "Beijing"
                }
            },
            {
                "step": "1.6 Book train ticket",
                "tool": "train_ticket_booking",
                "input_source": "search_train tool",
                "param": {
                    "trainNumber": "<Train service>",
                    "departureDate": "Tomorrow morning at 8 o'clock",
                    "startStation": "Shanghai",
                    "endStation": "Beijing",
                    "identityNumber": "User ID number",
                    "name": "User name"
                }
            },
            {
                "step": "2.3 Query train ticket change information",
                "tool": "train_ticket_query",
                "input_source": "question",
                "param": {
                    "departureDate": "May 3rd",
                    "startStation": "Shanghai",
                    "endStation": "Guangzhou"
                }
            },
            {
                "step": "2.4 Complete train ticket change",
                "tool": "train_ticket_changing",
                "input_source": "train_ticket_query tool",
                "param": {
                    "originalTicketID": "The train ticket number for G105 from Shanghai to Guangzhou booked last month on May 1st",
                    "identityNumber": "User ID number",
                    "newDepartureDate": "May 3rd"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I remember I last booked a train ticket from Beijing to Shanghai on April 18th, but now my plans have changed, and I need to change the ticket to April 20th, and I hope to switch to a soft sleeper seat, my ID number is 1234567890ABCDE.\n",
        "toolset": [
            {
                "name": "train_ticket_query",
                "input_structure": "Requires passenger's ID number and optionally the departure date, start station, and end station to query booked train ticket information. The user must provide valid identification details.",
                "description": "Train Ticket Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure Time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure Station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival Station",
                            "type": "string"
                        },
                        "confirmation_number": {
                            "description": "Booking Confirmation Number",
                            "type": "string"
                        },
                        "trainID": {
                            "description": "Train Number",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat Type",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train Ticket Number",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID Number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the train ticket booking and detailed order information, including ticket status and order details.",
                    "properties": {
                        "ticket_status": {
                            "description": "Train Ticket Booking List",
                            "type": "string"
                        },
                        "order_details": {
                            "description": "Booking Order Details",
                            "type": "object"
                        }
                    }
                }
            },
            {
                "name": "search_train",
                "input_structure": "Requires departure location, destination, and departure time to search for available train services. Seat preferences can be specified to filter results.",
                "description": "Search for train tickets based on preferences and return a list of train services that meet the criteria",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departure": {
                            "type": "string",
                            "description": "Departure location"
                        },
                        "destination": {
                            "type": "string",
                            "description": "Destination"
                        },
                        "departure_time": {
                            "type": "string",
                            "description": "Departure time"
                        },
                        "departure_station": {
                            "type": "string",
                            "description": "Departure station"
                        },
                        "train_number": {
                            "type": "string",
                            "description": "Train number"
                        },
                        "seatPreference": {
                            "type": "string",
                            "description": "Seat preference"
                        },
                        "seatType": {
                            "type": "string",
                            "description": "Seat type"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a list of train services that match the search criteria, including train IDs and search status.",
                    "properties": {
                        "train_id": {
                            "description": "High-speed train service ID",
                            "type": "string"
                        },
                        "search_status": {
                            "description": "Search status",
                            "type": "string"
                        },
                        "train_options": {
                            "description": "List of train services that meet the criteria",
                            "type": "array"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_changing",
                "input_structure": "Requires the original ticket ID, passenger's ID number, and new travel details including departure date, train ID, and seat type. The user must confirm the new travel arrangements.",
                "description": "Train Ticket Rescheduling Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "originalTicketID": {
                            "type": "string",
                            "description": "The train ticket number that needs to be rescheduled"
                        },
                        "identityNumber": {
                            "type": "string",
                            "description": "The identity card number of the ticket purchaser"
                        },
                        "newDepartureDate": {
                            "type": "string",
                            "description": "The new departure date after changing"
                        },
                        "newTrainID": {
                            "type": "string",
                            "description": "The new train number after changing"
                        },
                        "newStartStation": {
                            "type": "string",
                            "description": "The new departure station after changing"
                        },
                        "newEndStation": {
                            "type": "string",
                            "description": "The new arrival station after changing"
                        },
                        "newSeatType": {
                            "type": "string",
                            "description": "The new seat type after changing"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates the status of the ticket change operation, confirming whether the rescheduling was successful.",
                    "properties": {
                        "change_status": {
                            "type": "string",
                            "description": "Train ticket rescheduling status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Query the booked train ticket information",
                "tool": "train_ticket_query",
                "input_source": "question",
                "param": {
                    "identityNumber": "1234567890ABCDE",
                    "departureDate": "2023-04-18",
                    "startStation": "Beijing",
                    "endStation": "Shanghai"
                }
            },
            {
                "step": "2.1 Search for train tickets from Beijing to Shanghai on April 20th",
                "tool": "search_train",
                "input_source": "question",
                "param": {
                    "departure_time": "2023-04-20",
                    "departure": "Beijing",
                    "destination": "Shanghai",
                    "seatType": "Soft Sleeper"
                }
            },
            {
                "step": "2.3 Perform the ticket changing operation",
                "tool": "train_ticket_changing",
                "input_source": "search_train tool",
                "param": {
                    "newTrainID": "<Train number>",
                    "identityNumber": "1234567890ABCDE",
                    "originalTicketID": "<Booked train ticket information>",
                    "newDepartureDate": "2023-04-20",
                    "newSeatType": "Soft Sleeper"
                }
            },
            {
                "step": "3.1 Obtain the changed train ticket information",
                "tool": "train_ticket_query",
                "input_source": "train_ticket_changing tool",
                "param": {
                    "identityNumber": "1234567890ABCDE",
                    "departureDate": "2023-04-20",
                    "startStation": "Beijing",
                    "endStation": "Shanghai"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to cancel the hard sleeper ticket for train number G123 from Beijing to Shanghai tomorrow, my ID number is 123456789012345678, and then book a hard seat ticket for the train number G456 from Beijing to Hangzhou the day after tomorrow.\n",
        "toolset": [
            {
                "name": "train_ticket_query",
                "input_structure": "Requires departure date, start station, end station, train number, seat type, ticket ID, and passenger's ID number. The user must provide accurate travel details to retrieve the correct booking information.",
                "description": "Train Ticket Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure Time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure Station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival Station",
                            "type": "string"
                        },
                        "confirmation_number": {
                            "description": "Booking Confirmation Number",
                            "type": "string"
                        },
                        "trainID": {
                            "description": "Train Number",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat Type",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train Ticket Number",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID Number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the ticket and detailed order information, including ticket status and order details.",
                    "properties": {
                        "ticket_status": {
                            "description": "Train Ticket Booking List",
                            "type": "string"
                        },
                        "order_details": {
                            "description": "Booking Order Details",
                            "type": "object"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_cancelling",
                "input_structure": "Requires the train ticket number and the passenger's ID number. The user must ensure the ticket ID is correct to successfully cancel the reservation.",
                "description": "Train Ticket Reservation Cancellation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "ticketID": {
                            "description": "The train ticket number to be cancelled",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "The identity card number of the person who purchased the ticket",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates whether the cancellation was successful, providing a cancellation status.",
                    "properties": {
                        "cancellation_status": {
                            "description": "Train ticket cancellation status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "search_train",
                "input_structure": "Requires departure location, destination, departure time, departure station, train number, seat preference, and seat type. The user must specify preferences to find suitable train options.",
                "description": "Search for train tickets based on preferences and return a list of train services that meet the criteria",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departure": {
                            "type": "string",
                            "description": "Departure location"
                        },
                        "destination": {
                            "type": "string",
                            "description": "Destination"
                        },
                        "departure_time": {
                            "type": "string",
                            "description": "Departure time"
                        },
                        "departure_station": {
                            "type": "string",
                            "description": "Departure station"
                        },
                        "train_number": {
                            "type": "string",
                            "description": "Train number"
                        },
                        "seatPreference": {
                            "type": "string",
                            "description": "Seat preference"
                        },
                        "seatType": {
                            "type": "string",
                            "description": "Seat type"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a list of train services that match the search criteria, including train IDs and search status.",
                    "properties": {
                        "train_id": {
                            "description": "High-speed train service ID",
                            "type": "string"
                        },
                        "search_status": {
                            "description": "Search status",
                            "type": "string"
                        },
                        "train_options": {
                            "description": "List of train services that meet the criteria",
                            "type": "array"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_booking",
                "input_structure": "Requires departure date, start station, end station, seat type, passenger's ID number, passenger's name, seat preference, and train number. The user must provide complete and accurate information to book a ticket.",
                "description": "Train ticket booking tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure date and time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival station",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat type (e.g., hard seat, soft seat, sleeper)",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID number",
                            "type": "string"
                        },
                        "name": {
                            "description": "Passenger's name",
                            "type": "string"
                        },
                        "seatPreference": {
                            "description": "Seat preference",
                            "type": "string"
                        },
                        "trainNumber": {
                            "description": "Train number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms the booking status and provides a booking ID for the train ticket.",
                    "properties": {
                        "booking_status": {
                            "description": "Train ticket booking status",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train ticket booking ID",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.3 Query train ticket order",
                "tool": "train_ticket_query",
                "input_source": "question",
                "param": {
                    "departureDate": "tomorrow",
                    "startStation": "Beijing",
                    "endStation": "Shanghai",
                    "trainID": "G123"
                }
            },
            {
                "step": "1.5 Cancel train ticket order",
                "tool": "train_ticket_cancelling",
                "input_source": "train_ticket_query tool",
                "param": {
                    "ticketID": "<order details>",
                    "identityNumber": "123456789012345678"
                }
            },
            {
                "step": "2.2 Query hard seat availability",
                "tool": "search_train",
                "input_source": "question",
                "param": {
                    "departure_time": "the day after tomorrow",
                    "departure": "Beijing",
                    "destination": "Hangzhou",
                    "seatPreference": "hard seat"
                }
            },
            {
                "step": "2.5 Book hard seat train ticket",
                "tool": "train_ticket_booking",
                "input_source": "question",
                "param": {
                    "departureDate": "the day after tomorrow",
                    "startStation": "Beijing",
                    "endStation": "Hangzhou",
                    "seatType": "hard seat",
                    "identityNumber": "123456789012345678",
                    "name": "user name",
                    "trainNumber": "G456"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please help me book a train ticket from Beijing to Shanghai, and cancel my train ticket from December 5th last year, my ID number is 1234567890.\n",
        "toolset": [
            {
                "name": "search_train",
                "input_structure": "Requires departure and destination locations, departure time, and seat preferences. The user must provide valid city names and a preferred seat type. Network access is required to query available train services.",
                "description": "Search for train tickets based on preferences and return a list of train services that meet the criteria",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departure": {
                            "type": "string",
                            "description": "Departure location"
                        },
                        "destination": {
                            "type": "string",
                            "description": "Destination"
                        },
                        "departure_time": {
                            "type": "string",
                            "description": "Departure time"
                        },
                        "departure_station": {
                            "type": "string",
                            "description": "Departure station"
                        },
                        "train_number": {
                            "type": "string",
                            "description": "Train number"
                        },
                        "seatPreference": {
                            "type": "string",
                            "description": "Seat preference"
                        },
                        "seatType": {
                            "type": "string",
                            "description": "Seat type"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a list of train services that match the search criteria, including train IDs and search status. Example: {\"train_id\": \"G1234\", \"search_status\": \"success\", \"train_options\": [\"G1234\", \"G5678\"]}.",
                    "properties": {
                        "train_id": {
                            "description": "High-speed train service ID",
                            "type": "string"
                        },
                        "search_status": {
                            "description": "Search status",
                            "type": "string"
                        },
                        "train_options": {
                            "description": "List of train services that meet the criteria",
                            "type": "array"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_booking",
                "input_structure": "Requires departure date, start and end stations, seat type, passenger's ID number, and name. The user must ensure the information is accurate and corresponds to available train services.",
                "description": "Train ticket booking tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure date and time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival station",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat type (e.g., hard seat, soft seat, sleeper)",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID number",
                            "type": "string"
                        },
                        "name": {
                            "description": "Passenger's name",
                            "type": "string"
                        },
                        "seatPreference": {
                            "description": "Seat preference",
                            "type": "string"
                        },
                        "trainNumber": {
                            "description": "Train number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms booking status and provides a ticket ID. Example: {\"booking_status\": \"success\", \"ticketID\": \"T123456\"}.",
                    "properties": {
                        "booking_status": {
                            "description": "Train ticket booking status",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train ticket booking ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "query_past_ticket",
                "input_structure": "Requires the ticket purchaser's ID number and the date of the ticket to be queried. The user must provide accurate historical data to retrieve past orders.",
                "description": "Query past train ticket orders",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "identityNumber": {
                            "type": "string",
                            "description": "Ticket purchaser's ID number"
                        },
                        "date": {
                            "type": "string",
                            "description": "Date to be queried"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the query status and ticket order number. Example: {\"query_status\": \"found\", \"ticketID\": \"T654321\"}.",
                    "properties": {
                        "query_status": {
                            "type": "string",
                            "description": "Query status"
                        },
                        "ticketID": {
                            "type": "string",
                            "description": "Train ticket order number"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_cancelling",
                "input_structure": "Requires the ticket ID and the identity card number of the person who purchased the ticket. The user must ensure the ticket ID is correct for successful cancellation.",
                "description": "Train Ticket Reservation Cancellation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "ticketID": {
                            "description": "The train ticket number to be cancelled",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "The identity card number of the person who purchased the ticket",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms cancellation status. Example: {\"cancellation_status\": \"success\"}.",
                    "properties": {
                        "cancellation_status": {
                            "description": "Train ticket cancellation status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.5 Search for train tickets",
                "tool": "search_train",
                "input_source": "question",
                "param": {
                    "departure_time": "today's date",
                    "departure": "Beijing",
                    "destination": "Shanghai",
                    "seatPreference": "hard seat"
                }
            },
            {
                "step": "1.8 Purchase train ticket",
                "tool": "train_ticket_booking",
                "input_source": "search_train tool",
                "param": {
                    "trainNumber": "<train service>",
                    "departureDate": "today's date",
                    "startStation": "Beijing",
                    "endStation": "Shanghai",
                    "seatType": "hard seat",
                    "identityNumber": "1234567890",
                    "name": "<passenger name>"
                }
            },
            {
                "step": "2.3 Retrieve historical orders",
                "tool": "query_past_ticket",
                "input_source": "question",
                "param": {
                    "identityNumber": "1234567890",
                    "date": "December 5th last year"
                }
            },
            {
                "step": "2.7 Complete the refund process",
                "tool": "train_ticket_cancelling",
                "input_source": "query_past_ticket tool",
                "param": {
                    "ticketID": "<the ticket number to be queried>",
                    "identityNumber": "1234567890"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I want to change my train ticket. The ticket number is T789412, my ID number is 44058219960403256X, I need to change to the Z106 train at 9:30 AM on April 1st, the starting and ending stations remain the same.\n",
        "toolset": [
            {
                "name": "train_ticket_query",
                "input_structure": "Requires the train ticket number and the passenger's ID number to query the current ticket status. Optionally, the departure date, start station, end station, train ID, and seat type can be provided for more specific queries.",
                "description": "Train Ticket Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure Time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure Station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival Station",
                            "type": "string"
                        },
                        "confirmation_number": {
                            "description": "Booking Confirmation Number",
                            "type": "string"
                        },
                        "trainID": {
                            "description": "Train Number",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat Type",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train Ticket Number",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID Number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the current status of the train ticket and detailed booking order information. This includes the ticket status as a string and order details as an object.",
                    "properties": {
                        "ticket_status": {
                            "description": "Train Ticket Booking List",
                            "type": "string"
                        },
                        "order_details": {
                            "description": "Booking Order Details",
                            "type": "object"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_changing",
                "input_structure": "Requires the original train ticket number and the passenger's ID number to initiate a change. Additionally, the new departure date, train ID, start station, end station, and seat type must be provided.",
                "description": "Train Ticket Rescheduling Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "originalTicketID": {
                            "type": "string",
                            "description": "The train ticket number that needs to be rescheduled"
                        },
                        "identityNumber": {
                            "type": "string",
                            "description": "The identity card number of the ticket purchaser"
                        },
                        "newDepartureDate": {
                            "type": "string",
                            "description": "The new departure date after changing"
                        },
                        "newTrainID": {
                            "type": "string",
                            "description": "The new train number after changing"
                        },
                        "newStartStation": {
                            "type": "string",
                            "description": "The new departure station after changing"
                        },
                        "newEndStation": {
                            "type": "string",
                            "description": "The new arrival station after changing"
                        },
                        "newSeatType": {
                            "type": "string",
                            "description": "The new seat type after changing"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the train ticket rescheduling operation as a string indicating success or failure.",
                    "properties": {
                        "change_status": {
                            "type": "string",
                            "description": "Train ticket rescheduling status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.3 Query train ticket information",
                "tool": "train_ticket_query",
                "input_source": "question",
                "param": {
                    "ticketID": "T789412",
                    "identityNumber": "44058219960403256X"
                }
            },
            {
                "step": "2.3 Query available change options for the target train",
                "tool": "train_ticket_query",
                "input_source": "question",
                "param": {
                    "departureDate": "April 1s",
                    "trainID": "Z106"
                }
            },
            {
                "step": "3.2 Submit change request",
                "tool": "train_ticket_changing",
                "input_source": "question",
                "param": {
                    "originalTicketID": "T789412",
                    "identityNumber": "44058219960403256X",
                    "newDepartureDate": "April 1s",
                    "newTrainID": "Z106"
                }
            },
            {
                "step": "4.1 Obtain the new ticket information after the change",
                "tool": "train_ticket_query",
                "input_source": "train_ticket_changing tool",
                "param": {
                    "ticketID": "T789412",
                    "identityNumber": "44058219960403256X"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I have an emergency and need to go to Beijing tomorrow, but I have just booked a train ticket to Chengdu. The booking number of the train ticket is T12345, and my ID number is 110101198001011234. I need to change the ticket to Beijing and choose a sleeper ticket.\n",
        "toolset": [
            {
                "name": "train_ticket_query",
                "input_structure": "Requires the train ticket number and the passenger's ID number to query the current status of the train ticket. The user must provide valid identification and booking details.",
                "description": "Train Ticket Booking Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure Time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure Station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival Station",
                            "type": "string"
                        },
                        "confirmation_number": {
                            "description": "Booking Confirmation Number",
                            "type": "string"
                        },
                        "trainID": {
                            "description": "Train Number",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat Type",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train Ticket Number",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID Number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the current status of the train ticket and detailed booking order information.",
                    "properties": {
                        "ticket_status": {
                            "description": "Train Ticket Booking List",
                            "type": "string"
                        },
                        "order_details": {
                            "description": "Booking Order Details",
                            "type": "object"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_cancelling",
                "input_structure": "Requires the train ticket number and the passenger's ID number to cancel the reservation. The user must ensure the ticket is eligible for cancellation.",
                "description": "Train Ticket Reservation Cancellation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "ticketID": {
                            "description": "The train ticket number to be cancelled",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "The identity card number of the person who purchased the ticket",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates whether the cancellation was successful and provides the cancellation status.",
                    "properties": {
                        "cancellation_status": {
                            "description": "Train ticket cancellation status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "search_train",
                "input_structure": "Requires departure location, destination, departure time, and seat preference to search for available train services. The user must specify valid travel criteria.",
                "description": "Search for train tickets based on preferences and return a list of train services that meet the criteria",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departure": {
                            "type": "string",
                            "description": "Departure location"
                        },
                        "destination": {
                            "type": "string",
                            "description": "Destination"
                        },
                        "departure_time": {
                            "type": "string",
                            "description": "Departure time"
                        },
                        "departure_station": {
                            "type": "string",
                            "description": "Departure station"
                        },
                        "train_number": {
                            "type": "string",
                            "description": "Train number"
                        },
                        "seatPreference": {
                            "type": "string",
                            "description": "Seat preference"
                        },
                        "seatType": {
                            "type": "string",
                            "description": "Seat type"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a list of train services that match the search criteria, including train IDs and search status.",
                    "properties": {
                        "train_id": {
                            "description": "High-speed train service ID",
                            "type": "string"
                        },
                        "search_status": {
                            "description": "Search status",
                            "type": "string"
                        },
                        "train_options": {
                            "description": "List of train services that meet the criteria",
                            "type": "array"
                        }
                    }
                }
            },
            {
                "name": "train_ticket_booking",
                "input_structure": "Requires train number, departure date, start and end stations, seat type, and passenger's ID number to book a ticket. The user must provide accurate travel and personal information.",
                "description": "Train ticket booking tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure date and time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival station",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat type (e.g., hard seat, soft seat, sleeper)",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID number",
                            "type": "string"
                        },
                        "name": {
                            "description": "Passenger's name",
                            "type": "string"
                        },
                        "seatPreference": {
                            "description": "Seat preference",
                            "type": "string"
                        },
                        "trainNumber": {
                            "description": "Train number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms the booking status and provides the new train ticket booking ID.",
                    "properties": {
                        "booking_status": {
                            "description": "Train ticket booking status",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train ticket booking ID",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.3 Check the current status of the train ticket",
                "tool": "train_ticket_query",
                "input_source": "question",
                "param": {
                    "ticketID": "T12345",
                    "identityNumber": "110101198001011234"
                }
            },
            {
                "step": "2.1 Use the train ticket cancellation tool",
                "tool": "train_ticket_cancelling",
                "input_source": "train_ticket_query tool",
                "param": {
                    "ticketID": "T12345",
                    "identityNumber": "110101198001011234"
                }
            },
            {
                "step": "3.3 Search for sleeper train tickets to Beijing for tomorrow",
                "tool": "search_train",
                "input_source": "question",
                "param": {
                    "departure_time": "Tomorrow's Date",
                    "departure": "User's Current City",
                    "destination": "Beijing",
                    "seatPreference": "Sleeper"
                }
            },
            {
                "step": "3.6 Book the train ticket",
                "tool": "train_ticket_booking",
                "input_source": "search_train tool",
                "param": {
                    "trainNumber": "<Train Schedule>",
                    "departureDate": "Tomorrow's Date",
                    "startStation": "User's Current City",
                    "endStation": "Beijing",
                    "seatType": "Sleeper",
                    "identityNumber": "110101198001011234",
                    "name": "User's Name"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please arrange for a vehicle pick-up service at 2 PM today from the company entrance to the R&D center, and handle the necessary external reception approval procedures so that Manager Li from Top Electronic Technology Co., Ltd. can successfully visit our R&D department's Director Zhang.",
        "toolset": [
            {
                "name": "company_vehicle_service",
                "input_structure": "Requires the reservation time, departure location, and destination. The user must provide a valid date-time format for the reservation time and specify known locations within the company.",
                "description": "Company Vehicle Service Reservation Lookup Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "queryTime": {
                            "description": "Reservation Time",
                            "type": "string",
                            "format": "date-time"
                        },
                        "departure": {
                            "description": "Departure Location",
                            "type": "string"
                        },
                        "destination": {
                            "description": "Destination",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides vehicle details including vehicle type, driver information, and estimated arrival time.",
                    "properties": {
                        "vehicle_details": {
                            "description": "Vehicle Details",
                            "type": "object"
                        }
                    }
                }
            },
            {
                "name": "outward_reception_approval",
                "input_structure": "Requires appointment time, visitor's name, visitor's company, visited person's name, and department. All fields must be filled with accurate information to ensure approval.",
                "description": "External Reception Approval Process Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "appointment_time": {
                            "description": "Appointment Time",
                            "type": "string",
                            "format": "date-time"
                        },
                        "visitors": {
                            "description": "Visitors",
                            "type": "string"
                        },
                        "visitor_unit": {
                            "description": "Visitor's Unit",
                            "type": "string"
                        },
                        "visited_person": {
                            "description": "Visited Person",
                            "type": "string"
                        },
                        "visited_department": {
                            "description": "Visited Department",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the approval status indicating whether the reception has been approved or is pending.",
                    "properties": {
                        "approval_status": {
                            "description": "Approval Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "send_notifications",
                "input_structure": "Requires recipient details, message content, and notification type. The user must ensure that the recipient's contact information is correct.",
                "description": "Send notifications to users",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "description": "Notification content"
                        },
                        "event": {
                            "type": "string",
                            "description": "Event name"
                        },
                        "time": {
                            "type": "string",
                            "description": "Time"
                        },
                        "phone": {
                            "type": "string",
                            "description": "Phone number"
                        },
                        "participants": {
                            "type": "array",
                            "description": "List of participant emails",
                            "items": {
                                "type": "string",
                                "format": "email"
                            }
                        },
                        "notification_type": {
                            "type": "string",
                            "description": "Type of notification"
                        },
                        "meeting_id": {
                            "type": "string",
                            "description": "Meeting ID to notify"
                        },
                        "schedule_id": {
                            "type": "string",
                            "description": "Schedule ID of the meeting"
                        },
                        "agenda_id": {
                            "type": "string",
                            "description": "Agenda ID of the meeting"
                        },
                        "start_time": {
                            "type": "string",
                            "description": "Meeting start time"
                        },
                        "end_time": {
                            "type": "string",
                            "description": "Meeting end time"
                        },
                        "gate_info": {
                            "type": "string",
                            "description": "Boarding gate information"
                        },
                        "seatNumber": {
                            "type": "string",
                            "description": "Seat number"
                        },
                        "location": {
                            "type": "string",
                            "description": "Location"
                        },
                        "meeting_topic": {
                            "type": "string",
                            "description": "Meeting topic"
                        },
                        "contact": {
                            "type": "string",
                            "description": "Contact information"
                        },
                        "transactionID": {
                            "type": "string",
                            "description": "Transaction ID"
                        },
                        "activities": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Activity name"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Activity date and time"
                                    }
                                }
                            },
                            "description": "List of activities"
                        },
                        "student_count": {
                            "type": "integer",
                            "description": "Number of students to notify",
                            "minimum": 1
                        },
                        "notification_method": {
                            "type": "string",
                            "description": "Method of sending notifications"
                        },
                        "recipients": {
                            "type": "array",
                            "description": "List of notification recipients",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates the status of the notification, confirming whether it was successfully sent or if there were any issues.",
                    "properties": {
                        "notification_status": {
                            "type": "string",
                            "description": "Notification sending status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Query vehicle service",
                "tool": "company_vehicle_service",
                "input_source": "question",
                "param": {
                    "queryTime": "today at 2 PM",
                    "departure": "company entrance",
                    "destination": "R&D center"
                }
            },
            {
                "step": "2.3 Submit external reception approval",
                "tool": "outward_reception_approval",
                "input_source": "question",
                "param": {
                    "appointment_time": "today at 2 PM",
                    "visitors": "Manager Li",
                    "visitor_unit": "Top Electronic Technology Co",
                    "visited_person": "Director Zhang",
                    "visited_department": "R&D department"
                }
            },
            {
                "step": "3.1 Notify Manager Li to confirm pick-up time and location",
                "tool": "send_notifications",
                "input_source": "question",
                "param": {
                    "recipients": "['Manager Li']",
                    "message": "Confirm pick-up time and location"
                }
            },
            {
                "step": "3.2 Notify Director Zhang to confirm visitor's arrival time and approval status",
                "tool": "send_notifications",
                "input_source": "question",
                "param": {
                    "recipients": "['Director Zhang']",
                    "message": "Confirm visitor's arrival time and approval status"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to know the ticket price for the Great Wall trip on the morning of July 15th, confirm whether a reservation is needed, and where to purchase on which platform, as well as obtain the link to the official ticket purchasing process guide of that platform.",
        "toolset": [
            {
                "name": "scenic_spot_ticket_search",
                "input_structure": "Requires the name of the scenic spot and the intended visit date. The tool accesses a database of ticket information for various attractions and returns the ticket price and reservation requirements.",
                "description": "Scenic Spot Ticket Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "scenicSpotName": {
                            "description": "Scenic Spot Name",
                            "type": "string"
                        },
                        "visitDate": {
                            "description": "Visit Date",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object containing the ticket price as a number and reservation information as a boolean indicating if a reservation is needed.",
                    "properties": {
                        "ticket_price": {
                            "description": "Ticket Price",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "official_ticket_platform_search",
                "input_structure": "Requires the name of the scenic spot to search for the official ticketing platform. The tool provides the platform name and a link to the ticket purchasing process guide.",
                "description": "Search for official ticketing platform and ticket purchase process guide link",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "scenicSpotName": {
                            "type": "string",
                            "description": "Scenic spot name"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns an object containing the official ticketing platform name as a string and the guide link as a URL string.",
                    "properties": {
                        "platform_name": {
                            "type": "string",
                            "description": "Official ticketing platform name"
                        },
                        "guide_link": {
                            "type": "string",
                            "description": "Ticket purchase process guide link"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Check the ticket price",
                "tool": "scenic_spot_ticket_search",
                "input_source": "question",
                "param": {
                    "scenicSpotName": "Great Wall",
                    "visitDate": "2023-07-15 AM"
                }
            },
            {
                "step": "1.4 Confirm whether a reservation is needed",
                "tool": "scenic_spot_ticket_search",
                "input_source": "scenic_spot_ticket_search tool",
                "param": {
                    "scenicSpotName": "Great Wall"
                }
            },
            {
                "step": "2.1 Determine the official ticket platform",
                "tool": "official_ticket_platform_search",
                "input_source": "question",
                "param": {
                    "scenicSpotName": "Great Wall"
                }
            },
            {
                "step": "2.2.1 Search for the official ticket purchasing process guide",
                "tool": "official_ticket_platform_search",
                "input_source": "official_ticket_platform_search tool",
                "param": {
                    "scenicSpotName": "Great Wall"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please find and recommend information on the price and user experience of Sichuan hydrangea within a budget of 200 yuan for me, then customize a personalized hydrangea souvenir with my name and the date of my trip to Chengdu on June 10th, using the Chengdu travel photos I provided, and purchase and send it from Chengdu Airport on the day I leave Chengdu on June 11th.",
        "toolset": [
            {
                "name": "souvenir_recommender",
                "input_structure": "Requires destination, theme, and budget as inputs. The destination should be a valid travel location, the theme should relate to the type of souvenir desired, and the budget should be a numerical value representing the maximum amount willing to be spent.",
                "description": "Travel Souvenir Recommendation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "destination": {
                            "description": "Travel Destination",
                            "type": "string"
                        },
                        "theme": {
                            "description": "Travel Theme, such as history, culture, cuisine, etc.",
                            "type": "string"
                        },
                        "budget": {
                            "description": "Budget for Souvenir Purchases",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a recommended souvenir name and its price based on the input criteria.",
                    "properties": {
                        "souvenir": {
                            "description": "Recommended Souvenir Name",
                            "type": "string"
                        },
                        "price": {
                            "description": "Souvenir Price",
                            "type": "integer"
                        }
                    }
                }
            },
            {
                "name": "tourist_souvenir_creator",
                "input_structure": "Requires destination, date of visit, and a photo. The destination should be a valid travel location, the date of visit should be in a valid date format, and the photo should be a valid image file.",
                "description": "Tourist Souvenir Creation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "destination": {
                            "description": "Travel Destination",
                            "type": "string"
                        },
                        "date_of_visit": {
                            "description": "Date of Visit",
                            "type": "string"
                        },
                        "photo": {
                            "description": "Travel Photo",
                            "type": "string",
                            "contentMediaType": "image/*"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Generates a personalized travel souvenir based on the provided inputs.",
                    "properties": {
                        "souvenir": {
                            "description": "Generated Travel Souvenir",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "souvenir_purchase",
                "input_structure": "Requires souvenir name, purchase quantity, date, and location. The souvenir name should match an available item, the quantity should be a positive integer, the date should be in a valid format, and the location should be a valid place of purchase.",
                "description": "Tourist Souvenir Purchase Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "souvenir": {
                            "description": "Souvenir Name",
                            "type": "string"
                        },
                        "number": {
                            "description": "Purchase Quantity",
                            "type": "integer"
                        },
                        "date": {
                            "description": "Purchase Date",
                            "type": "string"
                        },
                        "location": {
                            "description": "Purchase Location",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Calculates the total cost of the purchase based on the quantity and price of the souvenir.",
                    "properties": {
                        "total_cost": {
                            "description": "Total Purchase Cost",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "schedule_delivery",
                "input_structure": "Requires souvenir name, delivery date, and recipient address. The souvenir name should match the item to be delivered, the delivery date should be in a valid format, and the recipient address should be a valid postal address.",
                "description": "Arrange courier delivery service for a specific date",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "souvenir": {
                            "type": "string",
                            "description": "Name of the souvenir to be delivered"
                        },
                        "delivery_date": {
                            "type": "string",
                            "description": "Delivery date"
                        },
                        "recipient_address": {
                            "type": "string",
                            "description": "Recipient's address"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms the reservation status of the delivery service.",
                    "properties": {
                        "delivery_status": {
                            "type": "string",
                            "description": "Delivery service reservation status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Search online for price and user experience information",
                "tool": "souvenir_recommender",
                "input_source": "question",
                "param": {
                    "destination": "Sichuan",
                    "theme": "hydrangea",
                    "budget": "200"
                }
            },
            {
                "step": "2.2 Submit customization request",
                "tool": "tourist_souvenir_creator",
                "input_source": "question",
                "param": {
                    "destination": "Chengdu",
                    "date_of_visit": "2023-06-10",
                    "photo": "Chengdu travel photo provided by the user"
                }
            },
            {
                "step": "3.3 Purchase hydrangea souvenir",
                "tool": "souvenir_purchase",
                "input_source": "tourist_souvenir_creator tool",
                "param": {
                    "souvenir": "<Generated travel souvenir>",
                    "number": "1",
                    "date": "2023-06-11",
                    "location": "Chengdu Airport"
                }
            },
            {
                "step": "3.5 Arrange delivery service",
                "tool": "schedule_delivery",
                "input_source": "souvenir_purchase tool",
                "param": {
                    "souvenir": "<Generated travel souvenir>",
                    "delivery_date": "2023-06-11",
                    "recipient_address": "Address provided by the user"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "As Li Ming from the Human Resources Department, I need to book a company car on Monday, August 28, 2023, at 9:00 AM to go from the company to the Convention Center to receive three clients from Brilliant Technology Company, and apply for external reception approval. Meanwhile, arrange internal procurement with a budget of 2000 RMB to purchase 50 sets of customized notebooks and pens as souvenirs, with the expenses accounted for in the public relations costs, and the approver is Director Zhang from our department.",
        "toolset": [
            {
                "name": "company_vehicle_service",
                "input_structure": "Requires reservation details including the date and time of the reservation, departure location, and destination. The user must have access to the company's vehicle reservation system.",
                "description": "Company Vehicle Service Reservation Lookup Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "queryTime": {
                            "description": "Reservation Time",
                            "type": "string",
                            "format": "date-time"
                        },
                        "departure": {
                            "description": "Departure Location",
                            "type": "string"
                        },
                        "destination": {
                            "description": "Destination",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing details of the reserved vehicle, including vehicle type, license plate, and driver information.",
                    "properties": {
                        "vehicle_details": {
                            "description": "Vehicle Details",
                            "type": "object"
                        }
                    }
                }
            },
            {
                "name": "outward_reception_approval",
                "input_structure": "Requires details of the reception including appointment time, visitor information, and the department being visited. The user must have access to the external reception approval system.",
                "description": "External Reception Approval Process Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "appointment_time": {
                            "description": "Appointment Time",
                            "type": "string",
                            "format": "date-time"
                        },
                        "visitors": {
                            "description": "Visitors",
                            "type": "string"
                        },
                        "visitor_unit": {
                            "description": "Visitor's Unit",
                            "type": "string"
                        },
                        "visited_person": {
                            "description": "Visited Person",
                            "type": "string"
                        },
                        "visited_department": {
                            "description": "Visited Department",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the approval status of the reception request, including any comments or conditions.",
                    "properties": {
                        "approval_status": {
                            "description": "Approval Status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "internal_purchase",
                "input_structure": "Requires procurement details including employee information, expense amount, purchased items, and approver details. The user must have access to the internal procurement system.",
                "description": "Internal procurement of materials and tools",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "employeeNameOrId": {
                            "description": "Employee name or ID",
                            "type": "string"
                        },
                        "occurrenceTime": {
                            "description": "Occurrence time",
                            "type": "string",
                            "format": "date-time"
                        },
                        "expense": {
                            "description": "Expense",
                            "type": "number"
                        },
                        "currency": {
                            "description": "Currency",
                            "type": "string"
                        },
                        "purchasedItem": {
                            "description": "Purchased item",
                            "type": "string"
                        },
                        "settlementItem": {
                            "description": "Settlement item",
                            "type": "string"
                        },
                        "details": {
                            "description": "Detailed information",
                            "type": "object"
                        },
                        "approver": {
                            "description": "Approver",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the status of the purchase request, including approval status and any comments.",
                    "properties": {
                        "purchase_status": {
                            "description": "Purchase status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "purchase_product",
                "input_structure": "Requires the name of the product to be purchased. The user must have access to the purchasing system and supplier information.",
                "description": "Purchase specific product",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "product_name": {
                            "type": "string",
                            "description": "Name of the product to purchase"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating whether the purchase operation was successful, including order details and confirmation.",
                    "properties": {
                        "purchase_status": {
                            "description": "Whether the purchase operation was successful",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Submit vehicle reservation request",
                "tool": "company_vehicle_service",
                "input_source": "question",
                "param": {
                    "queryTime": "2023-08-28T09:00:00",
                    "departure": "Company",
                    "destination": "Convention Center"
                }
            },
            {
                "step": "2.2 Submit external reception approval request",
                "tool": "outward_reception_approval",
                "input_source": "question",
                "param": {
                    "appointment_time": "2023-08-28T09:00:00",
                    "visitors": "Three clients",
                    "visitor_unit": "Brilliant Technology Company",
                    "visited_person": "Li Ming",
                    "visited_department": "Human Resources Department"
                }
            },
            {
                "step": "3.2 Submit internal procurement request",
                "tool": "internal_purchase",
                "input_source": "question",
                "param": {
                    "employeeNameOrId": "Li Ming",
                    "occurrenceTime": "2023-08-28T09:00:00",
                    "expense": "2000",
                    "currency": "RMB",
                    "purchasedItem": "50 sets of customized notebooks and pens",
                    "settlementItem": "Public relations costs",
                    "approver": "Director Zhang"
                }
            },
            {
                "step": "5.2 Place order for customized notebooks and pens",
                "tool": "purchase_product",
                "input_source": "internal_purchase tool",
                "param": {
                    "product_name": "notebook"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "As a senior engineer in the technical department, I need to book a second-class seat train ticket for train G102 departing at 09:00 AM tomorrow from Shanghai to Beijing, and reserve a room at the Hilton Hotel in Haidian District from December 4th to 6th, ensuring that the hotel accommodation cost does not exceed 500 yuan per night, and includes a daily meal allowance of 150 yuan and a transportation allowance of 300 yuan.",
        "toolset": [
            {
                "name": "train_ticket_booking",
                "input_structure": "Requires passenger's name and ID number, train number, departure date and time, start and end stations, and seat type. The user must provide valid identification and confirm the booking details.",
                "description": "Train ticket booking tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "departureDate": {
                            "description": "Departure date and time",
                            "type": "string"
                        },
                        "startStation": {
                            "description": "Departure station",
                            "type": "string"
                        },
                        "endStation": {
                            "description": "Arrival station",
                            "type": "string"
                        },
                        "seatType": {
                            "description": "Seat type (e.g., hard seat, soft seat, sleeper)",
                            "type": "string"
                        },
                        "identityNumber": {
                            "description": "Passenger's ID number",
                            "type": "string"
                        },
                        "name": {
                            "description": "Passenger's name",
                            "type": "string"
                        },
                        "seatPreference": {
                            "description": "Seat preference",
                            "type": "string"
                        },
                        "trainNumber": {
                            "description": "Train number",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A booking confirmation object containing the booking status and ticket ID.",
                    "properties": {
                        "booking_status": {
                            "description": "Train ticket booking status",
                            "type": "string"
                        },
                        "ticketID": {
                            "description": "Train ticket booking ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "business_travel_standard_search",
                "input_structure": "Requires department or level and destination city to determine applicable travel standards. The user must specify the correct department and city for accurate results.",
                "description": "Business Travel Standard Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "department_or_level": {
                            "description": "Department or Level",
                            "type": "string"
                        },
                        "destination_city": {
                            "description": "Destination City",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the accommodation, meal, and transportation standards for the specified department and city.",
                    "properties": {
                        "accommodation_standard": {
                            "description": "Accommodation Standard",
                            "type": "number"
                        },
                        "meal_subsidy_standard": {
                            "description": "Meal Subsidy Standard",
                            "type": "number"
                        },
                        "transportation_standard": {
                            "description": "Transportation Standard",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "submit_subsidy_application",
                "input_structure": "Requires meal and transportation subsidy amounts and the number of travel days. The user must ensure the values comply with company policy.",
                "description": "Submit travel subsidy application",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "meal_subsidy": {
                            "type": "number",
                            "description": "Standard for daily meal allowance"
                        },
                        "transportation_subsidy": {
                            "type": "number",
                            "description": "Standard for daily transportation allowance"
                        },
                        "days": {
                            "type": "number",
                            "description": "Number of business travel days"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation object indicating the status of the subsidy application submission.",
                    "properties": {
                        "application_status": {
                            "type": "string",
                            "description": "Subsidy application submission status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.3 Purchase train ticket",
                "tool": "train_ticket_booking",
                "input_source": "question",
                "param": {
                    "name": "User Name",
                    "identityNumber": "User ID Number",
                    "departureDate": "Tomorrow morning 09:00",
                    "startStation": "Shanghai",
                    "endStation": "Beijing",
                    "seatType": "Second Class Seat"
                }
            },
            {
                "step": "3.2 Check travel subsidy standards",
                "tool": "business_travel_standard_search",
                "input_source": "question",
                "param": {
                    "department_or_level": "Senior Engineer of Technical Department",
                    "destination_city": "Beijing"
                }
            },
            {
                "step": "3.4 Calculate total subsidy cost",
                "tool": "submit_subsidy_application",
                "input_source": "business_travel_standard_search tool",
                "param": {
                    "meal_subsidy": "150",
                    "transportation_subsidy": "300",
                    "days": "3"
                }
            },
            {
                "step": "3.5 Submit subsidy application",
                "tool": "submit_subsidy_application",
                "input_source": "submit_subsidy_application tool",
                "param": {
                    "meal_subsidy": "150",
                    "transportation_subsidy": "300",
                    "days": "3"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please plan a free-and-easy trip to Zhangjiajie for me from February 15, 2023, to February 20, 2023, including a budget within 5000 yuan for natural scenery and historical sites tour plan, and inquire about the round-trip route from Shanghai to Zhangjiajie, as well as local accommodation and food recommendations.",
        "toolset": [
            {
                "name": "travel_route_search",
                "input_structure": "Requires destination, departure date, and return date. The destination must be a valid location name. Dates should be in the format YYYY-MM-DD HH:MM. The user must provide these details to query available travel routes.",
                "description": "Independent Travel Route Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "destination": {
                            "description": "Destination",
                            "type": "string"
                        },
                        "departureDate": {
                            "description": "Departure Date",
                            "type": "string",
                            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$"
                        },
                        "returnDate": {
                            "description": "Return Date",
                            "type": "string",
                            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a string detailing the available travel routes, including transportation modes and schedules.",
                    "properties": {
                        "travel_route": {
                            "description": "Travel Route",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "travel_info_search",
                "input_structure": "Requires destination, start date, and end date. The destination must be a valid location name. Dates should be in the format YYYY-MM-DDTHH:MM:SSZ. The user must provide these details to query available travel information.",
                "description": "Independent Travel Information Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "destination": {
                            "description": "Destination",
                            "type": "string"
                        },
                        "startDate": {
                            "description": "Departure Date",
                            "type": "string",
                            "format": "date-time"
                        },
                        "endDate": {
                            "description": "Return Date",
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides strings detailing hotel information, scenic spots, gourmet options, and local customs.",
                    "properties": {
                        "hotel_info": {
                            "description": "Hotel Information",
                            "type": "string"
                        },
                        "scenic_spot_info": {
                            "description": "Scenic Spot Information",
                            "type": "string"
                        },
                        "food_info": {
                            "description": "Gourmet Information",
                            "type": "string"
                        },
                        "local_customs_info": {
                            "description": "Local Customs Information",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Inquire about round-trip transportation methods",
                "tool": "travel_route_search",
                "input_source": "question",
                "param": {
                    "destination": "Zhangjiajie",
                    "departureDate": "2023-02-15",
                    "returnDate": "2023-02-20"
                }
            },
            {
                "step": "3.1 Search for Zhangjiajie accommodation options",
                "tool": "travel_info_search",
                "input_source": "question",
                "param": {
                    "destination": "Zhangjiajie",
                    "startDate": "2023-02-15",
                    "endDate": "2023-02-20"
                }
            },
            {
                "step": "4.1 Research Zhangjiajie natural scenery and historical sites",
                "tool": "travel_info_search",
                "input_source": "question",
                "param": {
                    "destination": "Zhangjiajie",
                    "startDate": "2023-02-15",
                    "endDate": "2023-02-20"
                }
            },
            {
                "step": "5.1 Collect information on Zhangjiajie local cuisine",
                "tool": "travel_info_search",
                "input_source": "question",
                "param": {
                    "destination": "Zhangjiajie",
                    "startDate": "2023-02-15",
                    "endDate": "2023-02-20"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "To ensure a smooth photography trip to the Sahara Desert in Morocco for a week, please plan a travel backpack for me that does not exceed 10 kilograms, including outdoor photography essentials suitable for a dry climate, such as UV protection sun hat, long-sleeve breathable clothes, sunglasses, quick-dry pants, sunblock, photography equipment, power bank, and water bag, and ensure that the total weight of these items meets the requirements for outdoor photography travel.",
        "toolset": [
            {
                "name": "travel_backpack_generator",
                "input_structure": "Requires the duration of the trip in days, the climate type of the destination, and the types of activities planned. The user should provide these details to generate a suitable backpack list.",
                "description": "Travel Backpack Generator Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "duration": {
                            "description": "Travel duration in days",
                            "type": "integer"
                        },
                        "destination": {
                            "description": "Climate type of the travel destination, options include \"cold\", \"warm\", \"humid\", \"dry\"",
                            "type": "string"
                        },
                        "activities": {
                            "description": "Types of travel activities, options include \"photography\", \"hiking\", \"skiing\", \"diving\"",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An array listing the contents of the travel backpack, including required clothing, equipment, and essentials tailored to the specified trip parameters.",
                    "properties": {
                        "backpack_contents": {
                            "description": "Contents of the travel backpack, including required clothing, equipment, essentials, etc.",
                            "type": "array"
                        }
                    }
                }
            },
            {
                "name": "travel_backpack_checker",
                "input_structure": "Requires a list of items to be checked, the weight limit of the backpack, and the type of trip. The user must ensure the items list is accurate and complete.",
                "description": "Travel Backpack Checker Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "items": {
                            "description": "List of items in the backpack",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "weight_limit": {
                            "description": "Backpack weight limit",
                            "type": "integer"
                        },
                        "trip_type": {
                            "description": "Type of trip",
                            "type": "string",
                            "enum": [
                                "hiking",
                                "business",
                                "leisure"
                            ]
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A boolean indicating whether the backpack's total weight is within the specified limit and suitable for the trip type.",
                    "properties": {
                        "suitable": {
                            "description": "Whether the backpack meets the travel requirements",
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "name": "purchase_missing_items",
                "input_structure": "Requires a list of items that need to be purchased. The user should verify the list of missing essentials before proceeding.",
                "description": "Purchase missing travel essentials",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "items": {
                            "type": "array",
                            "description": "List of items to be purchased",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An array detailing the purchase status of each item, indicating success or failure.",
                    "properties": {
                        "purchase_status": {
                            "type": "array",
                            "description": "Purchase status of each item",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "item": {
                                        "type": "string",
                                        "description": "Item name"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "description": "Whether the purchase was successful"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            {
                "name": "travel_backpack_inventory",
                "input_structure": "Requires the backpack's capacity in liters, a list of items with their volumes and quantities, and the trip length in days. The user should ensure all item details are accurate.",
                "description": "Travel Backpack Management Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "backpackCapacity": {
                            "description": "The capacity of the backpack, in liters",
                            "type": "integer"
                        },
                        "items": {
                            "description": "Items to be placed in the backpack, represented as an array",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "item": {
                                        "description": "Item name",
                                        "type": "string"
                                    },
                                    "volume": {
                                        "description": "Volume occupied by the item, in liters",
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "description": "Quantity of the item",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "item",
                                    "volume",
                                    "quantity"
                                ]
                            }
                        },
                        "tripLength": {
                            "description": "The length of the trip, in days",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An array of items that can be packed into the backpack and the remaining volume available.",
                    "properties": {
                        "packableItems": {
                            "description": "List of items that can be packed into the backpack",
                            "type": "array"
                        },
                        "remainingVolume": {
                            "description": "Remaining volume of the backpack",
                            "type": "integer"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Use the travel backpack generator tool",
                "tool": "travel_backpack_generator",
                "input_source": "question",
                "param": {
                    "duration": "7",
                    "destination": "Dry",
                    "activities": "Photography"
                }
            },
            {
                "step": "2.2 Use the travel backpack checker tool",
                "tool": "travel_backpack_checker",
                "input_source": "travel_backpack_generator tool",
                "param": {
                    "items": "Essentials list",
                    "weight_limit": "10",
                    "trip_type": "leisure"
                }
            },
            {
                "step": "3.2 Purchase the missing essentials",
                "tool": "purchase_missing_items",
                "input_source": "travel_backpack_checker tool",
                "param": {
                    "items": "Missing essentials list"
                }
            },
            {
                "step": "4.1 Use the travel backpack management tool",
                "tool": "travel_backpack_inventory",
                "input_source": "travel_backpack_checker tool",
                "param": {
                    "backpackCapacity": "10",
                    "items": "Essentials list",
                    "tripLength": "7"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please book a mid-size sedan with the ID A001 for me from 9 AM on December 20th to 5 PM on December 22nd, picking up the car in Shanghai and returning it in Nanjing. Then, check the car rental reservation status for this period, and change the return date to 10 AM on December 23rd. Finally, cancel this car rental reservation.",
        "toolset": [
            {
                "name": "car_rental_booking",
                "input_structure": "Requires car type, rental period, pickup and drop-off locations, start and end dates, car ID, customer contact information, and driver's license details. User confirmation is needed for booking.",
                "description": "Car Rental Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "carType": {
                            "description": "Vehicle Type",
                            "type": "string"
                        },
                        "rentalPeriod": {
                            "description": "Rental Period",
                            "type": "integer"
                        },
                        "pickupDate": {
                            "description": "Pick-up Date",
                            "type": "string"
                        },
                        "location": {
                            "description": "Pick-up Location",
                            "type": "string"
                        },
                        "startDate": {
                            "description": "Start Date of Car Rental (Date + Time)",
                            "type": "string"
                        },
                        "endDate": {
                            "description": "End Date of Car Rental (Date + Time)",
                            "type": "string"
                        },
                        "carID": {
                            "description": "Car ID",
                            "type": "string"
                        },
                        "city": {
                            "description": "Pick-up City",
                            "type": "string"
                        },
                        "dropOffCity": {
                            "description": "Drop-off City",
                            "type": "string"
                        },
                        "contactInfo": {
                            "description": "Customer Contact Information",
                            "type": "string"
                        },
                        "customerName": {
                            "description": "Customer Name",
                            "type": "string"
                        },
                        "contact": {
                            "description": "Customer Contact Method",
                            "type": "string"
                        },
                        "driverLicense": {
                            "description": "Customer Driver's License Information",
                            "type": "string"
                        },
                        "carModel": {
                            "description": "Car Model",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A booking confirmation with total cost, booking status, rental contract, and pickup information.",
                    "properties": {
                        "totalCost": {
                            "description": "Total Rental Cost",
                            "type": "number"
                        },
                        "booking_status": {
                            "description": "Car Rental Booking Status",
                            "type": "string"
                        },
                        "price": {
                            "description": "Car Rental Price",
                            "type": "string"
                        },
                        "confirmation_status": {
                            "description": "Booking Confirmation Status",
                            "type": "string"
                        },
                        "contract": {
                            "description": "Rental Contract Information",
                            "type": "string"
                        },
                        "pickup_info": {
                            "description": "Vehicle Pickup Information",
                            "type": "string"
                        },
                        "rental_company": {
                            "description": "Car Rental Company Name",
                            "type": "string"
                        },
                        "car_model": {
                            "description": "Vehicle Model",
                            "type": "string"
                        },
                        "confirmation_info": {
                            "description": "Booking Confirmation Information",
                            "type": "string"
                        },
                        "rental_confirmation": {
                            "description": "Rental Confirmation",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "car_rental_query",
                "input_structure": "Requires start and end dates, car ID, and city for querying existing reservations.",
                "description": "Car Rental Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startDate": {
                            "description": "Car rental start date (date+time)",
                            "type": "string"
                        },
                        "endDate": {
                            "description": "Car rental end date (date+time)",
                            "type": "string"
                        },
                        "carID": {
                            "description": "Car ID",
                            "type": "string"
                        },
                        "city": {
                            "description": "City of car pickup",
                            "type": "string"
                        },
                        "rental_location": {
                            "description": "Car rental location",
                            "type": "string"
                        },
                        "return_location": {
                            "description": "Car return location",
                            "type": "string"
                        },
                        "car_type": {
                            "description": "Car type",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A list of reservations matching the criteria, including available cars and rental companies.",
                    "properties": {
                        "car_rental_status": {
                            "description": "List of car rental reservations that meet the search criteria",
                            "type": "string"
                        },
                        "available_cars": {
                            "description": "List of available cars",
                            "type": "array"
                        },
                        "rental_companies": {
                            "description": "List of rental companies",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "car_rental_changing",
                "input_structure": "Requires original and new rental dates, car ID, and city for modifying an existing reservation.",
                "description": "Car Rental Reservation Modification Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "originalStartDate": {
                            "description": "The original car rental start date (date + time) that needs to be changed",
                            "type": "string"
                        },
                        "originalEndDate": {
                            "description": "The original car rental end date (date + time) that needs to be changed",
                            "type": "string"
                        },
                        "originalCarID": {
                            "description": "The car ID that needs to be changed",
                            "type": "string"
                        },
                        "originalCity": {
                            "description": "The city where the car was originally picked up that needs to be changed",
                            "type": "string"
                        },
                        "newStartDate": {
                            "description": "The new car rental start date (date + time) after change. If not provided, the original start date remains unchanged.",
                            "type": "string"
                        },
                        "newEndDate": {
                            "description": "The new car rental end date (date + time) after change. If not provided, the original end date remains unchanged.",
                            "type": "string"
                        },
                        "newCarID": {
                            "description": "The new car ID after change. If not provided, the original car ID remains unchanged.",
                            "type": "string"
                        },
                        "newCity": {
                            "description": "The city for picking up the car after change. If not provided, the original city remains unchanged.",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation of the modification status of the car rental reservation.",
                    "properties": {
                        "booking_status": {
                            "description": "Car rental modification status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "car_rental_cancelling",
                "input_structure": "Requires start and end dates, car ID, and city for cancelling an existing reservation.",
                "description": "Car Rental Reservation Cancellation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startDate": {
                            "description": "Start date (date + time) of the car rental to be cancelled",
                            "type": "string"
                        },
                        "endDate": {
                            "description": "End date (date + time) of the car rental to be cancelled",
                            "type": "string"
                        },
                        "carID": {
                            "description": "Car identification number to be cancelled",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the car rental pickup is to be cancelled",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation of the cancellation status of the car rental reservation.",
                    "properties": {
                        "booking_status": {
                            "description": "Car rental cancellation status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Proceed with car rental booking",
                "tool": "car_rental_booking",
                "input_source": "question",
                "param": {
                    "startDate": "12-20 09:00",
                    "endDate": "12-22 17:00",
                    "carID": "A001",
                    "city": "Shanghai",
                    "dropOffCity": "Nanjing"
                }
            },
            {
                "step": "2.2 Display booking details",
                "tool": "car_rental_query",
                "input_source": "car_rental_booking tool",
                "param": {
                    "startDate": "12-20 09:00",
                    "endDate": "12-22 17:00",
                    "carID": "A001",
                    "city": "Shanghai"
                }
            },
            {
                "step": "3.2 Execute the change of return date operation",
                "tool": "car_rental_changing",
                "input_source": "car_rental_query tool",
                "param": {
                    "originalStartDate": "12-20 09:00",
                    "originalEndDate": "12-22 17:00",
                    "newEndDate": "12-23 10:00",
                    "originalCarID": "A001",
                    "originalCity": "Shanghai"
                }
            },
            {
                "step": "4.2 Execute cancellation operation",
                "tool": "car_rental_cancelling",
                "input_source": "car_rental_changing tool",
                "param": {
                    "startDate": "12-20 09:00",
                    "endDate": "12-23 10:00",
                    "carID": "A001",
                    "city": "Shanghai"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to plan a one-day trip to Disneyland for the whole family, including checking the park's opening hours on our planned date and the ticket prices for adults and a 10-year-old child, and listing the attractions suitable for a 10-year-old child so that we can enter the park at 9 a.m. when it opens and start having fun.",
        "toolset": [
            {
                "name": "theme_park_info_search",
                "input_structure": "Requires the name of the theme park and the visit date. The visit date should be in a valid date-time format. The tool accesses online databases to retrieve information about the park's opening hours, ticket prices, and location.",
                "description": "Theme Park Information Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "parkName": {
                            "description": "Name of the theme park",
                            "type": "string"
                        },
                        "visitDate": {
                            "description": "Visit date",
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the opening hours, ticket price, and location of the theme park. For example, opening hours might be '9:00 AM - 10:00 PM', ticket price might be '120.00', and location might be 'Anaheim, CA'.",
                    "properties": {
                        "openHours": {
                            "description": "Opening hours",
                            "type": "string"
                        },
                        "ticketPrice": {
                            "description": "Ticket price",
                            "type": "number"
                        },
                        "location": {
                            "description": "Location",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "theme_park_ticket_search",
                "input_structure": "Requires the visit date, park name, and visitor's age. The visit date should be in a valid date format. The tool queries ticket pricing databases to provide accurate ticket prices based on age and date.",
                "description": "Theme Park Ticket Price Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "date": {
                            "description": "Visit Date",
                            "type": "string"
                        },
                        "parkName": {
                            "description": "Name of the Theme Park",
                            "type": "string"
                        },
                        "visitorAge": {
                            "description": "Visitor's Age",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the ticket price for the specified visitor age and date. For example, the ticket price might be '120.00' for an adult or '80.00' for a child.",
                    "properties": {
                        "ticket_price": {
                            "description": "Theme Park Ticket Price",
                            "type": "number"
                        }
                    }
                }
            },
            {
                "name": "theme_park_attractions_search",
                "input_structure": "Requires the theme park name, attraction type, visit date, and visitor's age. The tool searches for attractions that match the criteria and are suitable for the specified age group.",
                "description": "Theme Park Facilities Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "parkName": {
                            "description": "Theme Park Name",
                            "type": "string"
                        },
                        "attractionType": {
                            "description": "Attraction Type (e.g., Rides, Shows, Dining Spots)",
                            "type": "string"
                        },
                        "visitDate": {
                            "description": "Visit Date",
                            "type": "string"
                        },
                        "visitorAge": {
                            "description": "Visitor's Age",
                            "type": "integer"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a list of attractions that meet the criteria, including attraction names, operational status, and estimated wait times. For example, an attraction might be 'Space Mountain', operational status 'Open', and wait time '30 minutes'.",
                    "properties": {
                        "attraction_list": {
                            "description": "List of Attractions that Meet the Criteria",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attractionName": {
                                        "description": "Attraction Name",
                                        "type": "string"
                                    },
                                    "operationalStatus": {
                                        "description": "Attraction Operational Status",
                                        "type": "string"
                                    },
                                    "waitTime": {
                                        "description": "Estimated Waiting Time",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "attractionName",
                                    "operationalStatus"
                                ]
                            }
                        },
                        "opening_hours": {
                            "description": "Theme Park's Operating Hours",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Check park opening hours",
                "tool": "theme_park_info_search",
                "input_source": "question",
                "param": {
                    "parkName": "Disneyland",
                    "visitDate": "date provided by the user"
                }
            },
            {
                "step": "1.3.1 Check adult ticket prices",
                "tool": "theme_park_ticket_search",
                "input_source": "question",
                "param": {
                    "date": "date provided by the user",
                    "parkName": "Disneyland",
                    "visitorAge": "30"
                }
            },
            {
                "step": "1.3.2 Check ticket prices for a 10-year-old child",
                "tool": "theme_park_ticket_search",
                "input_source": "question",
                "param": {
                    "date": "date provided by the user",
                    "parkName": "Disneyland",
                    "visitorAge": "10"
                }
            },
            {
                "step": "2.1 Obtain a list of attractions suitable for a 10-year-old child",
                "tool": "theme_park_attractions_search",
                "input_source": "question",
                "param": {
                    "parkName": "Disneyland",
                    "visitorAge": "10",
                    "visitDate": "date provided by the user"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please provide me with a detailed weather forecast for Shanghai on February 14, 2023, including temperature, humidity, and wind direction and speed. Also, book a business car for me, departing from the hotel in Pudong at 9 am on the same day to the airport. The driver's license type is C1, and there is no need to purchase additional insurance.",
        "toolset": [
            {
                "name": "special_weather_forecast_tool",
                "input_structure": "Requires the city name, date within the next 7 days, and type of forecast (temperature, humidity, wind direction and speed). The city must be a major city within China.",
                "description": "Forecasts future weather conditions based on city, date, and type of forecast, capable of forecasting within the next 7 days, and limited to major cities within China",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "city": {
                            "description": "City name, limited to major cities within China",
                            "type": "string",
                            "example": "Shanghai"
                        },
                        "date": {
                            "description": "Forecast date, must be within the next 7 days",
                            "type": "string",
                            "format": "date",
                            "example": "2022-12-30"
                        },
                        "forecast_type": {
                            "description": "Type of forecast, options include temperature, humidity, wind direction and speed",
                            "type": "string",
                            "enum": [
                                "temperature",
                                "humidity",
                                "wind direction and speed"
                            ]
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides a string with the forecast information for the specified type, such as temperature, humidity, or wind details.",
                    "properties": {
                        "forecast_status": {
                            "description": "Forecast information",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "special_vehicle_rental_service",
                "input_structure": "Requires vehicle type, rental period, driver's license type, insurance preference, pickup and return locations. The rental period must be specified in date-time format.",
                "description": "Provides rental services for various types of vehicles including cars, SUVs, business vehicles, and sports cars. Users need to provide information such as rental period, type of driver's license, and whether to purchase vehicle insurance",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "vehicle_type": {
                            "description": "Vehicle type",
                            "type": "string",
                            "enum": [
                                "Car",
                                "SUV",
                                "Business vehicle",
                                "Sports car"
                            ]
                        },
                        "rental_period": {
                            "description": "Rental period",
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-05-17"
                        },
                        "license_type": {
                            "description": "Driver's license type",
                            "type": "string",
                            "enum": [
                                "C1",
                                "C2",
                                "B1",
                                "B2",
                                "A1",
                                "A2"
                            ]
                        },
                        "insurance_purchased": {
                            "description": "Whether to purchase rental car insurance",
                            "type": "boolean"
                        },
                        "pickup_location": {
                            "description": "Pickup location",
                            "type": "string",
                            "example": "Shanghai Hongqiao Airport"
                        },
                        "return_location": {
                            "description": "Return location",
                            "type": "string",
                            "example": "Pudong International Airport"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a string indicating the booking status of the rental car, confirming the reservation details.",
                    "properties": {
                        "booking_status": {
                            "description": "Booking status of the rental car",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Query temperature information",
                "tool": "special_weather_forecast_tool",
                "input_source": "question",
                "param": {
                    "city": "Shanghai",
                    "date": "2023-02-14",
                    "forecast_type": "temperature"
                }
            },
            {
                "step": "1.3 Query humidity information",
                "tool": "special_weather_forecast_tool",
                "input_source": "special_weather_forecast_tool tool",
                "param": {
                    "city": "Shanghai",
                    "date": "2023-02-14",
                    "forecast_type": "humidity"
                }
            },
            {
                "step": "1.4 Query wind direction and speed information",
                "tool": "special_weather_forecast_tool",
                "input_source": "special_weather_forecast_tool tool",
                "param": {
                    "city": "Shanghai",
                    "date": "2023-02-14",
                    "forecast_type": "wind direction and speed"
                }
            },
            {
                "step": "2.3 Complete the booking of the business car",
                "tool": "special_vehicle_rental_service",
                "input_source": "question",
                "param": {
                    "vehicle_type": "business car",
                    "rental_period": "2023-02-14T09:00:00",
                    "license_type": "C1",
                    "insurance_purchased": "false",
                    "pickup_location": "Hotel in Pudong",
                    "return_location": "Shanghai Pudong International Airport"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to book a meeting room in both Beijing and Shanghai for March 20th from 9 AM to 11 AM, with the topic \"Annual Sales Strategy\".\n",
        "toolset": [
            {
                "name": "conference_room_query",
                "input_structure": "Requires the start and end time of the meeting, the city where the meeting room is located, and optionally the room ID if a specific room is being queried. The user must provide valid date and time formats.",
                "description": "Conference Room Reservation Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "The start time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "The end time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "The ID of the conference room to be queried",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the conference room to be queried is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A list of available conference rooms that match the search criteria, including their status and availability.",
                    "properties": {
                        "conference_room_status": {
                            "description": "The reservation list of conference rooms that meet the search criteria",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "conference_room_booking",
                "input_structure": "Requires the start and end time of the meeting, the room ID of the conference room to be booked, the city where the room is located, and the meeting agenda. The user must ensure the room ID is valid and available.",
                "description": "Conference Room Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "Meeting start time (date+time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "Meeting end time (date+time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "Conference room ID",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the conference room is located",
                            "type": "string"
                        },
                        "content": {
                            "description": "Meeting agenda",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation of the booking status, indicating whether the booking was successful or if there were any issues.",
                    "properties": {
                        "booking_status": {
                            "description": "Conference room booking status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "2.1 Search for meeting rooms in Beijing area",
                "tool": "conference_room_query",
                "input_source": "question",
                "param": {
                    "startTime": "2023-03-20 09:00",
                    "endTime": "2023-03-20 11:00",
                    "city": "Beijing"
                }
            },
            {
                "step": "2.3 Book the meeting room",
                "tool": "conference_room_booking",
                "input_source": "conference_room_query tool",
                "param": {
                    "startTime": "2023-03-20 09:00",
                    "endTime": "2023-03-20 11:00",
                    "roomID": "Beijing Meeting Room ID",
                    "city": "Beijing",
                    "content": "Annual Sales Strategy"
                }
            },
            {
                "step": "3.1 Search for meeting rooms in Shanghai area",
                "tool": "conference_room_query",
                "input_source": "question",
                "param": {
                    "startTime": "2023-03-20 09:00",
                    "endTime": "2023-03-20 11:00",
                    "city": "Shanghai"
                }
            },
            {
                "step": "3.3 Book the meeting room",
                "tool": "conference_room_booking",
                "input_source": "conference_room_query tool",
                "param": {
                    "startTime": "2023-03-20 09:00",
                    "endTime": "2023-03-20 11:00",
                    "roomID": "Shanghai Meeting Room ID",
                    "city": "Shanghai",
                    "content": "Annual Sales Strategy"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to organize a sales training meeting in Beijing, the meeting room reservation number is A203, and the meeting time is from 8 am tomorrow until 12 pm at noon. Additionally, considering there might be remote participants, I would also like to reserve an online meeting room, please help me arrange and confirm the reservation status.\n",
        "toolset": [
            {
                "name": "conference_room_booking",
                "input_structure": "Requires the city, room ID, start time, and end time for booking. The user must provide a valid room ID and ensure the room is available for the specified time. The agenda of the meeting can also be included.",
                "description": "Conference Room Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "Meeting start time (date+time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "Meeting end time (date+time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "Conference room ID",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the conference room is located",
                            "type": "string"
                        },
                        "content": {
                            "description": "Meeting agenda",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the booking status of the conference room, indicating whether the booking was successful or not.",
                    "properties": {
                        "booking_status": {
                            "description": "Conference room booking status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "conference_room_query",
                "input_structure": "Requires the city, room ID, start time, and end time to query the reservation status. The user must provide accurate details to retrieve the correct reservation status.",
                "description": "Conference Room Reservation Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "The start time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "The end time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "The ID of the conference room to be queried",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the conference room to be queried is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the reservation status of the conference room, listing all reservations that match the search criteria.",
                    "properties": {
                        "conference_room_status": {
                            "description": "The reservation list of conference rooms that meet the search criteria",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "create_virtual_meeting",
                "input_structure": "Requires the start and end time for creating an online meeting room. The user must ensure the times do not conflict with other meetings and that the platform supports the specified duration.",
                "description": "Create an online meeting room and obtain the meeting link and access credentials",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "start_time": {
                            "type": "string",
                            "description": "Meeting start time"
                        },
                        "end_time": {
                            "type": "string",
                            "description": "Meeting end time"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the booking status, meeting link, and access credentials for the online meeting room.",
                    "properties": {
                        "booking_status": {
                            "type": "string",
                            "description": "Online meeting room booking status"
                        },
                        "meeting_link": {
                            "type": "string",
                            "description": "Online meeting link"
                        },
                        "access_credentials": {
                            "type": "string",
                            "description": "Access credentials"
                        }
                    }
                }
            },
            {
                "name": "send_meeting_notification",
                "input_structure": "Requires meeting details, attendee list, date, time, location, topic, agenda, and notification method. The user must provide a complete list of attendees and ensure the notification method is supported.",
                "description": "Send meeting notification",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "meeting_details": {
                            "type": "string",
                            "description": "Meeting details, including time, location, topics, etc."
                        },
                        "attendee_list": {
                            "type": "string",
                            "description": "List of attendees"
                        },
                        "date": {
                            "type": "string",
                            "description": "Meeting date"
                        },
                        "time": {
                            "type": "string",
                            "description": "Meeting time"
                        },
                        "location": {
                            "type": "string",
                            "description": "Meeting location"
                        },
                        "topic": {
                            "type": "string",
                            "description": "Meeting topic"
                        },
                        "agenda": {
                            "type": "string",
                            "description": "Meeting agenda"
                        },
                        "method": {
                            "type": "string",
                            "description": "Notification sending method, such as email or SMS"
                        },
                        "email_addresses": {
                            "type": "array",
                            "description": "List of team members' email addresses",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the status of the notification, confirming whether it was sent successfully.",
                    "properties": {
                        "notification_status": {
                            "type": "string",
                            "description": "Notification sending status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Book the physical meeting room",
                "tool": "conference_room_booking",
                "input_source": "question",
                "param": {
                    "startTime": "8 am tomorrow",
                    "endTime": "12 pm at noon",
                    "roomID": "A203",
                    "city": "Beijing"
                }
            },
            {
                "step": "1.3 Confirm the physical meeting room reservation status",
                "tool": "conference_room_query",
                "input_source": "conference_room_booking tool",
                "param": {
                    "startTime": "8 am tomorrow",
                    "endTime": "12 pm at noon",
                    "roomID": "A203",
                    "city": "Beijing"
                }
            },
            {
                "step": "2.2 Create an online meeting room",
                "tool": "create_virtual_meeting",
                "input_source": "question",
                "param": {
                    "start_time": "8 am tomorrow",
                    "end_time": "12 pm at noon"
                }
            },
            {
                "step": "3.2 Send meeting notification",
                "tool": "send_meeting_notification",
                "input_source": "question",
                "param": {
                    "meeting_details": "Meeting details",
                    "attendee_list": "Participant list"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to book a conference room in Shanghai, the room number is SH001, the meeting time is from 9 am to 11 am on March 20, 2023. Additionally, I need to cancel another conference room in Beijing, the room number is BJ002, the original meeting time was from 10 am to 3 pm on March 18, 2023.\n",
        "toolset": [
            {
                "name": "conference_room_query",
                "input_structure": "Requires the start and end time of the meeting, the room ID, and the city where the conference room is located. The user must provide these details to check the availability or booking status of a conference room.",
                "description": "Conference Room Reservation Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "The start time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "The end time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "The ID of the conference room to be queried",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the conference room to be queried is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the reservation status of conference rooms that match the search criteria, typically as a string indicating availability or booking details.",
                    "properties": {
                        "conference_room_status": {
                            "description": "The reservation list of conference rooms that meet the search criteria",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "conference_room_booking",
                "input_structure": "Requires the start and end time of the meeting, the room ID, the city, and optionally the meeting agenda. The user must ensure the room is available before booking.",
                "description": "Conference Room Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "Meeting start time (date+time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "Meeting end time (date+time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "Conference room ID",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the conference room is located",
                            "type": "string"
                        },
                        "content": {
                            "description": "Meeting agenda",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the booking status of the conference room, indicating success or failure of the booking operation.",
                    "properties": {
                        "booking_status": {
                            "description": "Conference room booking status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "conference_room_cancelling",
                "input_structure": "Requires the start and end time of the meeting, the room ID, and the city. The user must provide these details to cancel an existing booking.",
                "description": "Conference Room Cancellation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "The start time of the meeting to be cancelled (date+time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "The end time of the meeting to be cancelled (date+time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "The ID of the conference room to be cancelled",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the conference room to be cancelled is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the cancellation status of the conference room booking, indicating whether the cancellation was successful.",
                    "properties": {
                        "booking_status": {
                            "description": "Conference room cancellation status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Check conference room availability",
                "tool": "conference_room_query",
                "input_source": "question",
                "param": {
                    "startTime": "2023-03-20 09:00",
                    "endTime": "2023-03-20 11:00",
                    "roomID": "SH001",
                    "city": "Shanghai"
                }
            },
            {
                "step": "1.3 Book the conference room",
                "tool": "conference_room_booking",
                "input_source": "conference_room_query tool",
                "param": {
                    "startTime": "2023-03-20 09:00",
                    "endTime": "2023-03-20 11:00",
                    "roomID": "SH001",
                    "city": "Shanghai",
                    "content": ""
                }
            },
            {
                "step": "2.2 Check conference room booking record",
                "tool": "conference_room_query",
                "input_source": "question",
                "param": {
                    "startTime": "2023-03-18 10:00",
                    "endTime": "2023-03-18 15:00",
                    "roomID": "BJ002",
                    "city": "Beijing"
                }
            },
            {
                "step": "2.3 Cancel the conference room booking",
                "tool": "conference_room_cancelling",
                "input_source": "conference_room_query tool",
                "param": {
                    "startTime": "2023-03-18 10:00",
                    "endTime": "2023-03-18 15:00",
                    "roomID": "BJ002",
                    "city": "Beijing"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I would like to change the reservation of meeting room No. 823 of the Beijing company, originally scheduled for March 20, 2023, from 14:00 to 16:00, to March 20, 2023, from 9:00 to 11:00.\n",
        "toolset": [
            {
                "name": "conference_room_query",
                "input_structure": "Requires the start and end time of the meeting, the room ID, and the city where the room is located. The user must provide these details to query the reservation status.",
                "description": "Conference Room Reservation Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "The start time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "The end time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "The ID of the conference room to be queried",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the conference room to be queried is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the reservation list of conference rooms that meet the search criteria, indicating their current reservation status.",
                    "properties": {
                        "conference_room_status": {
                            "description": "The reservation list of conference rooms that meet the search criteria",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "check_meeting_room_availability",
                "input_structure": "Requires the date, start and end time, room number, and location to check the availability of the meeting room. The user must provide these details to perform the check.",
                "description": "Check the availability of the meeting room for a specified time period",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "date": {
                            "type": "string",
                            "description": "Reservation date"
                        },
                        "start_time": {
                            "type": "string",
                            "description": "Reservation start time"
                        },
                        "end_time": {
                            "type": "string",
                            "description": "Reservation end time"
                        },
                        "room_number": {
                            "type": "string",
                            "description": "Meeting room number"
                        },
                        "location": {
                            "type": "string",
                            "description": "Location of the meeting room"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a boolean indicating availability and a status message describing the availability of the meeting room.",
                    "properties": {
                        "availability": {
                            "type": "boolean",
                            "description": "Whether the meeting room is available"
                        },
                        "availability_status": {
                            "type": "string",
                            "description": "Status of the meeting room availability"
                        }
                    }
                }
            },
            {
                "name": "conference_room_cancelling",
                "input_structure": "Requires the start and end time of the meeting, the room ID, and the city where the room is located to cancel a reservation. The user must provide these details to perform the cancellation.",
                "description": "Conference Room Cancellation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "The start time of the meeting to be cancelled (date+time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "The end time of the meeting to be cancelled (date+time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "The ID of the conference room to be cancelled",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the conference room to be cancelled is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the cancellation process, indicating whether the reservation was successfully cancelled.",
                    "properties": {
                        "booking_status": {
                            "description": "Conference room cancellation status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "conference_room_booking",
                "input_structure": "Requires the start and end time of the meeting, the room ID, the city, and the meeting agenda to book a conference room. The user must provide these details to perform the booking.",
                "description": "Conference Room Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "Meeting start time (date+time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "Meeting end time (date+time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "Conference room ID",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the conference room is located",
                            "type": "string"
                        },
                        "content": {
                            "description": "Meeting agenda",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the booking process, indicating whether the reservation was successfully made.",
                    "properties": {
                        "booking_status": {
                            "description": "Conference room booking status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Confirm the validity of the reservation information",
                "tool": "conference_room_query",
                "input_source": "question",
                "param": {
                    "startTime": "2023-03-20 14:00",
                    "endTime": "2023-03-20 16:00",
                    "roomID": "823",
                    "city": "Beijing"
                }
            },
            {
                "step": "2.2 Query the availability of meeting room No. 823 during the new reservation time",
                "tool": "check_meeting_room_availability",
                "input_source": "question",
                "param": {
                    "start_time": "2023-03-20 9:00",
                    "end_time": "2023-03-20 11:00",
                    "room_number": "823",
                    "location": "Beijing"
                }
            },
            {
                "step": "3.1 Perform the cancellation of the reservation",
                "tool": "conference_room_cancelling",
                "input_source": "conference_room_query tool",
                "param": {
                    "startTime": "2023-03-20 14:00",
                    "endTime": "2023-03-20 16:00",
                    "roomID": "823",
                    "city": "Beijing"
                }
            },
            {
                "step": "4.1 Book in the system",
                "tool": "conference_room_booking",
                "input_source": "check_meeting_room_availability tool",
                "param": {
                    "startTime": "2023-03-20 9:00",
                    "endTime": "2023-03-20 11:00",
                    "roomID": "823",
                    "city": "Beijing"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to change the meeting room reservation from 9 AM to 11 AM on April 6th in Shanghai's room 305 to 3 PM to 5 PM on April 7th, and check if there are any available meeting rooms for the new time slot.\n",
        "toolset": [
            {
                "name": "conference_room_query",
                "input_structure": "Requires the start and end time of the meeting in date-time format, the city where the room is located, and optionally the room ID if a specific room is being queried. Network access is required to query the reservation system.",
                "description": "Conference Room Reservation Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "The start time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "The end time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "The ID of the conference room to be queried",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the conference room to be queried is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A list of available conference rooms that meet the search criteria, including room IDs and availability status.",
                    "properties": {
                        "conference_room_status": {
                            "description": "The reservation list of conference rooms that meet the search criteria",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "conference_room_cancelling",
                "input_structure": "Requires the start and end time of the meeting to be cancelled in date-time format, the city, and the room ID. Network access is required to cancel the reservation in the system.",
                "description": "Conference Room Cancellation Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "The start time of the meeting to be cancelled (date+time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "The end time of the meeting to be cancelled (date+time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "The ID of the conference room to be cancelled",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the conference room to be cancelled is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation message indicating whether the cancellation was successful or not.",
                    "properties": {
                        "booking_status": {
                            "description": "Conference room cancellation status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "conference_room_booking",
                "input_structure": "Requires the start and end time of the meeting in date-time format, the city, the room ID, and optionally the meeting agenda. Network access is required to book the room in the system.",
                "description": "Conference Room Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "Meeting start time (date+time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "Meeting end time (date+time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "Conference room ID",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the conference room is located",
                            "type": "string"
                        },
                        "content": {
                            "description": "Meeting agenda",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation message indicating whether the booking was successful or not, including the room ID and booking details.",
                    "properties": {
                        "booking_status": {
                            "description": "Conference room booking status",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Check the availability of the meeting room for the new time slot (Date: April 7th, Start Time: 3 PM, End Time: 5 PM, City: Shanghai)",
                "tool": "conference_room_query",
                "input_source": "question",
                "param": {
                    "startTime": "2023-04-07 15:00",
                    "endTime": "2023-04-07 17:00",
                    "city": "Shanghai"
                }
            },
            {
                "step": "2.1 Use the original reservation information to cancel the booking (Date: April 6th, Start Time: 9 AM, End Time: 11 AM, City: Shanghai, Room Number: 305)",
                "tool": "conference_room_cancelling",
                "input_source": "question",
                "param": {
                    "startTime": "2023-04-06 09:00",
                    "endTime": "2023-04-06 11:00",
                    "roomID": "305",
                    "city": "Shanghai"
                }
            },
            {
                "step": "3.1 Confirm the availability of a meeting room for the new time slot and obtain the room number",
                "tool": "conference_room_query",
                "input_source": "conference_room_query tool",
                "param": {
                    "startTime": "2023-04-07 15:00",
                    "endTime": "2023-04-07 17:00",
                    "city": "Shanghai"
                }
            },
            {
                "step": "3.2 Use the new time information to reserve a meeting room (Date: April 7th, Start Time: 3 PM, End Time: 5 PM, City: Shanghai, Room Number: <Obtained room number>)",
                "tool": "conference_room_booking",
                "input_source": "conference_room_query tool",
                "param": {
                    "startTime": "2023-04-07 15:00",
                    "endTime": "2023-04-07 17:00",
                    "city": "Shanghai",
                    "roomID": "<Obtained room number>"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "A product launch event is scheduled at 3 PM in Shanghai, requiring the reservation of conference room number SH888, with the meeting time from 3 PM to 5 PM.\n",
        "toolset": [
            {
                "name": "conference_room_query",
                "input_structure": "Requires the start and end time of the meeting, the room ID, and the city where the room is located. The user must ensure the room ID and city are correct.",
                "description": "Conference Room Reservation Query Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "The start time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "The end time of the meeting to be queried (date + time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "The ID of the conference room to be queried",
                            "type": "string"
                        },
                        "city": {
                            "description": "The city where the conference room to be queried is located",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a string indicating the reservation status of the conference room, such as 'available' or 'booked'.",
                    "properties": {
                        "conference_room_status": {
                            "description": "The reservation list of conference rooms that meet the search criteria",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "conference_room_booking",
                "input_structure": "Requires the start and end time of the meeting, the room ID, city, and meeting agenda. The user must confirm the details before booking.",
                "description": "Conference Room Booking Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "startTime": {
                            "description": "Meeting start time (date+time)",
                            "type": "string"
                        },
                        "endTime": {
                            "description": "Meeting end time (date+time)",
                            "type": "string"
                        },
                        "roomID": {
                            "description": "Conference room ID",
                            "type": "string"
                        },
                        "city": {
                            "description": "City where the conference room is located",
                            "type": "string"
                        },
                        "content": {
                            "description": "Meeting agenda",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a string indicating the booking status, such as 'success' or 'failed'.",
                    "properties": {
                        "booking_status": {
                            "description": "Conference room booking status",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "arrange_technical_staff",
                "input_structure": "Requires a list of equipment, room ID, city, and meeting times. The user must ensure all details are correct for proper arrangement.",
                "description": "Arrange technical staff to prepare the required meeting facilities based on the meeting room number, city, and meeting time",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "equipment_list": {
                            "type": "string",
                            "description": "List of meeting facilities to be prepared"
                        },
                        "roomID": {
                            "type": "string",
                            "description": "Meeting room number"
                        },
                        "city": {
                            "type": "string",
                            "description": "City where the meeting room is located"
                        },
                        "startTime": {
                            "type": "string",
                            "description": "Meeting start time"
                        },
                        "endTime": {
                            "type": "string",
                            "description": "Meeting end time"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a string indicating the status of facility preparation, such as 'completed' or 'pending'.",
                    "properties": {
                        "arrangement_status": {
                            "type": "string",
                            "description": "Status of the facility preparation and testing"
                        }
                    }
                }
            },
            {
                "name": "send_meeting_invitations",
                "input_structure": "Requires a list of email addresses, invitation content, and event details. The user must verify the email list and content before sending.",
                "description": "Send meeting invitations",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "email_list": {
                            "type": "array",
                            "description": "List of attendees' emails",
                            "items": {
                                "type": "string"
                            }
                        },
                        "invitation_content": {
                            "type": "string",
                            "description": "Content of the invitation letter"
                        },
                        "event_name": {
                            "type": "string",
                            "description": "Event name"
                        },
                        "start_time": {
                            "type": "string",
                            "description": "Event start time"
                        },
                        "end_time": {
                            "type": "string",
                            "description": "Event end time"
                        },
                        "location": {
                            "type": "string",
                            "description": "Event location"
                        },
                        "agenda_title": {
                            "type": "string",
                            "description": "Agenda title"
                        },
                        "organizer": {
                            "type": "string",
                            "description": "Organizer's name"
                        },
                        "meeting_topic": {
                            "type": "string",
                            "description": "Meeting topic"
                        },
                        "meeting_location": {
                            "type": "string",
                            "description": "Meeting location"
                        },
                        "organizer_name": {
                            "type": "string",
                            "description": "Meeting initiator's name"
                        },
                        "organizer_email": {
                            "type": "string",
                            "description": "Meeting initiator's email"
                        },
                        "content": {
                            "type": "string",
                            "description": "Meeting content"
                        },
                        "meeting_name": {
                            "type": "string",
                            "description": "Meeting name"
                        },
                        "meeting_id": {
                            "type": "string",
                            "description": "Meeting ID"
                        },
                        "meeting_link": {
                            "type": "string",
                            "description": "Online meeting link"
                        },
                        "meeting_end_time": {
                            "type": "string",
                            "description": "Meeting end time"
                        },
                        "email_content": {
                            "type": "string",
                            "description": "Content of the meeting notification email"
                        },
                        "meeting_time": {
                            "type": "string",
                            "description": "Meeting time"
                        },
                        "account_info": {
                            "type": "string",
                            "description": "Online meeting tool account information"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a boolean indicating whether the invitations were successfully sent, and a string with the send status.",
                    "properties": {
                        "send_status": {
                            "type": "string",
                            "description": "Status of the invitation sent"
                        },
                        "outcome": {
                            "description": "Whether the invitation was successfully sent",
                            "type": "string"
                        },
                        "sending_status": {
                            "description": "Whether the invitation was successfully sent",
                            "type": "boolean"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.3 Check conference room availability",
                "tool": "conference_room_query",
                "input_source": "question",
                "param": {
                    "startTime": "15:00",
                    "endTime": "17:00",
                    "roomID": "SH888",
                    "city": "Shanghai"
                }
            },
            {
                "step": "1.4 Reserve the conference room",
                "tool": "conference_room_booking",
                "input_source": "conference_room_query tool",
                "param": {
                    "startTime": "15:00",
                    "endTime": "17:00",
                    "roomID": "SH888",
                    "city": "Shanghai",
                    "content": "Product Launch Event"
                }
            },
            {
                "step": "2.2 Arrange for technical staff to prepare facilities",
                "tool": "arrange_technical_staff",
                "input_source": "question",
                "param": {
                    "equipment_list": "projector, sound system, microphone",
                    "roomID": "SH888",
                    "city": "Shanghai",
                    "startTime": "15:00",
                    "endTime": "17:00"
                }
            },
            {
                "step": "3.3 Send meeting notification emails to all participants",
                "tool": "send_meeting_invitations",
                "input_source": "question",
                "param": {
                    "email_content": "includes time, location, agenda",
                    "email_list": "participants"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I have an important meeting at 7 PM, I need to book a meeting room in Beijing, and write 'Welcome everyone to this meeting' on the whiteboard in the meeting room. Please help me arrange it.\n",
        "toolset": [
            {
                "name": "search_and_select_meeting_room",
                "input_structure": "Requires location and meeting time as input. The location should be a valid city or address, and the meeting time should be in a recognizable format. The tool searches for available meeting rooms that match the criteria.",
                "description": "Search and select a meeting room that meets the criteria",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "location": {
                            "type": "string",
                            "description": "Location of the meeting room"
                        },
                        "meeting_time": {
                            "type": "string",
                            "description": "Meeting start time"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides details of the selected meeting room, including location, capacity, and available amenities.",
                    "properties": {
                        "meeting_room_details": {
                            "type": "string",
                            "description": "Details of the selected meeting room"
                        }
                    }
                }
            },
            {
                "name": "book_and_pay_for_meeting_room",
                "input_structure": "Requires meeting room details, meeting time, duration, and number of participants. The tool processes the booking and payment for the selected meeting room.",
                "description": "Enter reservation information and complete payment for the meeting room",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "meeting_room_details": {
                            "type": "string",
                            "description": "Meeting room details"
                        },
                        "meeting_time": {
                            "type": "string",
                            "description": "Meeting start time"
                        },
                        "duration": {
                            "type": "string",
                            "description": "Meeting duration"
                        },
                        "number_of_people": {
                            "type": "string",
                            "description": "Number of participants"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the booking status, indicating whether the reservation was successful or if there were any issues.",
                    "properties": {
                        "booking_status": {
                            "type": "string",
                            "description": "Meeting room booking status"
                        }
                    }
                }
            },
            {
                "name": "assign_staff_to_meeting_room",
                "input_structure": "Requires the address of the meeting room and the method of entry. The tool assigns available staff to the specified meeting room.",
                "description": "Assign staff to the meeting room",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "meeting_room_address": {
                            "type": "string",
                            "description": "Meeting room address"
                        },
                        "entry_method": {
                            "type": "string",
                            "description": "Entry method"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the status of the staff assignment, confirming whether staff have been successfully assigned to the meeting room.",
                    "properties": {
                        "assignment_status": {
                            "type": "string",
                            "description": "Staff assignment status"
                        }
                    }
                }
            },
            {
                "name": "write_on_whiteboard",
                "input_structure": "Requires the content to be written and the staff member assigned to write it. The tool ensures the content is written on the whiteboard in the meeting room.",
                "description": "Assign staff to write on the whiteboard in the meeting room",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "content": {
                            "type": "string",
                            "description": "The content to be written on the whiteboard"
                        },
                        "staff": {
                            "type": "string",
                            "description": "The assigned staff member"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Confirms the writing status, indicating whether the content was successfully written and is clearly visible.",
                    "properties": {
                        "writing_status": {
                            "type": "string",
                            "description": "Whiteboard writing status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Search and select a suitable meeting room",
                "tool": "search_and_select_meeting_room",
                "input_source": "question",
                "param": {
                    "location": "Beijing",
                    "meeting_time": "7 PM"
                }
            },
            {
                "step": "1.5 Enter booking information and complete payment",
                "tool": "book_and_pay_for_meeting_room",
                "input_source": "search_and_select_meeting_room tool",
                "param": {
                    "meeting_room_details": "<Selected meeting room details>",
                    "meeting_time": "7 PM",
                    "duration": "Required meeting duration",
                    "number_of_people": "Estimated number of participants"
                }
            },
            {
                "step": "2.2 Assign staff to go to the meeting room",
                "tool": "assign_staff_to_meeting_room",
                "input_source": "book_and_pay_for_meeting_room tool",
                "param": {
                    "meeting_room_address": "Address of the successfully booked meeting room",
                    "entry_method": "Meeting room entry method"
                }
            },
            {
                "step": "2.3.2 Staff writes on the whiteboard",
                "tool": "write_on_whiteboard",
                "input_source": "question",
                "param": {
                    "content": "Welcome everyone to this meeting",
                    "staff": "<Assigned staff>"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Arrange family gatherings at my house starting from November 26th, on the next four Sundays at 6 pm, and contact the nearby Italian restaurant two days in advance to find out if they offer special family gathering packages or services, and to obtain their menu and price list. Also, reserve two bouquets of mixed roses and lilies for decoration the day before each gathering, and ensure that the flowers are delivered between 4 pm and 5 pm on the day of the gathering to maintain their freshness.",
        "toolset": [
            {
                "name": "add_periodic_event",
                "input_structure": "Requires event details including event ID, name, start time, duration, end time, start date, location, and frequency. The user must provide a valid start date and time, and specify the frequency in days.",
                "description": "Add periodic event",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "event_id": {
                            "type": "string",
                            "description": "Event ID"
                        },
                        "event_name": {
                            "type": "string",
                            "description": "Event name"
                        },
                        "start_time": {
                            "type": "string",
                            "description": "Event start time"
                        },
                        "duration": {
                            "type": "string",
                            "description": "Event duration"
                        },
                        "end_time": {
                            "type": "string",
                            "description": "Event end time"
                        },
                        "start_date": {
                            "type": "string",
                            "description": "Event start date"
                        },
                        "location": {
                            "type": "string",
                            "description": "Event location"
                        },
                        "frequency": {
                            "type": "integer",
                            "description": "Event frequency (days)"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An event is created in the user's calendar with the specified details, recurring at the specified frequency.",
                    "properties": {
                        "status": {
                            "description": "Whether the event was successfully added",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "contact_restaurant",
                "input_structure": "Requires the type of restaurant and the number of days in advance to contact. The user must provide valid contact details and specify the type of restaurant.",
                "description": "Contact the restaurant a specified number of days in advance to inquire about special family gathering meal packages or services, and to obtain a menu and price list",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "restaurant_type": {
                            "type": "string",
                            "description": "Type of restaurant"
                        },
                        "days_before_event": {
                            "type": "integer",
                            "description": "Number of days to contact in advance"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Information about available packages, menu, and pricing is obtained from the restaurant.",
                    "properties": {
                        "contact_status": {
                            "type": "string",
                            "description": "Whether the restaurant was successfully contacted and information obtained"
                        },
                        "menu": {
                            "type": "string",
                            "description": "Menu information obtained"
                        },
                        "pricing": {
                            "type": "string",
                            "description": "Pricing information obtained"
                        }
                    }
                }
            },
            {
                "name": "order_flowers",
                "input_structure": "Requires flower type, quantity, delivery time, and florist information. The user must specify the type and quantity of flowers and provide florist contact details.",
                "description": "Reserve specific types and quantities of fresh flowers, and arrange delivery",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "supplier": {
                            "type": "string",
                            "description": "Supplier"
                        },
                        "flower_type": {
                            "type": "string",
                            "description": "Type of flower"
                        },
                        "quantity": {
                            "type": "string",
                            "description": "Quantity of flowers"
                        },
                        "delivery_time": {
                            "type": "string",
                            "description": "Flower delivery time"
                        },
                        "florist_info": {
                            "type": "string",
                            "description": "Selected florist information"
                        },
                        "days_before_event": {
                            "type": "integer",
                            "description": "Days to reserve in advance"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A reservation is made for the specified flowers, and delivery is scheduled.",
                    "properties": {
                        "order_status": {
                            "description": "Whether the reservation is successful",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "schedule_flower_delivery",
                "input_structure": "Requires delivery time and address. The user must provide a valid delivery address and specify the desired delivery time.",
                "description": "Arrange for flowers to be delivered at a specified time and address",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "delivery_time": {
                            "type": "string",
                            "description": "Delivery time"
                        },
                        "delivery_address": {
                            "type": "string",
                            "description": "Delivery address"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Flowers are delivered to the specified address at the specified time.",
                    "properties": {
                        "delivery_status": {
                            "type": "string",
                            "description": "Whether the flower delivery was successful"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Create periodic gathering event",
                "tool": "add_periodic_event",
                "input_source": "question",
                "param": {
                    "event_id": "family_gathering",
                    "event_name": "Family Gathering",
                    "start_time": "18:00",
                    "start_date": "2022-11-26",
                    "location": "User's home",
                    "frequency": "7"
                }
            },
            {
                "step": "2.2 Contact the restaurant two days in advance to inquire about packages and obtain the menu",
                "tool": "contact_restaurant",
                "input_source": "question",
                "param": {
                    "restaurant_type": "Italian restaurant",
                    "days_before_event": "2"
                }
            },
            {
                "step": "3.2 Reserve flowers (Flower type: Mixed roses and lilies, Quantity: Two bouquets, Reservation time: The day before the gathering)",
                "tool": "order_flowers",
                "input_source": "question",
                "param": {
                    "flower_type": "Mixed roses and lilies",
                    "quantity": "2",
                    "days_before_event": "1"
                }
            },
            {
                "step": "3.3 Arrange flower delivery (Delivery time: The day of the gathering between 4 pm and 5 pm, Delivery address: User's home)",
                "tool": "schedule_flower_delivery",
                "input_source": "order_flowers tool",
                "param": {
                    "delivery_time": "16:00-17:00",
                    "delivery_address": "User's home"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please organize and export information for my two upcoming events. The first is the monthly operations team meeting held from 10 AM to 11 AM today in the company conference room, with the event ID OP12345. The second is the all-staff outdoor team-building activity taking place all day this Friday at the suburban Sunshine Lawn, with the event ID TB67890. Include the time, location, and detailed description for each event.",
        "toolset": [
            {
                "name": "export_calendar",
                "input_structure": "Requires event details including event ID, title, start and end times, location, and description. The user must provide valid event IDs and ensure the calendar system is accessible.",
                "description": "Export calendar events",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "event_id": {
                            "type": "string",
                            "description": "The ID of the event"
                        },
                        "event_title": {
                            "type": "string",
                            "description": "Event name"
                        },
                        "event_start_time": {
                            "type": "string",
                            "description": "Event start time"
                        },
                        "event_end_time": {
                            "type": "string",
                            "description": "Event end time"
                        },
                        "event_location": {
                            "type": "string",
                            "description": "Geographical location of the event"
                        },
                        "event_description": {
                            "type": "string",
                            "description": "Event description information"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation message indicating whether the event was successfully exported to the calendar system.",
                    "properties": {
                        "outcome": {
                            "description": "Whether the event was successfully exported",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "create_document_with_events",
                "input_structure": "Requires detailed information for two events, including title, time, location, and description. The user must ensure all event information is accurate and complete.",
                "description": "Create a document and insert event information",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "event1_info": {
                            "type": "string",
                            "description": "Detailed information of the first event"
                        },
                        "event2_info": {
                            "type": "string",
                            "description": "Detailed information of the second event"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A document object containing the organized information for both events, ready for export.",
                    "properties": {
                        "document": {
                            "description": "The created document object",
                            "type": "object"
                        }
                    }
                }
            },
            {
                "name": "export_document_to_pdf",
                "input_structure": "Requires a document object and the desired export format. The user must ensure the document is finalized and ready for export.",
                "description": "Export the document to PDF format",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "document": {
                            "type": "object",
                            "description": "The document object to be exported"
                        },
                        "format": {
                            "type": "string",
                            "description": "The file format to export"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A confirmation message indicating whether the document was successfully exported to the specified format.",
                    "properties": {
                        "outcome": {
                            "description": "Whether the export was successful",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.5 Export the first event information",
                "tool": "export_calendar",
                "input_source": "question",
                "param": {
                    "event_id": "OP12345",
                    "event_title": "monthly operations team meeting",
                    "event_start_time": "10 AM today",
                    "event_end_time": "11 AM today",
                    "event_location": "company conference room",
                    "event_description": "monthly operations team meeting"
                }
            },
            {
                "step": "2.5 Export the second event information",
                "tool": "export_calendar",
                "input_source": "question",
                "param": {
                    "event_id": "TB67890",
                    "event_title": "all-staff outdoor team-building activity",
                    "event_start_time": "all day this Friday",
                    "event_end_time": "all day this Friday",
                    "event_location": "suburban Sunshine Lawn",
                    "event_description": "all-staff outdoor team-building activity"
                }
            },
            {
                "step": "3.1 Create a document and insert information for both events",
                "tool": "create_document_with_events",
                "input_source": "export_calendar tool",
                "param": {
                    "event1_info": "<first event information>",
                    "event2_info": "<second event information>"
                }
            },
            {
                "step": "3.4 Perform the export operation",
                "tool": "export_document_to_pdf",
                "input_source": "create_document_with_events tool",
                "param": {
                    "document": "<document>",
                    "format": "PDF"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "Please help me set up two recurring events. The first one is a weekly event named 'Friday Reading Night', which takes place every Friday at 7 PM in the multi-purpose hall of the city library. The second one is a monthly event named 'Monthly Department Meet-up', which occurs on the first Monday of every month at 9 AM in conference room 1 on the 5th floor of the company, and ensure that a unique event id is generated for each activity.",
        "toolset": [
            {
                "name": "generate_unique_id",
                "input_structure": "Requires the event name and start time as input. The event name should be a string representing the name of the event, and the start time should be a string indicating when the event starts. This tool does not require any external resources.",
                "description": "Generate a unique identifier ID",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "event_name": {
                            "type": "string",
                            "description": "Event name"
                        },
                        "start_time": {
                            "type": "string",
                            "description": "Start time"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A unique identifier string is generated for the event, which can be used to uniquely identify the event in subsequent operations.",
                    "properties": {
                        "event_id": {
                            "description": "Generated unique identifier ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "add_periodic_event",
                "input_structure": "Requires event details including event ID, name, start time, duration, end time, start date, location, and frequency. The event ID must be a unique identifier string, and other fields should be strings or integers as specified. The tool requires access to a calendar or scheduling system to save the event.",
                "description": "Add periodic event",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "event_id": {
                            "type": "string",
                            "description": "Event ID"
                        },
                        "event_name": {
                            "type": "string",
                            "description": "Event name"
                        },
                        "start_time": {
                            "type": "string",
                            "description": "Event start time"
                        },
                        "duration": {
                            "type": "string",
                            "description": "Event duration"
                        },
                        "end_time": {
                            "type": "string",
                            "description": "Event end time"
                        },
                        "start_date": {
                            "type": "string",
                            "description": "Event start date"
                        },
                        "location": {
                            "type": "string",
                            "description": "Event location"
                        },
                        "frequency": {
                            "type": "integer",
                            "description": "Event frequency (days)"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "A status message indicating whether the event was successfully added to the calendar or scheduling system.",
                    "properties": {
                        "status": {
                            "description": "Whether the event was successfully added",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Call tool to generate unique event id",
                "tool": "generate_unique_id",
                "input_source": "question",
                "param": {
                    "event_name": "Friday Reading Night",
                    "start_time": "Every Friday at 7 PM"
                }
            },
            {
                "step": "1.3 Create and save 'Friday Reading Night' event",
                "tool": "add_periodic_event",
                "input_source": "generate_unique_id tool",
                "param": {
                    "event_id": "<generated unique identifier ID>",
                    "event_name": "Friday Reading Night",
                    "start_time": "Every Friday at 7 PM",
                    "location": "City Library Multi-purpose Hall",
                    "frequency": "7"
                }
            },
            {
                "step": "1.6 Call tool to generate unique event id",
                "tool": "generate_unique_id",
                "input_source": "question",
                "param": {
                    "event_name": "Monthly Department Meet-up",
                    "start_time": "Every month on the first Monday at 9 AM"
                }
            },
            {
                "step": "1.7 Create and save 'Monthly Department Meet-up' event",
                "tool": "add_periodic_event",
                "input_source": "generate_unique_id tool",
                "param": {
                    "event_id": "<generated unique identifier ID>",
                    "event_name": "Monthly Department Meet-up",
                    "start_time": "Every month on the first Monday at 9 AM",
                    "location": "Company 5th Floor Conference Room 1",
                    "frequency": "30"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "I need to create a work plan, which includes adjusting my existing alarm clock from 6:30 AM every workday and 10:00 PM rest reminder to ring at 7:00 AM every day, and setting a new daily alarm at 7:00 AM as well as a one-time meeting reminder for 7:30 AM tomorrow.",
        "toolset": [
            {
                "name": "clock_alarm_change",
                "input_structure": "Requires the original time and frequency of the alarm to be changed, along with the new time and frequency. The user must specify the date and label for the changed alarm.",
                "description": "Change Alarm Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "originalTime": {
                            "description": "The original time of the alarm to be changed",
                            "type": "string"
                        },
                        "date": {
                            "description": "The date after the alarm is changed",
                            "type": "string"
                        },
                        "label": {
                            "description": "The label after the alarm is changed",
                            "type": "string"
                        },
                        "changeTime": {
                            "description": "The time after the alarm is changed",
                            "type": "string"
                        },
                        "originalFrequency": {
                            "description": "The original frequency of the alarm to be changed",
                            "type": "string"
                        },
                        "changeFrequency": {
                            "description": "The frequency after the alarm is changed",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the result of the alarm change operation, typically a confirmation message or status.",
                    "properties": {
                        "clock_alarm_info": {
                            "description": "Alarm change result",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "clock_alarm_set",
                "input_structure": "Requires the time, date, label, and frequency for the new alarm. The user must specify whether the alarm is a one-time event or recurring.",
                "description": "Set Alarm Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "time": {
                            "description": "Alarm Set Time",
                            "type": "string"
                        },
                        "date": {
                            "description": "Alarm Set Date",
                            "type": "string"
                        },
                        "label": {
                            "description": "Alarm Label",
                            "type": "string"
                        },
                        "frequency": {
                            "description": "Alarm Set Frequency, options: Once, Daily, Monday to Sunday, default is Once",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the result of the alarm setting operation, typically a confirmation message or status.",
                    "properties": {
                        "clock_alarm_info": {
                            "description": "Alarm Setting Result",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.2 Change existing alarm time",
                "tool": "clock_alarm_change",
                "input_source": "question",
                "param": {
                    "originalTime": "06:30",
                    "changeTime": "07:00",
                    "originalFrequency": "workdays",
                    "changeFrequency": "daily"
                }
            },
            {
                "step": "2.2 Change existing rest reminder time",
                "tool": "clock_alarm_change",
                "input_source": "question",
                "param": {
                    "originalTime": "22:00",
                    "changeTime": "07:00",
                    "originalFrequency": "daily",
                    "changeFrequency": "daily"
                }
            },
            {
                "step": "3.2 Set the new alarm",
                "tool": "clock_alarm_set",
                "input_source": "question",
                "param": {
                    "time": "07:00",
                    "frequency": "daily"
                }
            },
            {
                "step": "4.2 Set the one-time meeting reminder",
                "tool": "clock_alarm_set",
                "input_source": "question",
                "param": {
                    "time": "07:30",
                    "frequency": "one-time"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "My washing machine has encountered some problems, the brand is Haier, model XQB50-M808, there are issues with leaking and abnormal noise. Please help me schedule a repair service for tomorrow afternoon at 2 o'clock, my contact number is 13800138000, and my home address is Room 501, Unit 2, Building 10, Shaoyaoju, Chaoyang District, Beijing.\n",
        "toolset": [
            {
                "name": "find_authorized_service_provider",
                "input_structure": "Requires the brand of the appliance and the region where the service is needed. Optionally, the model can be specified to narrow down the search. The user should provide accurate brand and region information.",
                "description": "Find authorized repair service providers",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "brand": {
                            "type": "string",
                            "description": "Home appliance brand"
                        },
                        "region": {
                            "type": "string",
                            "description": "Service center location"
                        },
                        "model": {
                            "type": "string",
                            "description": "Air conditioner model"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns a list of authorized service providers and information about the service center. The list includes provider names and contact details.",
                    "properties": {
                        "service_center_info": {
                            "type": "string",
                            "description": "Information of the found service center"
                        },
                        "service_providers": {
                            "type": "array",
                            "description": "List of authorized repair service providers"
                        }
                    }
                }
            },
            {
                "name": "check_service_provider_availability",
                "input_structure": "Requires the service provider ID, date, and time range for the service. The user should ensure the date and time are convenient for them.",
                "description": "Confirm the availability of the service provider",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "provider_id": {
                            "type": "string",
                            "description": "Service provider ID"
                        },
                        "date": {
                            "type": "string",
                            "description": "Date of the scheduled service"
                        },
                        "start_time": {
                            "type": "string",
                            "description": "Start time of the scheduled service"
                        },
                        "end_time": {
                            "type": "string",
                            "description": "End time of the scheduled service"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the availability status of the service provider, including a boolean for availability and a rating score.",
                    "properties": {
                        "availability": {
                            "type": "boolean",
                            "description": "Availability"
                        },
                        "rating": {
                            "type": "number",
                            "description": "Service rating"
                        },
                        "availability_status": {
                            "type": "string",
                            "description": "Availability status of the service provider"
                        }
                    }
                }
            },
            {
                "name": "appliance_repair_request",
                "input_structure": "Requires details about the appliance, including type, brand, model, and issue description. Also needs user contact information, address, and preferred service time.",
                "description": "Appliance Repair Request Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "applianceType": {
                            "description": "Type of appliance to be repaired, such as refrigerator, TV, washing machine, etc.",
                            "type": "string"
                        },
                        "applianceBrand": {
                            "description": "Brand of the appliance to be repaired",
                            "type": "string"
                        },
                        "applianceModel": {
                            "description": "Model of the appliance to be repaired",
                            "type": "string"
                        },
                        "issueDescription": {
                            "description": "Description of the appliance malfunction",
                            "type": "string"
                        },
                        "contactInformation": {
                            "description": "Contact information",
                            "type": "string"
                        },
                        "address": {
                            "description": "Service address",
                            "type": "string"
                        },
                        "time": {
                            "description": "Scheduled service time",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the status of the repair request and a unique request ID for tracking.",
                    "properties": {
                        "request_status": {
                            "description": "Repair request status",
                            "type": "string"
                        },
                        "requestID": {
                            "description": "Repair request ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "confirm_repair_cost_and_payment",
                "input_structure": "Requires the repair request ID to fetch the cost and payment details. The user should have the request ID ready.",
                "description": "Confirm repair costs and payment method",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "request_id": {
                            "type": "string",
                            "description": "Repair request number"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the estimated repair cost and available payment methods.",
                    "properties": {
                        "cost": {
                            "type": "number",
                            "description": "Repair cost"
                        },
                        "payment_method": {
                            "type": "string",
                            "description": "Payment method"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "3.1.1 Find authorized Haier brand repair service provider",
                "tool": "find_authorized_service_provider",
                "input_source": "question",
                "param": {
                    "brand": "Haier",
                    "region": "Chaoyang Distric"
                }
            },
            {
                "step": "3.1.2 Confirm the availability and evaluation of the service provider",
                "tool": "check_service_provider_availability",
                "input_source": "find_authorized_service_provider tool",
                "param": {
                    "provider_id": "<Service Provider ID>",
                    "date": "tomorrow",
                    "start_time": "2 PM",
                    "end_time": "2 PM"
                }
            },
            {
                "step": "3.2.3 Schedule a repair service for tomorrow afternoon at 2 o'clock",
                "tool": "appliance_repair_request",
                "input_source": "question",
                "param": {
                    "applianceType": "Washing machine",
                    "applianceBrand": "Haier",
                    "applianceModel": "XQB50-M808",
                    "issueDescription": "Leaking and abnormal noise",
                    "contactInformation": "13800138000",
                    "address": "Room 50",
                    "time": "tomorrow at 2 PM"
                }
            },
            {
                "step": "3.3.3 Confirm repair costs and payment method",
                "tool": "confirm_repair_cost_and_payment",
                "input_source": "appliance_repair_request tool",
                "param": {
                    "request_id": "<Repair request number>"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "My refrigerator is experiencing abnormal cooling issues, please help me schedule a repair service and perform a status check in two hours. My contact number is 13800138000, and the address is Zhangjiang Town, Pudong New District, Shanghai.\n",
        "toolset": [
            {
                "name": "appliance_repair_request",
                "input_structure": "Requires the type, brand, and model of the appliance, a description of the issue, contact information, address, and a scheduled service time. The user must provide accurate details to ensure proper service scheduling.",
                "description": "Appliance Repair Request Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "applianceType": {
                            "description": "Type of appliance to be repaired, such as refrigerator, TV, washing machine, etc.",
                            "type": "string"
                        },
                        "applianceBrand": {
                            "description": "Brand of the appliance to be repaired",
                            "type": "string"
                        },
                        "applianceModel": {
                            "description": "Model of the appliance to be repaired",
                            "type": "string"
                        },
                        "issueDescription": {
                            "description": "Description of the appliance malfunction",
                            "type": "string"
                        },
                        "contactInformation": {
                            "description": "Contact information",
                            "type": "string"
                        },
                        "address": {
                            "description": "Service address",
                            "type": "string"
                        },
                        "time": {
                            "description": "Scheduled service time",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the repair request status and a unique request ID for tracking purposes.",
                    "properties": {
                        "request_status": {
                            "description": "Repair request status",
                            "type": "string"
                        },
                        "requestID": {
                            "description": "Repair request ID",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "set_reminder",
                "input_structure": "Requires the time and content for the reminder, along with optional fields like reminder title, agenda ID, recipient, reminder date, action, contact information, and frequency. The user must specify when and what to be reminded about.",
                "description": "Set Reminder",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "time": {
                            "type": "string",
                            "description": "Reminder Time"
                        },
                        "content": {
                            "type": "string",
                            "description": "Reminder Content"
                        },
                        "reminder_title": {
                            "type": "string",
                            "description": "Reminder Title"
                        },
                        "agenda_id": {
                            "type": "string",
                            "description": "Agenda ID"
                        },
                        "recipient": {
                            "type": "string",
                            "description": "Recipient of Reminder"
                        },
                        "reminder_date": {
                            "type": "string",
                            "description": "Reminder Date"
                        },
                        "action": {
                            "type": "string",
                            "description": "Action to perform after reminder"
                        },
                        "contactInformation": {
                            "type": "string",
                            "description": "User's Contact Information"
                        },
                        "frequency": {
                            "description": "Frequency of reminder setting, options: once, daily, weekly Monday to Sunday, default is once",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating whether the reminder was set successfully and the status of the reminder setting.",
                    "properties": {
                        "reminder_status": {
                            "type": "string",
                            "description": "Reminder Setting Status"
                        },
                        "reminder_set": {
                            "description": "Whether the reminder was set successfully",
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "name": "appliance_repair_status_query",
                "input_structure": "Requires the repair request ID, appliance type, brand, model, contact information, and address. The user must provide the correct request ID to retrieve the status.",
                "description": "Appliance Repair Inquiry Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "requestID": {
                            "description": "The repair request number to be queried",
                            "type": "string"
                        },
                        "applianceType": {
                            "description": "The type of appliance to be queried for repair",
                            "type": "string"
                        },
                        "applianceBrand": {
                            "description": "The brand of appliance to be queried for repair",
                            "type": "string"
                        },
                        "applianceModel": {
                            "description": "The model of appliance to be queried for repair",
                            "type": "string"
                        },
                        "contactInformation": {
                            "description": "Customer contact information",
                            "type": "string"
                        },
                        "address": {
                            "description": "Customer address",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object containing the current status of the repair request.",
                    "properties": {
                        "repair_status": {
                            "description": "Repair inquiry result",
                            "type": "string"
                        }
                    }
                }
            },
            {
                "name": "notify_user",
                "input_structure": "Requires the user's name, preferred communication method, message content, and contact information. Optional fields include ticket price, availability, updated balance, account ID, appointment ID, service provider contact, and cancellation status. The user must specify how they wish to be notified.",
                "description": "Send notifications through the user's preferred communication method",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "user_name": {
                            "type": "string",
                            "description": "User name"
                        },
                        "preferred_method": {
                            "type": "string",
                            "description": "Preferred communication method"
                        },
                        "message": {
                            "type": "string",
                            "description": "Notification message to be sent"
                        },
                        "contact_information": {
                            "type": "string",
                            "description": "User contact information"
                        },
                        "ticket_price": {
                            "type": "string",
                            "description": "Ticket price"
                        },
                        "ticket_availability": {
                            "type": "string",
                            "description": "Ticket availability information"
                        },
                        "updated_balance": {
                            "type": "string",
                            "description": "Updated user balance information"
                        },
                        "account_id": {
                            "type": "string",
                            "description": "User account ID"
                        },
                        "appointment_id": {
                            "type": "string",
                            "description": "Appointment number"
                        },
                        "service_provider_contact": {
                            "type": "string",
                            "description": "Contact information of the service provider"
                        },
                        "cancellation_status": {
                            "type": "string",
                            "description": "Repair cancellation status"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "An object indicating the status of the notification sending process.",
                    "properties": {
                        "notification_status": {
                            "type": "string",
                            "description": "Notification sending status"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "1.3 Submit repair service request",
                "tool": "appliance_repair_request",
                "input_source": "question",
                "param": {
                    "applianceType": "Refrigerator",
                    "applianceBrand": "<User's refrigerator brand>",
                    "applianceModel": "<User's refrigerator model>",
                    "issueDescription": "Abnormal cooling",
                    "contactInformation": "13800138000",
                    "address": "Zhangjiang Tow",
                    "time": "<Scheduled time>"
                }
            },
            {
                "step": "2.3 Set a reminder",
                "tool": "set_reminder",
                "input_source": "appliance_repair_request tool",
                "param": {
                    "content": "Check refrigerator repair status",
                    "time": "Two hours after the time of appointment submission"
                }
            },
            {
                "step": "3.2 Check the repair status",
                "tool": "appliance_repair_status_query",
                "input_source": "set_reminder tool",
                "param": {
                    "requestID": "<Repair request number>",
                    "applianceType": "Refrigerator"
                }
            },
            {
                "step": "3.4 Notify the user of the repair status",
                "tool": "notify_user",
                "input_source": "appliance_repair_status_query tool",
                "param": {
                    "contact_information": "13800138000",
                    "message": "<Refrigerator repair status>"
                }
            }
        ],
        "reference_count": 4
    },
    {
        "question": "My washing machine is malfunctioning, and I need to schedule a technician to come to my house for repairs. The brand of the washing machine is Little Swan, and the model is TCL-123. The problem is that there is a noise during the washing process. My contact number is 13122334455, and the address is in Nanhui New Town, Pudong New District, Shanghai. I hope the repair can be done tomorrow morning at 9 o'clock.\n",
        "toolset": [
            {
                "name": "search_authorized_service_provider",
                "input_structure": "Requires the brand and model of the appliance, the user's location, and the type of appliance. The user should provide accurate location details to find a nearby service provider.",
                "description": "Search for authorized repair service providers",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "provider_brand": {
                            "type": "string",
                            "description": "Home appliance brand"
                        },
                        "provider_model": {
                            "type": "string",
                            "description": "Home appliance model"
                        },
                        "userLocation": {
                            "type": "string",
                            "description": "User's location"
                        },
                        "applianceType": {
                            "type": "string",
                            "description": "Type of home appliance"
                        },
                        "address": {
                            "type": "string",
                            "description": "Service area address"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides information about the authorized service provider, including contact details and service center information.",
                    "properties": {
                        "service_provider": {
                            "type": "string",
                            "description": "Information of the found service provider"
                        },
                        "service_center_contact": {
                            "type": "string",
                            "description": "Contact information of the repair service center obtained"
                        },
                        "service_center_info": {
                            "type": "string",
                            "description": "Authorized repair service center information"
                        }
                    }
                }
            },
            {
                "name": "check_service_provider_coverage",
                "input_structure": "Requires the user's area and preferred payment method. The user should ensure the area is correctly specified to verify coverage.",
                "description": "Check if the service provider covers the specified area",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "area": {
                            "type": "string",
                            "description": "User's location area"
                        },
                        "payment_method": {
                            "type": "string",
                            "description": "User's payment method"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Returns the coverage status indicating whether the service provider can operate in the specified area.",
                    "properties": {
                        "coverage_status": {
                            "type": "string",
                            "description": "Service provider coverage status"
                        }
                    }
                }
            },
            {
                "name": "call_service_provider",
                "input_structure": "Requires the service center's name and contact information. The user should ensure the contact number is correct for successful communication.",
                "description": "Call the service provider's contact number",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "service_center": {
                            "type": "string",
                            "description": "Maintenance service center"
                        },
                        "contact_information": {
                            "type": "string",
                            "description": "Contact phone number provided by the user"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Indicates the status of the phone call, whether it was successful or failed.",
                    "properties": {
                        "call_status": {
                            "type": "string",
                            "description": "Status of the phone call"
                        }
                    }
                }
            },
            {
                "name": "appliance_repair_request",
                "input_structure": "Requires details about the appliance, issue description, contact information, address, and preferred service time. The user should provide complete and accurate information to ensure a successful repair request.",
                "description": "Appliance Repair Request Tool",
                "arguments": {
                    "type": "object",
                    "properties": {
                        "applianceType": {
                            "description": "Type of appliance to be repaired, such as refrigerator, TV, washing machine, etc.",
                            "type": "string"
                        },
                        "applianceBrand": {
                            "description": "Brand of the appliance to be repaired",
                            "type": "string"
                        },
                        "applianceModel": {
                            "description": "Model of the appliance to be repaired",
                            "type": "string"
                        },
                        "issueDescription": {
                            "description": "Description of the appliance malfunction",
                            "type": "string"
                        },
                        "contactInformation": {
                            "description": "Contact information",
                            "type": "string"
                        },
                        "address": {
                            "description": "Service address",
                            "type": "string"
                        },
                        "time": {
                            "description": "Scheduled service time",
                            "type": "string"
                        }
                    }
                },
                "results": {
                    "type": "object",
                    "output_structure": "Provides the status of the repair request and a unique request ID for tracking purposes.",
                    "properties": {
                        "request_status": {
                            "description": "Repair request status",
                            "type": "string"
                        },
                        "requestID": {
                            "description": "Repair request ID",
                            "type": "string"
                        }
                    }
                }
            }
        ],
        "reference": [
            {
                "step": "3.1.1 Online search for Little Swan authorized repair service provider",
                "tool": "search_authorized_service_provider",
                "input_source": "question",
                "param": {
                    "provider_brand": "Little Swan",
                    "userLocation": "Nanhui New Tow"
                }
            },
            {
                "step": "3.1.2 Confirm the service provider covers the user's area",
                "tool": "check_service_provider_coverage",
                "input_source": "search_authorized_service_provider tool",
                "param": {
                    "area": "Nanhui New Tow"
                }
            },
            {
                "step": "3.2 Contact the repair service provider",
                "tool": "call_service_provider",
                "input_source": "check_service_provider_coverage tool",
                "param": {
                    "service_center": "<Service Provider Information>",
                    "contact_information": "13122334455"
                }
            },
            {
                "step": "3.3.2 Confirm the appointment time and obtain the repairman's information",
                "tool": "appliance_repair_request",
                "input_source": "question",
                "param": {
                    "applianceType": "Washing machine",
                    "applianceBrand": "Little Swan",
                    "applianceModel": "TCL-123",
                    "issueDescription": "There is a noise during the washing process",
                    "contactInformation": "13122334455",
                    "address": "Nanhui New Tow",
                    "time": "tomorrow morning at 9 o'clock"
                }
            }
        ],
        "reference_count": 4
    }
]